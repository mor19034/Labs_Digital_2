

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 01:17:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0013                     _SSPBUF	set	19
   370  0014                     _SSPCON	set	20
   371  001F                     _ADCON0bits	set	31
   372  000B                     _INTCONbits	set	11
   373  0005                     _PORTA	set	5
   374  001E                     _ADRESH	set	30
   375  000C                     _PIR1bits	set	12
   376  0006                     _PORTB	set	6
   377  0063                     _SSPIF	set	99
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  009F                     _ADCON1bits	set	159
   381  008C                     _PIE1bits	set	140
   382  008F                     _OSCCONbits	set	143
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  0085                     _TRISAbits	set	133
   386  043B                     _TRISC3	set	1083
   387  043D                     _TRISC5	set	1085
   388  0189                     _ANSELHbits	set	393
   389  0188                     _ANSELbits	set	392
   390  0189                     _ANSELH	set	393
   391  0188                     _ANSEL	set	392
   392                           
   393                           	psect	cinit
   394  0011                     start_initialization:	
   395                           ; #config settings
   396                           
   397  0011                     __initialization:
   398                           
   399                           ; Clear objects allocated to COMMON
   400  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   401  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   402                           
   403                           ; Clear objects allocated to BANK0
   404  0013  1283               	bcf	3,5	;RP0=0, select bank0
   405  0014  1303               	bcf	3,6	;RP1=0, select bank0
   406  0015  01A8               	clrf	__pbssBANK0& (0+127)
   407  0016                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  0016                     __end_of__initialization:
   411  0016  0183               	clrf	3
   412  0017  120A  118A  298D   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0077                     __pbssCOMMON:
   416  0077                     _var_adc1:
   417  0077                     	ds	1
   418  0078                     _var_adc0:
   419  0078                     	ds	1
   420                           
   421                           	psect	bssBANK0
   422  0028                     __pbssBANK0:
   423  0028                     _canal_flag:
   424  0028                     	ds	1
   425                           
   426                           	psect	cstackCOMMON
   427  0070                     __pcstackCOMMON:
   428  0070                     ?_spiRead:
   429  0070                     ??_spiRead:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_spiWrite:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_spiWrite:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_setup:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_canal_ADC:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_Select_ch:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_isr:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_spiReceiveWait:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ??_spiReceiveWait:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     spiWrite@dat:	
   460                           ; 1 bytes @ 0x0
   461                           
   462                           
   463                           ; 1 bytes @ 0x0
   464  0070                     	ds	1
   465  0071                     ??_isr:
   466                           
   467                           ; 1 bytes @ 0x1
   468  0071                     	ds	5
   469  0076                     isr@write:
   470                           
   471                           ; 1 bytes @ 0x6
   472  0076                     	ds	1
   473                           
   474                           	psect	cstackBANK0
   475  0020                     __pcstackBANK0:
   476  0020                     ??_canal_ADC:
   477  0020                     ??_Select_ch:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0020                     ?_spiInit:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0020                     ?_conf_ADC:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0020                     conf_ADC@isr:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0020                     spiInit@sDataSample:	
   490                           ; 1 bytes @ 0x0
   491                           
   492                           
   493                           ; 1 bytes @ 0x0
   494  0020                     	ds	1
   495  0021                     conf_ADC@Vref:
   496  0021                     spiInit@sClockIdle:	
   497                           ; 1 bytes @ 0x1
   498                           
   499                           
   500                           ; 1 bytes @ 0x1
   501  0021                     	ds	1
   502  0022                     conf_ADC@justRL:
   503  0022                     canal_ADC@channel:	
   504                           ; 1 bytes @ 0x2
   505                           
   506  0022                     Select_ch@channel:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0022                     spiInit@sTransmitEdge:	
   510                           ; 1 bytes @ 0x2
   511                           
   512                           
   513                           ; 1 bytes @ 0x2
   514  0022                     	ds	1
   515  0023                     ??_spiInit:
   516  0023                     ??_conf_ADC:	
   517                           ; 1 bytes @ 0x3
   518                           
   519  0023                     spiInit@sType:	
   520                           ; 1 bytes @ 0x3
   521                           
   522                           
   523                           ; 1 bytes @ 0x3
   524  0023                     	ds	2
   525  0025                     conf_ADC@adcFrec:
   526                           
   527                           ; 1 bytes @ 0x5
   528  0025                     	ds	1
   529  0026                     ??_setup:
   530                           
   531                           ; 1 bytes @ 0x6
   532  0026                     	ds	1
   533  0027                     ??_main:
   534                           
   535                           ; 1 bytes @ 0x7
   536  0027                     	ds	1
   537                           
   538                           	psect	maintext
   539  018D                     __pmaintext:	
   540 ;;
   541 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   542 ;;
   543 ;; *************** function _main *****************
   544 ;; Defined at:
   545 ;;		line 59 in file "Lab03_slave.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : B00/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          0       1       0       0       0
   562 ;;      Totals:         0       1       0       0       0
   563 ;;Total ram usage:        1 bytes
   564 ;; Hardware stack levels required when called:    5
   565 ;; This function calls:
   566 ;;		_Select_ch
   567 ;;		_canal_ADC
   568 ;;		_setup
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _main
   576  018D                     _main:
   577  018D                     l1511:	
   578                           ;incstack = 0
   579                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   580                           
   581                           
   582                           ;Lab03_slave.c: 60:     TRISAbits.TRISA5 = 1;
   583  018D  120A  118A  221A  120A  118A  	fcall	_setup
   584                           
   585                           ;Lab03_slave.c: 61:     TRISA = 0b00001001;
   586  0192  3000               	movlw	0
   587  0193  120A  118A  20AF  120A  118A  	fcall	_canal_ADC
   588                           
   589                           ;Lab03_slave.c: 62:     TRISB = 0x00;
   590  0198  3003               	movlw	3
   591  0199  120A  118A  20AF  120A  118A  	fcall	_canal_ADC
   592                           
   593                           ;Lab03_slave.c: 63: 
   594  019E  3000               	movlw	0
   595  019F  120A  118A  201A  120A  118A  	fcall	_Select_ch
   596  01A4                     l1513:
   597                           
   598                           ;Lab03_slave.c: 66: 
   599  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   600  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   601  01A6  1F0C               	btfss	12,6	;volatile
   602  01A7  29A9               	goto	u231
   603  01A8  29AA               	goto	u230
   604  01A9                     u231:
   605  01A9  29D8               	goto	l67
   606  01AA                     u230:
   607  01AA                     l1515:
   608                           
   609                           ;Lab03_slave.c: 67:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   610  01AA  0828               	movf	_canal_flag,w
   611  01AB  1D03               	btfss	3,2
   612  01AC  29AE               	goto	u241
   613  01AD  29AF               	goto	u240
   614  01AE                     u241:
   615  01AE  29C0               	goto	l1523
   616  01AF                     u240:
   617  01AF                     l1517:
   618                           
   619                           ;Lab03_slave.c: 68: 
   620  01AF  081E               	movf	30,w	;volatile
   621  01B0  00A7               	movwf	??_main
   622  01B1  0827               	movf	??_main,w
   623  01B2  00F8               	movwf	_var_adc0
   624  01B3                     l1519:
   625                           
   626                           ;Lab03_slave.c: 69: 
   627  01B3  3000               	movlw	0
   628  01B4  120A  118A  201A  120A  118A  	fcall	_Select_ch
   629  01B9                     l1521:
   630                           
   631                           ;Lab03_slave.c: 70:     OSCCONbits.IRCF = 111;
   632  01B9  3001               	movlw	1
   633  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   634  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   635  01BC  00A7               	movwf	??_main
   636  01BD  0827               	movf	??_main,w
   637  01BE  07A8               	addwf	_canal_flag,f
   638                           
   639                           ;Lab03_slave.c: 71:     OSCCONbits.SCS = 1;
   640  01BF  29CE               	goto	l1529
   641  01C0                     l1523:
   642                           
   643                           ;Lab03_slave.c: 73:     conf_ADC(2, 0, 3, 0);
   644  01C0  081E               	movf	30,w	;volatile
   645  01C1  00A7               	movwf	??_main
   646  01C2  0827               	movf	??_main,w
   647  01C3  00F7               	movwf	_var_adc1
   648  01C4                     l1525:
   649                           
   650                           ;Lab03_slave.c: 74: 
   651  01C4  3003               	movlw	3
   652  01C5  120A  118A  201A  120A  118A  	fcall	_Select_ch
   653  01CA                     l1527:
   654                           
   655                           ;Lab03_slave.c: 75: 
   656  01CA  3001               	movlw	1
   657  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   658  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   659  01CD  02A8               	subwf	_canal_flag,f
   660  01CE                     l1529:
   661                           
   662                           ;Lab03_slave.c: 77:     INTCONbits.GIE = 1;
   663  01CE  3084               	movlw	132
   664  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   665  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   666  01D1  00A7               	movwf	??_main
   667  01D2                     u257:
   668  01D2  0BA7               	decfsz	??_main,f
   669  01D3  29D2               	goto	u257
   670  01D4  0000               	nop
   671  01D5                     l1531:
   672                           
   673                           ;Lab03_slave.c: 78:     INTCONbits.PEIE = 1;
   674  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   675  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   676  01D7  130C               	bcf	12,6	;volatile
   677  01D8                     l67:
   678  01D8  120A  118A  280E   	ljmp	start
   679  01DB                     __end_of_main:
   680                           
   681                           	psect	text1
   682  021A                     __ptext1:	
   683 ;; *************** function _setup *****************
   684 ;; Defined at:
   685 ;;		line 86 in file "Lab03_slave.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0       1       0       0       0
   702 ;;      Totals:         0       1       0       0       0
   703 ;;Total ram usage:        1 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    4
   706 ;; This function calls:
   707 ;;		_conf_ADC
   708 ;;		_spiInit
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _setup
   716  021A                     _setup:
   717  021A                     l1487:	
   718                           ;incstack = 0
   719                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   720                           
   721  021A  3009               	movlw	9
   722  021B  1683               	bsf	3,5	;RP0=1, select bank3
   723  021C  1703               	bsf	3,6	;RP1=1, select bank3
   724  021D  0088               	movwf	8	;volatile
   725  021E                     l1489:
   726  021E  0189               	clrf	9	;volatile
   727  021F                     l1491:
   728  021F  1683               	bsf	3,5	;RP0=1, select bank1
   729  0220  1303               	bcf	3,6	;RP1=0, select bank1
   730  0221  1685               	bsf	5,5	;volatile
   731  0222                     l1493:
   732  0222  3009               	movlw	9
   733  0223  0085               	movwf	5	;volatile
   734  0224  0186               	clrf	6	;volatile
   735  0225  1283               	bcf	3,5	;RP0=0, select bank0
   736  0226  1303               	bcf	3,6	;RP1=0, select bank0
   737  0227  0185               	clrf	5	;volatile
   738  0228  0186               	clrf	6	;volatile
   739  0229                     l1495:
   740  0229  01A0               	clrf	spiInit@sDataSample
   741  022A  01A1               	clrf	spiInit@sClockIdle
   742  022B  01A2               	clrf	spiInit@sTransmitEdge
   743  022C  3024               	movlw	36
   744  022D  120A  118A  224E  120A  118A  	fcall	_spiInit
   745  0232                     l1497:
   746  0232  3070               	movlw	112
   747  0233  1683               	bsf	3,5	;RP0=1, select bank1
   748  0234  1303               	bcf	3,6	;RP1=0, select bank1
   749  0235  048F               	iorwf	15,f	;volatile
   750  0236                     l1499:
   751  0236  140F               	bsf	15,0	;volatile
   752  0237                     l1501:
   753  0237  1283               	bcf	3,5	;RP0=0, select bank0
   754  0238  1303               	bcf	3,6	;RP1=0, select bank0
   755  0239  01A0               	clrf	conf_ADC@isr
   756  023A  3003               	movlw	3
   757  023B  00A6               	movwf	??_setup
   758  023C  0826               	movf	??_setup,w
   759  023D  00A1               	movwf	conf_ADC@Vref
   760  023E  01A2               	clrf	conf_ADC@justRL
   761  023F  3002               	movlw	2
   762  0240  120A  118A  2120  120A  118A  	fcall	_conf_ADC
   763  0245                     l1503:
   764  0245  178B               	bsf	11,7	;volatile
   765  0246                     l1505:
   766  0246  170B               	bsf	11,6	;volatile
   767  0247                     l1507:
   768  0247  1683               	bsf	3,5	;RP0=1, select bank1
   769  0248  1303               	bcf	3,6	;RP1=0, select bank1
   770  0249  158C               	bsf	12,3	;volatile
   771  024A                     l1509:
   772  024A  1283               	bcf	3,5	;RP0=0, select bank0
   773  024B  1303               	bcf	3,6	;RP1=0, select bank0
   774  024C  118C               	bcf	12,3	;volatile
   775  024D                     l72:
   776  024D  0008               	return
   777  024E                     __end_of_setup:
   778                           
   779                           	psect	text2
   780  024E                     __ptext2:	
   781 ;; *************** function _spiInit *****************
   782 ;; Defined at:
   783 ;;		line 53 in file "SPI_slave.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  sType           1    wreg     enum E1475
   786 ;;  sDataSample     1    0[BANK0 ] enum E1483
   787 ;;  sClockIdle      1    1[BANK0 ] enum E1487
   788 ;;  sTransmitEdg    1    2[BANK0 ] enum E1491
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  sType           1    3[BANK0 ] enum E1475
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       3       0       0       0
   801 ;;      Locals:         0       1       0       0       0
   802 ;;      Temps:          0       0       0       0       0
   803 ;;      Totals:         0       4       0       0       0
   804 ;;Total ram usage:        4 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    3
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_setup
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function _spiInit
   816  024E                     _spiInit:
   817                           
   818                           ;incstack = 0
   819                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   820                           ;spiInit@sType stored from wreg
   821  024E  1283               	bcf	3,5	;RP0=0, select bank0
   822  024F  1303               	bcf	3,6	;RP1=0, select bank0
   823  0250  00A3               	movwf	spiInit@sType
   824  0251                     l1477:
   825                           
   826                           ;SPI_slave.c: 53: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_slave.c: 54: {;SPI_slave.c: 55:     
      +                          TRISC5 = 0;
   827  0251  1683               	bsf	3,5	;RP0=1, select bank1
   828  0252  1303               	bcf	3,6	;RP1=0, select bank1
   829  0253  1287               	bcf	7,5	;volatile
   830                           
   831                           ;SPI_slave.c: 56:     if(sType & 0b00000100)
   832  0254  1283               	bcf	3,5	;RP0=0, select bank0
   833  0255  1303               	bcf	3,6	;RP1=0, select bank0
   834  0256  1D23               	btfss	spiInit@sType,2
   835  0257  2A59               	goto	u221
   836  0258  2A5A               	goto	u220
   837  0259                     u221:
   838  0259  2A60               	goto	l1483
   839  025A                     u220:
   840  025A                     l1479:
   841                           
   842                           ;SPI_slave.c: 57:     {;SPI_slave.c: 58:         SSPSTAT = sTransmitEdge;
   843  025A  0822               	movf	spiInit@sTransmitEdge,w
   844  025B  1683               	bsf	3,5	;RP0=1, select bank1
   845  025C  1303               	bcf	3,6	;RP1=0, select bank1
   846  025D  0094               	movwf	20	;volatile
   847  025E                     l1481:
   848                           
   849                           ;SPI_slave.c: 59:         TRISC3 = 1;
   850  025E  1587               	bsf	7,3	;volatile
   851                           
   852                           ;SPI_slave.c: 60:     }
   853  025F  2A66               	goto	l201
   854  0260                     l1483:
   855                           
   856                           ;SPI_slave.c: 62:     {;SPI_slave.c: 63:         SSPSTAT = sDataSample | sTransmitEdge;
   857  0260  0820               	movf	spiInit@sDataSample,w
   858  0261  0422               	iorwf	spiInit@sTransmitEdge,w
   859  0262  1683               	bsf	3,5	;RP0=1, select bank1
   860  0263  1303               	bcf	3,6	;RP1=0, select bank1
   861  0264  0094               	movwf	20	;volatile
   862  0265                     l1485:
   863                           
   864                           ;SPI_slave.c: 64:         TRISC3 = 0;
   865  0265  1187               	bcf	7,3	;volatile
   866  0266                     l201:	
   867                           ;SPI_slave.c: 65:     }
   868                           
   869                           
   870                           ;SPI_slave.c: 67:     SSPCON = sType | sClockIdle;
   871  0266  1283               	bcf	3,5	;RP0=0, select bank0
   872  0267  1303               	bcf	3,6	;RP1=0, select bank0
   873  0268  0823               	movf	spiInit@sType,w
   874  0269  0421               	iorwf	spiInit@sClockIdle,w
   875  026A  0094               	movwf	20	;volatile
   876  026B                     l202:
   877  026B  0008               	return
   878  026C                     __end_of_spiInit:
   879                           
   880                           	psect	text3
   881  0120                     __ptext3:	
   882 ;; *************** function _conf_ADC *****************
   883 ;; Defined at:
   884 ;;		line 16 in file "ADC.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  adcFrec         1    wreg     unsigned char 
   887 ;;  isr             1    0[BANK0 ] unsigned char 
   888 ;;  Vref            1    1[BANK0 ] unsigned char 
   889 ;;  justRL          1    2[BANK0 ] unsigned char 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  adcFrec         1    5[BANK0 ] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       3       0       0       0
   902 ;;      Locals:         0       1       0       0       0
   903 ;;      Temps:          0       2       0       0       0
   904 ;;      Totals:         0       6       0       0       0
   905 ;;Total ram usage:        6 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    3
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_setup
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _conf_ADC
   917  0120                     _conf_ADC:
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _conf_ADC: [wreg-fsr0h+status,2+status,0]
   921                           ;conf_ADC@adcFrec stored from wreg
   922  0120  1283               	bcf	3,5	;RP0=0, select bank0
   923  0121  1303               	bcf	3,6	;RP1=0, select bank0
   924  0122  00A5               	movwf	conf_ADC@adcFrec
   925  0123                     l1215:
   926                           
   927                           ;ADC.c: 17:     ADCON0bits.ADON = 1;
   928  0123  141F               	bsf	31,0	;volatile
   929                           
   930                           ;ADC.c: 19:     switch(adcFrec){
   931  0124  2935               	goto	l1227
   932  0125                     l1217:
   933                           
   934                           ;ADC.c: 21:             ADCON0bits.ADCS = 00;
   935  0125  303F               	movlw	-193
   936  0126  059F               	andwf	31,f	;volatile
   937                           
   938                           ;ADC.c: 22:             break;
   939  0127  294B               	goto	l1229
   940  0128                     l1219:
   941                           
   942                           ;ADC.c: 24:             ADCON0bits.ADCS = 01;
   943  0128  081F               	movf	31,w	;volatile
   944  0129  393F               	andlw	-193
   945  012A  3840               	iorlw	64
   946  012B  009F               	movwf	31	;volatile
   947                           
   948                           ;ADC.c: 25:             break;
   949  012C  294B               	goto	l1229
   950  012D                     l1221:
   951                           
   952                           ;ADC.c: 27:             ADCON0bits.ADCS = 10;
   953  012D  081F               	movf	31,w	;volatile
   954  012E  393F               	andlw	-193
   955  012F  3880               	iorlw	128
   956  0130  009F               	movwf	31	;volatile
   957                           
   958                           ;ADC.c: 28:             break;
   959  0131  294B               	goto	l1229
   960  0132                     l1223:
   961                           
   962                           ;ADC.c: 30:             ADCON0bits.ADCS = 11;
   963  0132  30C0               	movlw	192
   964  0133  049F               	iorwf	31,f	;volatile
   965                           
   966                           ;ADC.c: 31:             break;
   967  0134  294B               	goto	l1229
   968  0135                     l1227:
   969  0135  0825               	movf	conf_ADC@adcFrec,w
   970  0136  00A3               	movwf	??_conf_ADC
   971  0137  01A4               	clrf	??_conf_ADC+1
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ; direct_byte           11     8 (fixed)
   980                           ; jumptable            260     6 (fixed)
   981                           ;	Chosen strategy is simple_byte
   982  0138  0824               	movf	??_conf_ADC+1,w
   983  0139  3A00               	xorlw	0	; case 0
   984  013A  1903               	skipnz
   985  013B  293D               	goto	l1655
   986  013C  294B               	goto	l1229
   987  013D                     l1655:
   988                           
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 4, Range of values is 0 to 3
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte           13     7 (average)
   994                           ; direct_byte           20     8 (fixed)
   995                           ; jumptable            260     6 (fixed)
   996                           ;	Chosen strategy is simple_byte
   997  013D  0823               	movf	??_conf_ADC,w
   998  013E  3A00               	xorlw	0	; case 0
   999  013F  1903               	skipnz
  1000  0140  2925               	goto	l1217
  1001  0141  3A01               	xorlw	1	; case 1
  1002  0142  1903               	skipnz
  1003  0143  2928               	goto	l1219
  1004  0144  3A03               	xorlw	3	; case 2
  1005  0145  1903               	skipnz
  1006  0146  292D               	goto	l1221
  1007  0147  3A01               	xorlw	1	; case 3
  1008  0148  1903               	skipnz
  1009  0149  2932               	goto	l1223
  1010  014A  294B               	goto	l1229
  1011  014B                     l1229:
  1012                           
  1013                           ;ADC.c: 33:     if (isr == 1) {
  1014  014B  0320               	decf	conf_ADC@isr,w
  1015  014C  1D03               	btfss	3,2
  1016  014D  294F               	goto	u181
  1017  014E  2950               	goto	u180
  1018  014F                     u181:
  1019  014F  296B               	goto	l1235
  1020  0150                     u180:
  1021  0150                     l1231:
  1022                           
  1023                           ;ADC.c: 34:         PIE1bits.ADIE = 1;
  1024  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1025  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1026  0152  170C               	bsf	12,6	;volatile
  1027                           
  1028                           ;ADC.c: 35:         PIR1bits.ADIF = 0;
  1029  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0155  130C               	bcf	12,6	;volatile
  1032  0156  296B               	goto	l1235
  1033  0157                     l97:	
  1034                           ;ADC.c: 39:         case 0:
  1035                           
  1036                           
  1037                           ;ADC.c: 40:             ADCON1bits.VCFG0 = 1;
  1038  0157  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0158  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0159  161F               	bsf	31,4	;volatile
  1041                           
  1042                           ;ADC.c: 41:             ADCON1bits.VCFG1 = 0;
  1043  015A  129F               	bcf	31,5	;volatile
  1044                           
  1045                           ;ADC.c: 42:             break;
  1046  015B  297E               	goto	l1237
  1047  015C                     l99:	
  1048                           ;ADC.c: 43:         case 1:
  1049                           
  1050                           
  1051                           ;ADC.c: 44:             ADCON1bits.VCFG0 = 0;
  1052  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1053  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1054  015E  121F               	bcf	31,4	;volatile
  1055                           
  1056                           ;ADC.c: 45:             ADCON1bits.VCFG1 = 1;
  1057  015F  169F               	bsf	31,5	;volatile
  1058                           
  1059                           ;ADC.c: 46:             break;
  1060  0160  297E               	goto	l1237
  1061  0161                     l100:	
  1062                           ;ADC.c: 47:         case 2:
  1063                           
  1064                           
  1065                           ;ADC.c: 48:             ADCON1bits.VCFG0 = 1;
  1066  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1067  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1068  0163  161F               	bsf	31,4	;volatile
  1069                           
  1070                           ;ADC.c: 49:             ADCON1bits.VCFG1 = 1;
  1071  0164  169F               	bsf	31,5	;volatile
  1072                           
  1073                           ;ADC.c: 50:             break;
  1074  0165  297E               	goto	l1237
  1075  0166                     l101:	
  1076                           ;ADC.c: 51:         default:
  1077                           
  1078                           
  1079                           ;ADC.c: 52:             ADCON1bits.VCFG0 = 0;
  1080  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1081  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1082  0168  121F               	bcf	31,4	;volatile
  1083                           
  1084                           ;ADC.c: 53:             ADCON1bits.VCFG1 = 0;
  1085  0169  129F               	bcf	31,5	;volatile
  1086                           
  1087                           ;ADC.c: 54:             break;
  1088  016A  297E               	goto	l1237
  1089  016B                     l1235:
  1090  016B  0821               	movf	conf_ADC@Vref,w
  1091  016C  00A3               	movwf	??_conf_ADC
  1092  016D  01A4               	clrf	??_conf_ADC+1
  1093                           
  1094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1095                           ; Switch size 1, requested type "simple"
  1096                           ; Number of cases is 1, Range of values is 0 to 0
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; simple_byte            4     3 (average)
  1100                           ; direct_byte           11     8 (fixed)
  1101                           ; jumptable            260     6 (fixed)
  1102                           ;	Chosen strategy is simple_byte
  1103  016E  0824               	movf	??_conf_ADC+1,w
  1104  016F  3A00               	xorlw	0	; case 0
  1105  0170  1903               	skipnz
  1106  0171  2973               	goto	l1657
  1107  0172  2966               	goto	l101
  1108  0173                     l1657:
  1109                           
  1110                           ; Switch size 1, requested type "simple"
  1111                           ; Number of cases is 3, Range of values is 0 to 2
  1112                           ; switch strategies available:
  1113                           ; Name         Instructions Cycles
  1114                           ; simple_byte           10     6 (average)
  1115                           ; direct_byte           17     8 (fixed)
  1116                           ; jumptable            260     6 (fixed)
  1117                           ;	Chosen strategy is simple_byte
  1118  0173  0823               	movf	??_conf_ADC,w
  1119  0174  3A00               	xorlw	0	; case 0
  1120  0175  1903               	skipnz
  1121  0176  2957               	goto	l97
  1122  0177  3A01               	xorlw	1	; case 1
  1123  0178  1903               	skipnz
  1124  0179  295C               	goto	l99
  1125  017A  3A03               	xorlw	3	; case 2
  1126  017B  1903               	skipnz
  1127  017C  2961               	goto	l100
  1128  017D  2966               	goto	l101
  1129  017E                     l1237:
  1130                           
  1131                           ;ADC.c: 56:     if (justRL == 0){
  1132  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1133  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0180  0822               	movf	conf_ADC@justRL,w
  1135  0181  1D03               	btfss	3,2
  1136  0182  2984               	goto	u191
  1137  0183  2985               	goto	u190
  1138  0184                     u191:
  1139  0184  2989               	goto	l102
  1140  0185                     u190:
  1141  0185                     l1239:
  1142                           
  1143                           ;ADC.c: 57:         ADCON1bits.ADFM = 0;
  1144  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1145  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1146  0187  139F               	bcf	31,7	;volatile
  1147                           
  1148                           ;ADC.c: 58:     }
  1149  0188  298C               	goto	l104
  1150  0189                     l102:	
  1151                           ;ADC.c: 59:     else{
  1152                           
  1153                           
  1154                           ;ADC.c: 60:         ADCON1bits.ADFM = 1;
  1155  0189  1683               	bsf	3,5	;RP0=1, select bank1
  1156  018A  1303               	bcf	3,6	;RP1=0, select bank1
  1157  018B  179F               	bsf	31,7	;volatile
  1158  018C                     l104:
  1159  018C  0008               	return
  1160  018D                     __end_of_conf_ADC:
  1161                           
  1162                           	psect	text4
  1163  00AF                     __ptext4:	
  1164 ;; *************** function _canal_ADC *****************
  1165 ;; Defined at:
  1166 ;;		line 128 in file "ADC.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  channel         1    wreg     unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  channel         1    2[BANK0 ] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       1       0       0       0
  1182 ;;      Temps:          0       2       0       0       0
  1183 ;;      Totals:         0       3       0       0       0
  1184 ;;Total ram usage:        3 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _canal_ADC
  1196  00AF                     _canal_ADC:
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _canal_ADC: [wreg-fsr0h+status,2+status,0]
  1200                           ;canal_ADC@channel stored from wreg
  1201  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1202  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1203  00B1  00A2               	movwf	canal_ADC@channel
  1204  00B2                     l1273:
  1205                           
  1206                           ;ADC.c: 129:     switch (channel) {
  1207  00B2  28EB               	goto	l1277
  1208  00B3                     l134:	
  1209                           ;ADC.c: 130:         case 0:
  1210                           
  1211                           
  1212                           ;ADC.c: 131:             ANSELbits.ANS0 = 1;
  1213  00B3  1683               	bsf	3,5	;RP0=1, select bank3
  1214  00B4  1703               	bsf	3,6	;RP1=1, select bank3
  1215  00B5  1408               	bsf	8,0	;volatile
  1216                           
  1217                           ;ADC.c: 132:             break;
  1218  00B6  291F               	goto	l149
  1219  00B7                     l136:	
  1220                           ;ADC.c: 133:         case 1:
  1221                           
  1222                           
  1223                           ;ADC.c: 134:             ANSELbits.ANS1 = 1;
  1224  00B7  1683               	bsf	3,5	;RP0=1, select bank3
  1225  00B8  1703               	bsf	3,6	;RP1=1, select bank3
  1226  00B9  1488               	bsf	8,1	;volatile
  1227                           
  1228                           ;ADC.c: 135:             break;
  1229  00BA  291F               	goto	l149
  1230  00BB                     l137:	
  1231                           ;ADC.c: 136:         case 2:
  1232                           
  1233                           
  1234                           ;ADC.c: 137:             ANSELbits.ANS2 = 1;
  1235  00BB  1683               	bsf	3,5	;RP0=1, select bank3
  1236  00BC  1703               	bsf	3,6	;RP1=1, select bank3
  1237  00BD  1508               	bsf	8,2	;volatile
  1238                           
  1239                           ;ADC.c: 138:             break;
  1240  00BE  291F               	goto	l149
  1241  00BF                     l138:	
  1242                           ;ADC.c: 139:         case 3:
  1243                           
  1244                           
  1245                           ;ADC.c: 140:             ANSELbits.ANS3 = 1;
  1246  00BF  1683               	bsf	3,5	;RP0=1, select bank3
  1247  00C0  1703               	bsf	3,6	;RP1=1, select bank3
  1248  00C1  1588               	bsf	8,3	;volatile
  1249                           
  1250                           ;ADC.c: 141:             break;
  1251  00C2  291F               	goto	l149
  1252  00C3                     l139:	
  1253                           ;ADC.c: 142:         case 4:
  1254                           
  1255                           
  1256                           ;ADC.c: 143:             ANSELbits.ANS4 = 1;
  1257  00C3  1683               	bsf	3,5	;RP0=1, select bank3
  1258  00C4  1703               	bsf	3,6	;RP1=1, select bank3
  1259  00C5  1608               	bsf	8,4	;volatile
  1260                           
  1261                           ;ADC.c: 144:             break;
  1262  00C6  291F               	goto	l149
  1263  00C7                     l140:	
  1264                           ;ADC.c: 145:         case 5:
  1265                           
  1266                           
  1267                           ;ADC.c: 146:             ANSELbits.ANS5 = 1;
  1268  00C7  1683               	bsf	3,5	;RP0=1, select bank3
  1269  00C8  1703               	bsf	3,6	;RP1=1, select bank3
  1270  00C9  1688               	bsf	8,5	;volatile
  1271                           
  1272                           ;ADC.c: 147:             break;
  1273  00CA  291F               	goto	l149
  1274  00CB                     l141:	
  1275                           ;ADC.c: 148:         case 6:
  1276                           
  1277                           
  1278                           ;ADC.c: 149:             ANSELbits.ANS6 = 1;
  1279  00CB  1683               	bsf	3,5	;RP0=1, select bank3
  1280  00CC  1703               	bsf	3,6	;RP1=1, select bank3
  1281  00CD  1708               	bsf	8,6	;volatile
  1282                           
  1283                           ;ADC.c: 150:             break;
  1284  00CE  291F               	goto	l149
  1285  00CF                     l142:	
  1286                           ;ADC.c: 151:         case 7:
  1287                           
  1288                           
  1289                           ;ADC.c: 152:             ANSELbits.ANS7 = 1;
  1290  00CF  1683               	bsf	3,5	;RP0=1, select bank3
  1291  00D0  1703               	bsf	3,6	;RP1=1, select bank3
  1292  00D1  1788               	bsf	8,7	;volatile
  1293                           
  1294                           ;ADC.c: 153:             break;
  1295  00D2  291F               	goto	l149
  1296  00D3                     l143:	
  1297                           ;ADC.c: 154:         case 8:
  1298                           
  1299                           
  1300                           ;ADC.c: 155:             ANSELHbits.ANS8 = 1;
  1301  00D3  1683               	bsf	3,5	;RP0=1, select bank3
  1302  00D4  1703               	bsf	3,6	;RP1=1, select bank3
  1303  00D5  1409               	bsf	9,0	;volatile
  1304                           
  1305                           ;ADC.c: 156:             break;
  1306  00D6  291F               	goto	l149
  1307  00D7                     l144:	
  1308                           ;ADC.c: 157:         case 9:
  1309                           
  1310                           
  1311                           ;ADC.c: 158:             ANSELHbits.ANS9 = 1;
  1312  00D7  1683               	bsf	3,5	;RP0=1, select bank3
  1313  00D8  1703               	bsf	3,6	;RP1=1, select bank3
  1314  00D9  1489               	bsf	9,1	;volatile
  1315                           
  1316                           ;ADC.c: 159:             break;
  1317  00DA  291F               	goto	l149
  1318  00DB                     l145:	
  1319                           ;ADC.c: 160:         case 10:
  1320                           
  1321                           
  1322                           ;ADC.c: 161:             ANSELHbits.ANS10 = 1;
  1323  00DB  1683               	bsf	3,5	;RP0=1, select bank3
  1324  00DC  1703               	bsf	3,6	;RP1=1, select bank3
  1325  00DD  1509               	bsf	9,2	;volatile
  1326                           
  1327                           ;ADC.c: 162:             break;
  1328  00DE  291F               	goto	l149
  1329  00DF                     l146:	
  1330                           ;ADC.c: 163:         case 11:
  1331                           
  1332                           
  1333                           ;ADC.c: 164:             ANSELHbits.ANS11 = 1;
  1334  00DF  1683               	bsf	3,5	;RP0=1, select bank3
  1335  00E0  1703               	bsf	3,6	;RP1=1, select bank3
  1336  00E1  1589               	bsf	9,3	;volatile
  1337                           
  1338                           ;ADC.c: 165:             break;
  1339  00E2  291F               	goto	l149
  1340  00E3                     l147:	
  1341                           ;ADC.c: 166:         case 12:
  1342                           
  1343                           
  1344                           ;ADC.c: 167:             ANSELHbits.ANS12 = 1;
  1345  00E3  1683               	bsf	3,5	;RP0=1, select bank3
  1346  00E4  1703               	bsf	3,6	;RP1=1, select bank3
  1347  00E5  1609               	bsf	9,4	;volatile
  1348                           
  1349                           ;ADC.c: 168:             break;
  1350  00E6  291F               	goto	l149
  1351  00E7                     l148:	
  1352                           ;ADC.c: 169:         case 13:
  1353                           
  1354                           
  1355                           ;ADC.c: 170:             ANSELHbits.ANS13 = 1;
  1356  00E7  1683               	bsf	3,5	;RP0=1, select bank3
  1357  00E8  1703               	bsf	3,6	;RP1=1, select bank3
  1358  00E9  1689               	bsf	9,5	;volatile
  1359                           
  1360                           ;ADC.c: 171:             break;
  1361  00EA  291F               	goto	l149
  1362  00EB                     l1277:
  1363  00EB  0822               	movf	canal_ADC@channel,w
  1364  00EC  00A0               	movwf	??_canal_ADC
  1365  00ED  01A1               	clrf	??_canal_ADC+1
  1366                           
  1367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 1, Range of values is 0 to 0
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            4     3 (average)
  1373                           ; direct_byte           11     8 (fixed)
  1374                           ; jumptable            260     6 (fixed)
  1375                           ;	Chosen strategy is simple_byte
  1376  00EE  0821               	movf	??_canal_ADC+1,w
  1377  00EF  3A00               	xorlw	0	; case 0
  1378  00F0  1903               	skipnz
  1379  00F1  28F3               	goto	l1659
  1380  00F2  291F               	goto	l149
  1381  00F3                     l1659:
  1382                           
  1383                           ; Switch size 1, requested type "simple"
  1384                           ; Number of cases is 14, Range of values is 0 to 13
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte           43    22 (average)
  1388                           ; direct_byte           50     8 (fixed)
  1389                           ; jumptable            260     6 (fixed)
  1390                           ;	Chosen strategy is simple_byte
  1391  00F3  0820               	movf	??_canal_ADC,w
  1392  00F4  3A00               	xorlw	0	; case 0
  1393  00F5  1903               	skipnz
  1394  00F6  28B3               	goto	l134
  1395  00F7  3A01               	xorlw	1	; case 1
  1396  00F8  1903               	skipnz
  1397  00F9  28B7               	goto	l136
  1398  00FA  3A03               	xorlw	3	; case 2
  1399  00FB  1903               	skipnz
  1400  00FC  28BB               	goto	l137
  1401  00FD  3A01               	xorlw	1	; case 3
  1402  00FE  1903               	skipnz
  1403  00FF  28BF               	goto	l138
  1404  0100  3A07               	xorlw	7	; case 4
  1405  0101  1903               	skipnz
  1406  0102  28C3               	goto	l139
  1407  0103  3A01               	xorlw	1	; case 5
  1408  0104  1903               	skipnz
  1409  0105  28C7               	goto	l140
  1410  0106  3A03               	xorlw	3	; case 6
  1411  0107  1903               	skipnz
  1412  0108  28CB               	goto	l141
  1413  0109  3A01               	xorlw	1	; case 7
  1414  010A  1903               	skipnz
  1415  010B  28CF               	goto	l142
  1416  010C  3A0F               	xorlw	15	; case 8
  1417  010D  1903               	skipnz
  1418  010E  28D3               	goto	l143
  1419  010F  3A01               	xorlw	1	; case 9
  1420  0110  1903               	skipnz
  1421  0111  28D7               	goto	l144
  1422  0112  3A03               	xorlw	3	; case 10
  1423  0113  1903               	skipnz
  1424  0114  28DB               	goto	l145
  1425  0115  3A01               	xorlw	1	; case 11
  1426  0116  1903               	skipnz
  1427  0117  28DF               	goto	l146
  1428  0118  3A07               	xorlw	7	; case 12
  1429  0119  1903               	skipnz
  1430  011A  28E3               	goto	l147
  1431  011B  3A01               	xorlw	1	; case 13
  1432  011C  1903               	skipnz
  1433  011D  28E7               	goto	l148
  1434  011E  291F               	goto	l149
  1435  011F                     l149:
  1436  011F  0008               	return
  1437  0120                     __end_of_canal_ADC:
  1438                           
  1439                           	psect	text5
  1440  001A                     __ptext5:	
  1441 ;; *************** function _Select_ch *****************
  1442 ;; Defined at:
  1443 ;;		line 176 in file "ADC.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  channel         1    wreg     unsigned char 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  channel         1    2[BANK0 ] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         0       1       0       0       0
  1459 ;;      Temps:          0       2       0       0       0
  1460 ;;      Totals:         0       3       0       0       0
  1461 ;;Total ram usage:        3 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    3
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _Select_ch
  1473  001A                     _Select_ch:
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _Select_ch: [wreg-fsr0h+status,2+status,0]
  1477                           ;Select_ch@channel stored from wreg
  1478  001A  1283               	bcf	3,5	;RP0=0, select bank0
  1479  001B  1303               	bcf	3,6	;RP1=0, select bank0
  1480  001C  00A2               	movwf	Select_ch@channel
  1481  001D                     l1285:
  1482                           
  1483                           ;ADC.c: 177:     switch (channel) {
  1484  001D  286A               	goto	l1321
  1485  001E                     l1287:
  1486                           
  1487                           ;ADC.c: 179:             ADCON0bits.CHS = 0000;
  1488  001E  30C3               	movlw	-61
  1489  001F  059F               	andwf	31,f	;volatile
  1490                           
  1491                           ;ADC.c: 180:             break;
  1492  0020  28A4               	goto	l1323
  1493  0021                     l1289:
  1494                           
  1495                           ;ADC.c: 182:             ADCON0bits.CHS = 0001;
  1496  0021  081F               	movf	31,w	;volatile
  1497  0022  39C3               	andlw	-61
  1498  0023  3804               	iorlw	4
  1499  0024  009F               	movwf	31	;volatile
  1500                           
  1501                           ;ADC.c: 183:             break;
  1502  0025  28A4               	goto	l1323
  1503  0026                     l1291:
  1504                           
  1505                           ;ADC.c: 185:             ADCON0bits.CHS = 0010;
  1506  0026  081F               	movf	31,w	;volatile
  1507  0027  39C3               	andlw	-61
  1508  0028  3820               	iorlw	32
  1509  0029  009F               	movwf	31	;volatile
  1510                           
  1511                           ;ADC.c: 186:             break;
  1512  002A  28A4               	goto	l1323
  1513  002B                     l1293:
  1514                           
  1515                           ;ADC.c: 188:             ADCON0bits.CHS = 0011;
  1516  002B  081F               	movf	31,w	;volatile
  1517  002C  39C3               	andlw	-61
  1518  002D  3824               	iorlw	36
  1519  002E  009F               	movwf	31	;volatile
  1520                           
  1521                           ;ADC.c: 189:             break;
  1522  002F  28A4               	goto	l1323
  1523  0030                     l1295:
  1524                           
  1525                           ;ADC.c: 191:             ADCON0bits.CHS = 0100;
  1526  0030  30C3               	movlw	-61
  1527  0031  059F               	andwf	31,f	;volatile
  1528                           
  1529                           ;ADC.c: 192:             break;
  1530  0032  28A4               	goto	l1323
  1531  0033                     l1297:
  1532                           
  1533                           ;ADC.c: 194:             ADCON0bits.CHS = 0101;
  1534  0033  081F               	movf	31,w	;volatile
  1535  0034  39C3               	andlw	-61
  1536  0035  3804               	iorlw	4
  1537  0036  009F               	movwf	31	;volatile
  1538                           
  1539                           ;ADC.c: 195:             break;
  1540  0037  28A4               	goto	l1323
  1541  0038                     l1299:
  1542                           
  1543                           ;ADC.c: 197:             ADCON0bits.CHS = 0110;
  1544  0038  081F               	movf	31,w	;volatile
  1545  0039  39C3               	andlw	-61
  1546  003A  3820               	iorlw	32
  1547  003B  009F               	movwf	31	;volatile
  1548                           
  1549                           ;ADC.c: 198:             break;
  1550  003C  28A4               	goto	l1323
  1551  003D                     l1301:
  1552                           
  1553                           ;ADC.c: 200:             ADCON0bits.CHS = 0111;
  1554  003D  081F               	movf	31,w	;volatile
  1555  003E  39C3               	andlw	-61
  1556  003F  3824               	iorlw	36
  1557  0040  009F               	movwf	31	;volatile
  1558                           
  1559                           ;ADC.c: 201:             break;
  1560  0041  28A4               	goto	l1323
  1561  0042                     l1303:
  1562                           
  1563                           ;ADC.c: 203:             ADCON0bits.CHS = 1000;
  1564  0042  081F               	movf	31,w	;volatile
  1565  0043  39C3               	andlw	-61
  1566  0044  3820               	iorlw	32
  1567  0045  009F               	movwf	31	;volatile
  1568                           
  1569                           ;ADC.c: 204:             break;
  1570  0046  28A4               	goto	l1323
  1571  0047                     l1305:
  1572                           
  1573                           ;ADC.c: 206:             ADCON0bits.CHS = 1001;
  1574  0047  081F               	movf	31,w	;volatile
  1575  0048  39C3               	andlw	-61
  1576  0049  3824               	iorlw	36
  1577  004A  009F               	movwf	31	;volatile
  1578                           
  1579                           ;ADC.c: 207:             break;
  1580  004B  28A4               	goto	l1323
  1581  004C                     l1307:
  1582                           
  1583                           ;ADC.c: 209:             ADCON0bits.CHS = 1010;
  1584  004C  081F               	movf	31,w	;volatile
  1585  004D  39C3               	andlw	-61
  1586  004E  3808               	iorlw	8
  1587  004F  009F               	movwf	31	;volatile
  1588                           
  1589                           ;ADC.c: 210:             break;
  1590  0050  28A4               	goto	l1323
  1591  0051                     l1309:
  1592                           
  1593                           ;ADC.c: 212:             ADCON0bits.CHS = 1011;
  1594  0051  081F               	movf	31,w	;volatile
  1595  0052  39C3               	andlw	-61
  1596  0053  380C               	iorlw	12
  1597  0054  009F               	movwf	31	;volatile
  1598                           
  1599                           ;ADC.c: 213:             break;
  1600  0055  28A4               	goto	l1323
  1601  0056                     l1311:
  1602                           
  1603                           ;ADC.c: 215:             ADCON0bits.CHS = 1100;
  1604  0056  081F               	movf	31,w	;volatile
  1605  0057  39C3               	andlw	-61
  1606  0058  3830               	iorlw	48
  1607  0059  009F               	movwf	31	;volatile
  1608                           
  1609                           ;ADC.c: 216:             break;
  1610  005A  28A4               	goto	l1323
  1611  005B                     l1313:
  1612                           
  1613                           ;ADC.c: 218:             ADCON0bits.CHS = 1101;
  1614  005B  081F               	movf	31,w	;volatile
  1615  005C  39C3               	andlw	-61
  1616  005D  3834               	iorlw	52
  1617  005E  009F               	movwf	31	;volatile
  1618                           
  1619                           ;ADC.c: 219:             break;
  1620  005F  28A4               	goto	l1323
  1621  0060                     l1315:
  1622                           
  1623                           ;ADC.c: 221:             ADCON0bits.CHS = 1110;
  1624  0060  081F               	movf	31,w	;volatile
  1625  0061  39C3               	andlw	-61
  1626  0062  3818               	iorlw	24
  1627  0063  009F               	movwf	31	;volatile
  1628                           
  1629                           ;ADC.c: 222:             break;
  1630  0064  28A4               	goto	l1323
  1631  0065                     l1317:
  1632                           
  1633                           ;ADC.c: 224:             ADCON0bits.CHS = 1111;
  1634  0065  081F               	movf	31,w	;volatile
  1635  0066  39C3               	andlw	-61
  1636  0067  381C               	iorlw	28
  1637  0068  009F               	movwf	31	;volatile
  1638                           
  1639                           ;ADC.c: 225:             break;
  1640  0069  28A4               	goto	l1323
  1641  006A                     l1321:
  1642  006A  0822               	movf	Select_ch@channel,w
  1643  006B  00A0               	movwf	??_Select_ch
  1644  006C  01A1               	clrf	??_Select_ch+1
  1645                           
  1646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1647                           ; Switch size 1, requested type "simple"
  1648                           ; Number of cases is 1, Range of values is 0 to 0
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte            4     3 (average)
  1652                           ; direct_byte           11     8 (fixed)
  1653                           ; jumptable            260     6 (fixed)
  1654                           ;	Chosen strategy is simple_byte
  1655  006D  0821               	movf	??_Select_ch+1,w
  1656  006E  3A00               	xorlw	0	; case 0
  1657  006F  1903               	skipnz
  1658  0070  2872               	goto	l1661
  1659  0071  28A4               	goto	l1323
  1660  0072                     l1661:
  1661                           
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 16, Range of values is 0 to 15
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte           49    25 (average)
  1667                           ; direct_byte           56     8 (fixed)
  1668                           ; jumptable            260     6 (fixed)
  1669                           ;	Chosen strategy is simple_byte
  1670  0072  0820               	movf	??_Select_ch,w
  1671  0073  3A00               	xorlw	0	; case 0
  1672  0074  1903               	skipnz
  1673  0075  281E               	goto	l1287
  1674  0076  3A01               	xorlw	1	; case 1
  1675  0077  1903               	skipnz
  1676  0078  2821               	goto	l1289
  1677  0079  3A03               	xorlw	3	; case 2
  1678  007A  1903               	skipnz
  1679  007B  2826               	goto	l1291
  1680  007C  3A01               	xorlw	1	; case 3
  1681  007D  1903               	skipnz
  1682  007E  282B               	goto	l1293
  1683  007F  3A07               	xorlw	7	; case 4
  1684  0080  1903               	skipnz
  1685  0081  2830               	goto	l1295
  1686  0082  3A01               	xorlw	1	; case 5
  1687  0083  1903               	skipnz
  1688  0084  2833               	goto	l1297
  1689  0085  3A03               	xorlw	3	; case 6
  1690  0086  1903               	skipnz
  1691  0087  2838               	goto	l1299
  1692  0088  3A01               	xorlw	1	; case 7
  1693  0089  1903               	skipnz
  1694  008A  283D               	goto	l1301
  1695  008B  3A0F               	xorlw	15	; case 8
  1696  008C  1903               	skipnz
  1697  008D  2842               	goto	l1303
  1698  008E  3A01               	xorlw	1	; case 9
  1699  008F  1903               	skipnz
  1700  0090  2847               	goto	l1305
  1701  0091  3A03               	xorlw	3	; case 10
  1702  0092  1903               	skipnz
  1703  0093  284C               	goto	l1307
  1704  0094  3A01               	xorlw	1	; case 11
  1705  0095  1903               	skipnz
  1706  0096  2851               	goto	l1309
  1707  0097  3A07               	xorlw	7	; case 12
  1708  0098  1903               	skipnz
  1709  0099  2856               	goto	l1311
  1710  009A  3A01               	xorlw	1	; case 13
  1711  009B  1903               	skipnz
  1712  009C  285B               	goto	l1313
  1713  009D  3A03               	xorlw	3	; case 14
  1714  009E  1903               	skipnz
  1715  009F  2860               	goto	l1315
  1716  00A0  3A01               	xorlw	1	; case 15
  1717  00A1  1903               	skipnz
  1718  00A2  2865               	goto	l1317
  1719  00A3  28A4               	goto	l1323
  1720  00A4                     l1323:
  1721                           
  1722                           ;ADC.c: 227:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  1723  00A4  3084               	movlw	132
  1724  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1725  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1726  00A7  00A0               	movwf	??_Select_ch
  1727  00A8                     u267:
  1728  00A8  0BA0               	decfsz	??_Select_ch,f
  1729  00A9  28A8               	goto	u267
  1730  00AA  0000               	nop
  1731  00AB                     l1325:
  1732                           
  1733                           ;ADC.c: 228:     ADCON0bits.GO = 1;
  1734  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1735  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1736  00AD  149F               	bsf	31,1	;volatile
  1737  00AE                     l170:
  1738  00AE  0008               	return
  1739  00AF                     __end_of_Select_ch:
  1740                           
  1741                           	psect	text6
  1742  01DB                     __ptext6:	
  1743 ;; *************** function _isr *****************
  1744 ;; Defined at:
  1745 ;;		line 40 in file "Lab03_slave.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  write           1    6[COMMON] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1759 ;;      Params:         0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0
  1761 ;;      Temps:          5       0       0       0       0
  1762 ;;      Totals:         6       0       0       0       0
  1763 ;;Total ram usage:        6 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    2
  1766 ;; This function calls:
  1767 ;;		_spiRead
  1768 ;;		_spiWrite
  1769 ;; This function is called by:
  1770 ;;		Interrupt level 1
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _isr
  1776  01DB                     _isr:
  1777  01DB                     i1l945:
  1778                           
  1779                           ;Lab03_slave.c: 41:             }
  1780  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1781  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1782  01DD  1D8C               	btfss	12,3	;volatile
  1783  01DE  29E0               	goto	u5_21
  1784  01DF  29E1               	goto	u5_20
  1785  01E0                     u5_21:
  1786  01E0  2A11               	goto	i1l58
  1787  01E1                     u5_20:
  1788  01E1                     i1l947:
  1789                           
  1790                           ;Lab03_slave.c: 42:             else {;Lab03_slave.c: 43:                 var_adc1 = ADR
      +                          ESH;
  1791  01E1  120A  118A  226C  120A  118A  	fcall	_spiRead
  1792  01E6  00F1               	movwf	??_isr
  1793  01E7  0871               	movf	??_isr,w
  1794  01E8  00F6               	movwf	isr@write
  1795  01E9                     i1l949:
  1796                           
  1797                           ;Lab03_slave.c: 44:                 Select_ch(3);
  1798  01E9  3001               	movlw	1
  1799  01EA  00F1               	movwf	??_isr
  1800  01EB  0871               	movf	??_isr,w
  1801  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1802  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1803  01EE  0786               	addwf	6,f	;volatile
  1804                           
  1805                           ;Lab03_slave.c: 45:                 canal_flag--;
  1806  01EF  29FE               	goto	i1l957
  1807  01F0                     i1l951:
  1808                           
  1809                           ;Lab03_slave.c: 47:             _delay((unsigned long)((200)*(8000000/4000000.0)));
  1810  01F0  0878               	movf	_var_adc0,w
  1811  01F1  120A  118A  227C  120A  118A  	fcall	_spiWrite
  1812                           
  1813                           ;Lab03_slave.c: 48:             PIR1bits.ADIF = 0;
  1814  01F6  2A0E               	goto	i1l56
  1815  01F7                     i1l953:
  1816                           
  1817                           ;Lab03_slave.c: 51:     }
  1818  01F7  0877               	movf	_var_adc1,w
  1819  01F8  120A  118A  227C  120A  118A  	fcall	_spiWrite
  1820                           
  1821                           ;Lab03_slave.c: 52: }
  1822  01FD  2A0E               	goto	i1l56
  1823  01FE                     i1l957:
  1824  01FE  0876               	movf	isr@write,w
  1825  01FF  00F1               	movwf	??_isr
  1826  0200  01F2               	clrf	??_isr+1
  1827                           
  1828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 1, Range of values is 0 to 0
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte            4     3 (average)
  1834                           ; direct_byte           11     8 (fixed)
  1835                           ; jumptable            260     6 (fixed)
  1836                           ;	Chosen strategy is simple_byte
  1837  0201  0872               	movf	??_isr+1,w
  1838  0202  3A00               	xorlw	0	; case 0
  1839  0203  1903               	skipnz
  1840  0204  2A06               	goto	i1l1663
  1841  0205  2A0E               	goto	i1l56
  1842  0206                     i1l1663:
  1843                           
  1844                           ; Switch size 1, requested type "simple"
  1845                           ; Number of cases is 2, Range of values is 1 to 2
  1846                           ; switch strategies available:
  1847                           ; Name         Instructions Cycles
  1848                           ; simple_byte            7     4 (average)
  1849                           ; direct_byte           17    11 (fixed)
  1850                           ; jumptable            263     9 (fixed)
  1851                           ;	Chosen strategy is simple_byte
  1852  0206  0871               	movf	??_isr,w
  1853  0207  3A01               	xorlw	1	; case 1
  1854  0208  1903               	skipnz
  1855  0209  29F0               	goto	i1l951
  1856  020A  3A03               	xorlw	3	; case 2
  1857  020B  1903               	skipnz
  1858  020C  29F7               	goto	i1l953
  1859  020D  2A0E               	goto	i1l56
  1860  020E                     i1l56:
  1861                           
  1862                           ;Lab03_slave.c: 55: 
  1863  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1864  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0210  118C               	bcf	12,3	;volatile
  1866  0211                     i1l58:
  1867  0211  0875               	movf	??_isr+4,w
  1868  0212  008A               	movwf	10
  1869  0213  0874               	movf	??_isr+3,w
  1870  0214  0084               	movwf	4
  1871  0215  0E73               	swapf	??_isr+2,w
  1872  0216  0083               	movwf	3
  1873  0217  0EFE               	swapf	btemp,f
  1874  0218  0E7E               	swapf	btemp,w
  1875  0219  0009               	retfie
  1876  021A                     __end_of_isr:
  1877                           
  1878                           	psect	intentry
  1879  0004                     __pintentry:	
  1880                           ;incstack = 0
  1881                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1882                           
  1883  0004                     interrupt_function:
  1884  007E                     saved_w	set	btemp
  1885  0004  00FE               	movwf	btemp
  1886  0005  0E03               	swapf	3,w
  1887  0006  00F3               	movwf	??_isr+2
  1888  0007  0804               	movf	4,w
  1889  0008  00F4               	movwf	??_isr+3
  1890  0009  080A               	movf	10,w
  1891  000A  00F5               	movwf	??_isr+4
  1892  000B  120A  118A  29DB   	ljmp	_isr
  1893                           
  1894                           	psect	text7
  1895  027C                     __ptext7:	
  1896 ;; *************** function _spiWrite *****************
  1897 ;; Defined at:
  1898 ;;		line 75 in file "SPI_slave.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  dat             1    wreg     unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  dat             1    0[COMMON] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0
  1915 ;;      Totals:         1       0       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_isr
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _spiWrite
  1927  027C                     _spiWrite:
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _spiWrite: [wreg]
  1931                           ;spiWrite@dat stored from wreg
  1932  027C  00F0               	movwf	spiWrite@dat
  1933  027D                     i1l863:
  1934                           
  1935                           ;SPI_slave.c: 75: void spiWrite(char dat);SPI_slave.c: 76: {;SPI_slave.c: 77:     SSPBUF
      +                           = dat;
  1936  027D  0870               	movf	spiWrite@dat,w
  1937  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1938  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0280  0093               	movwf	19	;volatile
  1940  0281                     i1l211:
  1941  0281  0008               	return
  1942  0282                     __end_of_spiWrite:
  1943                           
  1944                           	psect	text8
  1945  026C                     __ptext8:	
  1946 ;; *************** function _spiRead *****************
  1947 ;; Defined at:
  1948 ;;		line 88 in file "SPI_slave.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      unsigned char 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0       0       0       0       0
  1964 ;;      Temps:          0       0       0       0       0
  1965 ;;      Totals:         0       0       0       0       0
  1966 ;;Total ram usage:        0 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    1
  1969 ;; This function calls:
  1970 ;;		_spiReceiveWait
  1971 ;; This function is called by:
  1972 ;;		_isr
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _spiRead
  1978  026C                     _spiRead:
  1979  026C                     i1l857:	
  1980                           ;incstack = 0
  1981                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1982                           
  1983                           
  1984                           ;SPI_slave.c: 90:     spiReceiveWait();
  1985  026C  120A  118A  2275  120A  118A  	fcall	_spiReceiveWait
  1986  0271                     i1l859:
  1987                           
  1988                           ;SPI_slave.c: 91:     return(SSPBUF);
  1989  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0273  0813               	movf	19,w	;volatile
  1992  0274                     i1l219:
  1993  0274  0008               	return
  1994  0275                     __end_of_spiRead:
  1995                           
  1996                           	psect	text9
  1997  0275                     __ptext9:	
  1998 ;; *************** function _spiReceiveWait *****************
  1999 ;; Defined at:
  2000 ;;		line 70 in file "SPI_slave.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		None
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_spiRead
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _spiReceiveWait
  2029  0275                     _spiReceiveWait:
  2030  0275                     i1l855:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _spiReceiveWait: []
  2033                           
  2034  0275                     i1l205:	
  2035                           ;SPI_slave.c: 72:     while ( !SSPSTATbits.BF );
  2036                           
  2037  0275  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0276  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0277  1C14               	btfss	20,0	;volatile
  2040  0278  2A7A               	goto	u4_21
  2041  0279  2A7B               	goto	u4_20
  2042  027A                     u4_21:
  2043  027A  2A75               	goto	i1l205
  2044  027B                     u4_20:
  2045  027B                     i1l208:
  2046  027B  0008               	return
  2047  027C                     __end_of_spiReceiveWait:
  2048  007E                     btemp	set	126	;btemp
  2049  007E                     wtemp0	set	126
  2050                           
  2051                           	psect	config
  2052                           
  2053                           ;Config register CONFIG1 @ 0x2007
  2054                           ;	Oscillator Selection bits
  2055                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2056                           ;	Watchdog Timer Enable bit
  2057                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2058                           ;	Power-up Timer Enable bit
  2059                           ;	PWRTE = OFF, PWRT disabled
  2060                           ;	RE3/MCLR pin function select bit
  2061                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2062                           ;	Code Protection bit
  2063                           ;	CP = OFF, Program memory code protection is disabled
  2064                           ;	Data Code Protection bit
  2065                           ;	CPD = OFF, Data memory code protection is disabled
  2066                           ;	Brown Out Reset Selection bits
  2067                           ;	BOREN = OFF, BOR disabled
  2068                           ;	Internal External Switchover bit
  2069                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2070                           ;	Fail-Safe Clock Monitor Enabled bit
  2071                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2072                           ;	Low Voltage Programming Enable bit
  2073                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2074                           ;	In-Circuit Debugger Mode bit
  2075                           ;	DEBUG = 0x1, unprogrammed default
  2076  2007                     	org	8199
  2077  2007  30D4               	dw	12500
  2078                           
  2079                           ;Config register CONFIG2 @ 0x2008
  2080                           ;	Brown-out Reset Selection bit
  2081                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2082                           ;	Flash Program Memory Self Write Enable bits
  2083                           ;	WRT = OFF, Write protection off
  2084  2008                     	org	8200
  2085  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      8       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_conf_ADC

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     816
                                              7 BANK0      1     1      0
                          _Select_ch
                          _canal_ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     772
                                              6 BANK0      1     1      0
                           _conf_ADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _conf_ADC                                             6     3      3     316
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _canal_ADC                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Select_ch                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0      30
                                              1 COMMON     6     6      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Select_ch
   _canal_ADC
   _setup
     _conf_ADC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 01:17:30 2021

        conf_ADC@adcFrec 0025              _SSPSTATbits 0094                       l72 024D  
                     l67 01D8                       l97 0157                       l99 015C  
                    l100 0161                      l101 0166                      l102 0189  
                    l104 018C                      l201 0266                      l202 026B  
                    l140 00C7                      l141 00CB                      l142 00CF  
                    l134 00B3                      l143 00D3                      l144 00D7  
                    l136 00B7                      l145 00DB                      l137 00BB  
                    l170 00AE                      l146 00DF                      l138 00BF  
                    l147 00E3                      l139 00C3                      l148 00E7  
                    l149 011F                      u220 025A                      u221 0259  
                    u230 01AA                      u231 01A9                      u240 01AF  
                    u241 01AE                      u180 0150                      u181 014F  
                    u190 0185                      u191 0184                      u257 01D2  
                    u267 00A8                      _isr 01DB                      fsr0 0004  
                   l1301 003D                     l1221 012D                     l1311 0056  
                   l1303 0042                     l1231 0150                     l1223 0132  
                   l1215 0123                     l1313 005B                     l1305 0047  
                   l1321 006A                     l1217 0125                     l1315 0060  
                   l1307 004C                     l1323 00A4                     l1235 016B  
                   l1219 0128                     l1227 0135                     l1325 00AB  
                   l1317 0065                     l1309 0051                     l1237 017E  
                   l1229 014B                     l1501 0237                     l1239 0185  
                   l1503 0245                     l1511 018D                     l1273 00B2  
                   l1505 0246                     l1521 01B9                     l1513 01A4  
                   l1291 0026                     l1507 0247                     l1531 01D5  
                   l1523 01C0                     l1515 01AA                     l1293 002B  
                   l1285 001D                     l1277 00EB                     l1509 024A  
                   l1525 01C4                     l1517 01AF                     l1295 0030  
                   l1287 001E                     l1527 01CA                     l1519 01B3  
                   l1297 0033                     l1289 0021                     l1481 025E  
                   l1529 01CE                     l1299 0038                     l1483 0260  
                   l1491 021F                     l1661 0072                     l1485 0265  
                   l1477 0251                     l1493 0222                     l1655 013D  
                   l1479 025A                     l1495 0229                     l1487 021A  
                   l1657 0173                     l1497 0232                     l1489 021E  
                   l1659 00F3                     l1499 0236                     ?_isr 0070  
                   i1l56 020E                     i1l58 0211                     u4_20 027B  
                   u4_21 027A                     u5_20 01E1                     u5_21 01E0  
                   _main 018D                     btemp 007E                     start 000E  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l211 0281                    i1l205 0275                    i1l208 027B  
                  i1l219 0274                    i1l855 0275                    i1l863 027D  
                  i1l951 01F0                    i1l857 026C                    i1l953 01F7  
                  i1l945 01DB                    i1l859 0271                    i1l947 01E1  
                  i1l957 01FE                    i1l949 01E9                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _SSPIF 0063                    _setup 021A                    pclath 000A  
        __end_of_spiInit 026C          __end_of_spiRead 0275                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01DB  
                 ??_main 0027                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1663 0206                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_conf_ADC 018D       __size_of_Select_ch 0095                   saved_w 007E  
       __end_of_spiWrite 0282                ??_spiInit 0023                ??_spiRead 0070  
__end_of__initialization 0016       __size_of_canal_ADC 0071           __pcstackCOMMON 0070  
          __end_of_setup 024E               _canal_flag 0028                  ??_setup 0026  
      __end_of_Select_ch 00AF               __pbssBANK0 0028               __pmaintext 018D  
             __pintentry 0004  __size_of_spiReceiveWait 0007        __end_of_canal_ADC 0120  
              ?_conf_ADC 0020                  _SSPSTAT 0094                ?_spiWrite 0070  
              _ANSELbits 0188                  __ptext1 021A                  __ptext2 024E  
                __ptext3 0120                  __ptext4 00AF                  __ptext5 001A  
                __ptext6 01DB                  __ptext7 027C                  __ptext8 026C  
                __ptext9 0275         Select_ch@channel 0022             __size_of_isr 003F  
                _spiInit 024E                  _spiRead 026C               ??_conf_ADC 0023  
   end_of_initialization 0016               ??_spiWrite 0070                _TRISAbits 0085  
            spiWrite@dat 0070           conf_ADC@justRL 0022           _spiReceiveWait 0275  
       canal_ADC@channel 0022      start_initialization 0011              __end_of_isr 021A  
              _Select_ch 001A   __end_of_spiReceiveWait 027C              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_conf_ADC 006D  
              _canal_ADC 00AF               ?_Select_ch 0070          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0020                 ?_spiRead 0070  
         __size_of_setup 0034               ?_canal_ADC 0070     spiInit@sTransmitEdge 0022  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0020  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
            ??_Select_ch 0020               _ANSELHbits 0189                 _conf_ADC 0120  
       __size_of_spiInit 001E         __size_of_spiRead 0009              ??_canal_ADC 0020  
          __size_of_main 004E                 _var_adc0 0078                 _var_adc1 0077  
               _spiWrite 027C             spiInit@sType 0023             conf_ADC@Vref 0021  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 isr@write 0076  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
            conf_ADC@isr 0020  
