

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 11:35:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0013                     _SSPBUF	set	19
   371  0014                     _SSPCON	set	20
   372  000B                     _INTCONbits	set	11
   373  0005                     _PORTA	set	5
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0bits	set	31
   376  000C                     _PIR1bits	set	12
   377  0006                     _PORTB	set	6
   378  0063                     _SSPIF	set	99
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  008F                     _OSCCONbits	set	143
   382  009F                     _ADCON1bits	set	159
   383  008C                     _PIE1bits	set	140
   384  0086                     _TRISB	set	134
   385  0085                     _TRISA	set	133
   386  0085                     _TRISAbits	set	133
   387  043B                     _TRISC3	set	1083
   388  043D                     _TRISC5	set	1085
   389  0189                     _ANSELHbits	set	393
   390  0188                     _ANSELbits	set	392
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  0011                     start_initialization:	
   396                           ; #config settings
   397                           
   398  0011                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   402  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   403                           
   404                           ; Clear objects allocated to BANK0
   405  0013  1283               	bcf	3,5	;RP0=0, select bank0
   406  0014  1303               	bcf	3,6	;RP1=0, select bank0
   407  0015  01A7               	clrf	__pbssBANK0& (0+127)
   408  0016                     end_of_initialization:	
   409                           ;End of C runtime variable initialization code
   410                           
   411  0016                     __end_of__initialization:
   412  0016  0183               	clrf	3
   413  0017  120A  118A  2999   	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMMON
   416  0077                     __pbssCOMMON:
   417  0077                     _var_adc1:
   418  0077                     	ds	1
   419  0078                     _var_adc0:
   420  0078                     	ds	1
   421                           
   422                           	psect	bssBANK0
   423  0027                     __pbssBANK0:
   424  0027                     _canal_flag:
   425  0027                     	ds	1
   426                           
   427                           	psect	cstackCOMMON
   428  0070                     __pcstackCOMMON:
   429  0070                     ?_spiRead:
   430  0070                     ??_spiRead:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_spiWrite:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_spiWrite:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_setup:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_start_ch:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_Select_ch:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_config_osc:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_isr:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_spiReceiveWait:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_spiReceiveWait:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     spiWrite@dat:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  0070                     	ds	1
   469  0071                     ??_isr:
   470                           
   471                           ; 1 bytes @ 0x1
   472  0071                     	ds	5
   473  0076                     isr@comando:
   474                           
   475                           ; 1 bytes @ 0x6
   476  0076                     	ds	1
   477                           
   478                           	psect	cstackBANK0
   479  0020                     __pcstackBANK0:
   480  0020                     ?_start_adc:
   481  0020                     ??_start_ch:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0020                     ??_Select_ch:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0020                     ?_spiInit:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0020                     ??_config_osc:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0020                     start_adc@isr:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0020                     spiInit@sDataSample:	
   497                           ; 1 bytes @ 0x0
   498                           
   499                           
   500                           ; 1 bytes @ 0x0
   501  0020                     	ds	1
   502  0021                     start_adc@Vref:
   503  0021                     spiInit@sClockIdle:	
   504                           ; 1 bytes @ 0x1
   505                           
   506                           
   507                           ; 1 bytes @ 0x1
   508  0021                     	ds	1
   509  0022                     start_adc@justRL:
   510  0022                     start_ch@channel:	
   511                           ; 1 bytes @ 0x2
   512                           
   513  0022                     Select_ch@channel:	
   514                           ; 1 bytes @ 0x2
   515                           
   516  0022                     config_osc@frec:	
   517                           ; 1 bytes @ 0x2
   518                           
   519  0022                     spiInit@sTransmitEdge:	
   520                           ; 1 bytes @ 0x2
   521                           
   522                           
   523                           ; 1 bytes @ 0x2
   524  0022                     	ds	1
   525  0023                     ??_start_adc:
   526  0023                     ??_spiInit:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0023                     spiInit@sType:	
   530                           ; 1 bytes @ 0x3
   531                           
   532                           
   533                           ; 1 bytes @ 0x3
   534  0023                     	ds	1
   535  0024                     ??_setup:
   536                           
   537                           ; 1 bytes @ 0x4
   538  0024                     	ds	1
   539  0025                     start_adc@frec:
   540                           
   541                           ; 1 bytes @ 0x5
   542  0025                     	ds	1
   543  0026                     ??_main:
   544                           
   545                           ; 1 bytes @ 0x6
   546  0026                     	ds	1
   547                           
   548                           	psect	maintext
   549  0199                     __pmaintext:	
   550 ;;
   551 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   552 ;;
   553 ;; *************** function _main *****************
   554 ;; Defined at:
   555 ;;		line 61 in file "Lab03_slave.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : B00/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0
   571 ;;      Temps:          0       1       0       0       0
   572 ;;      Totals:         0       1       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels required when called:    5
   575 ;; This function calls:
   576 ;;		_Select_ch
   577 ;;		_setup
   578 ;;		_start_adc
   579 ;;		_start_ch
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _main
   587  0199                     _main:
   588  0199                     l1507:	
   589                           ;incstack = 0
   590                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   591                           
   592                           
   593                           ;Lab03_slave.c: 62:     setup();
   594  0199  120A  118A  228E  120A  118A  	fcall	_setup
   595                           
   596                           ;Lab03_slave.c: 63:     start_adc(3, 0, 0, 0);
   597  019E  1283               	bcf	3,5	;RP0=0, select bank0
   598  019F  1303               	bcf	3,6	;RP1=0, select bank0
   599  01A0  01A0               	clrf	start_adc@isr
   600  01A1  01A1               	clrf	start_adc@Vref
   601  01A2  01A2               	clrf	start_adc@justRL
   602  01A3  3003               	movlw	3
   603  01A4  120A  118A  20B3  120A  118A  	fcall	_start_adc
   604                           
   605                           ;Lab03_slave.c: 65:     start_ch(0);
   606  01A9  3000               	movlw	0
   607  01AA  120A  118A  2128  120A  118A  	fcall	_start_ch
   608                           
   609                           ;Lab03_slave.c: 66:     start_ch(1);
   610  01AF  3001               	movlw	1
   611  01B0  120A  118A  2128  120A  118A  	fcall	_start_ch
   612                           
   613                           ;Lab03_slave.c: 67:     Select_ch(0);
   614  01B5  3000               	movlw	0
   615  01B6  120A  118A  201A  120A  118A  	fcall	_Select_ch
   616  01BB                     l1509:
   617                           
   618                           ;Lab03_slave.c: 71:          if (PIR1bits.ADIF == 1 && ADCON0bits.GO == 0) {
   619  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   620  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   621  01BD  1F0C               	btfss	12,6	;volatile
   622  01BE  29C0               	goto	u251
   623  01BF  29C1               	goto	u250
   624  01C0                     u251:
   625  01C0  29BB               	goto	l1509
   626  01C1                     u250:
   627  01C1                     l1511:
   628  01C1  189F               	btfsc	31,1	;volatile
   629  01C2  29C4               	goto	u261
   630  01C3  29C5               	goto	u260
   631  01C4                     u261:
   632  01C4  29BB               	goto	l1509
   633  01C5                     u260:
   634  01C5                     l1513:
   635                           
   636                           ;Lab03_slave.c: 72:             if (canal_flag == 0) {
   637  01C5  0827               	movf	_canal_flag,w
   638  01C6  1D03               	btfss	3,2
   639  01C7  29C9               	goto	u271
   640  01C8  29CA               	goto	u270
   641  01C9                     u271:
   642  01C9  29DB               	goto	l1521
   643  01CA                     u270:
   644  01CA                     l1515:
   645                           
   646                           ;Lab03_slave.c: 73:                 var_adc0 = ADRESH;
   647  01CA  081E               	movf	30,w	;volatile
   648  01CB  00A6               	movwf	??_main
   649  01CC  0826               	movf	??_main,w
   650  01CD  00F8               	movwf	_var_adc0
   651  01CE                     l1517:
   652                           
   653                           ;Lab03_slave.c: 74:                 Select_ch(0);
   654  01CE  3000               	movlw	0
   655  01CF  120A  118A  201A  120A  118A  	fcall	_Select_ch
   656  01D4                     l1519:
   657                           
   658                           ;Lab03_slave.c: 75:                 canal_flag++;
   659  01D4  3001               	movlw	1
   660  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   661  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   662  01D7  00A6               	movwf	??_main
   663  01D8  0826               	movf	??_main,w
   664  01D9  07A7               	addwf	_canal_flag,f
   665                           
   666                           ;Lab03_slave.c: 77:             } else {
   667  01DA  29E9               	goto	l1527
   668  01DB                     l1521:
   669                           
   670                           ;Lab03_slave.c: 78:                 var_adc1 = ADRESH;
   671  01DB  081E               	movf	30,w	;volatile
   672  01DC  00A6               	movwf	??_main
   673  01DD  0826               	movf	??_main,w
   674  01DE  00F7               	movwf	_var_adc1
   675  01DF                     l1523:
   676                           
   677                           ;Lab03_slave.c: 79:                 Select_ch(1);
   678  01DF  3001               	movlw	1
   679  01E0  120A  118A  201A  120A  118A  	fcall	_Select_ch
   680  01E5                     l1525:
   681                           
   682                           ;Lab03_slave.c: 80:                 canal_flag--;
   683  01E5  3001               	movlw	1
   684  01E6  1283               	bcf	3,5	;RP0=0, select bank0
   685  01E7  1303               	bcf	3,6	;RP1=0, select bank0
   686  01E8  02A7               	subwf	_canal_flag,f
   687  01E9                     l1527:
   688                           
   689                           ;Lab03_slave.c: 84:             _delay((unsigned long)((200)*(8000000/4000000.0)));
   690  01E9  3084               	movlw	132
   691  01EA  1283               	bcf	3,5	;RP0=0, select bank0
   692  01EB  1303               	bcf	3,6	;RP1=0, select bank0
   693  01EC  00A6               	movwf	??_main
   694  01ED                     u287:
   695  01ED  0BA6               	decfsz	??_main,f
   696  01EE  29ED               	goto	u287
   697  01EF  0000               	nop
   698  01F0                     l1529:
   699                           
   700                           ;Lab03_slave.c: 85:             ADCON0bits.GO = 1;
   701  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   702  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   703  01F2  149F               	bsf	31,1	;volatile
   704  01F3                     l1531:
   705                           
   706                           ;Lab03_slave.c: 86:             PIR1bits.ADIF = 0;
   707  01F3  130C               	bcf	12,6	;volatile
   708  01F4  29BB               	goto	l1509
   709  01F5  120A  118A  280E   	ljmp	start
   710  01F8                     __end_of_main:
   711                           
   712                           	psect	text1
   713  0128                     __ptext1:	
   714 ;; *************** function _start_ch *****************
   715 ;; Defined at:
   716 ;;		line 124 in file "ADC.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  channel         1    wreg     unsigned char 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  channel         1    2[BANK0 ] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       1       0       0       0
   732 ;;      Temps:          0       2       0       0       0
   733 ;;      Totals:         0       3       0       0       0
   734 ;;Total ram usage:        3 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    3
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _start_ch
   746  0128                     _start_ch:
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _start_ch: [wreg-fsr0h+status,2+status,0]
   750                           ;start_ch@channel stored from wreg
   751  0128  1283               	bcf	3,5	;RP0=0, select bank0
   752  0129  1303               	bcf	3,6	;RP1=0, select bank0
   753  012A  00A2               	movwf	start_ch@channel
   754  012B                     l1273:
   755                           
   756                           ;ADC.c: 125:     switch (channel) {
   757  012B  2964               	goto	l1277
   758  012C                     l136:	
   759                           ;ADC.c: 126:         case 0:
   760                           
   761                           
   762                           ;ADC.c: 127:             ANSELbits.ANS0 = 1;
   763  012C  1683               	bsf	3,5	;RP0=1, select bank3
   764  012D  1703               	bsf	3,6	;RP1=1, select bank3
   765  012E  1408               	bsf	8,0	;volatile
   766                           
   767                           ;ADC.c: 128:             break;
   768  012F  2998               	goto	l151
   769  0130                     l138:	
   770                           ;ADC.c: 129:         case 1:
   771                           
   772                           
   773                           ;ADC.c: 130:             ANSELbits.ANS1 = 1;
   774  0130  1683               	bsf	3,5	;RP0=1, select bank3
   775  0131  1703               	bsf	3,6	;RP1=1, select bank3
   776  0132  1488               	bsf	8,1	;volatile
   777                           
   778                           ;ADC.c: 131:             break;
   779  0133  2998               	goto	l151
   780  0134                     l139:	
   781                           ;ADC.c: 132:         case 2:
   782                           
   783                           
   784                           ;ADC.c: 133:             ANSELbits.ANS2 = 1;
   785  0134  1683               	bsf	3,5	;RP0=1, select bank3
   786  0135  1703               	bsf	3,6	;RP1=1, select bank3
   787  0136  1508               	bsf	8,2	;volatile
   788                           
   789                           ;ADC.c: 134:             break;
   790  0137  2998               	goto	l151
   791  0138                     l140:	
   792                           ;ADC.c: 135:         case 3:
   793                           
   794                           
   795                           ;ADC.c: 136:             ANSELbits.ANS3 = 1;
   796  0138  1683               	bsf	3,5	;RP0=1, select bank3
   797  0139  1703               	bsf	3,6	;RP1=1, select bank3
   798  013A  1588               	bsf	8,3	;volatile
   799                           
   800                           ;ADC.c: 137:             break;
   801  013B  2998               	goto	l151
   802  013C                     l141:	
   803                           ;ADC.c: 138:         case 4:
   804                           
   805                           
   806                           ;ADC.c: 139:             ANSELbits.ANS4 = 1;
   807  013C  1683               	bsf	3,5	;RP0=1, select bank3
   808  013D  1703               	bsf	3,6	;RP1=1, select bank3
   809  013E  1608               	bsf	8,4	;volatile
   810                           
   811                           ;ADC.c: 140:             break;
   812  013F  2998               	goto	l151
   813  0140                     l142:	
   814                           ;ADC.c: 141:         case 5:
   815                           
   816                           
   817                           ;ADC.c: 142:             ANSELbits.ANS5 = 1;
   818  0140  1683               	bsf	3,5	;RP0=1, select bank3
   819  0141  1703               	bsf	3,6	;RP1=1, select bank3
   820  0142  1688               	bsf	8,5	;volatile
   821                           
   822                           ;ADC.c: 143:             break;
   823  0143  2998               	goto	l151
   824  0144                     l143:	
   825                           ;ADC.c: 144:         case 6:
   826                           
   827                           
   828                           ;ADC.c: 145:             ANSELbits.ANS6 = 1;
   829  0144  1683               	bsf	3,5	;RP0=1, select bank3
   830  0145  1703               	bsf	3,6	;RP1=1, select bank3
   831  0146  1708               	bsf	8,6	;volatile
   832                           
   833                           ;ADC.c: 146:             break;
   834  0147  2998               	goto	l151
   835  0148                     l144:	
   836                           ;ADC.c: 147:         case 7:
   837                           
   838                           
   839                           ;ADC.c: 148:             ANSELbits.ANS7 = 1;
   840  0148  1683               	bsf	3,5	;RP0=1, select bank3
   841  0149  1703               	bsf	3,6	;RP1=1, select bank3
   842  014A  1788               	bsf	8,7	;volatile
   843                           
   844                           ;ADC.c: 149:             break;
   845  014B  2998               	goto	l151
   846  014C                     l145:	
   847                           ;ADC.c: 150:         case 8:
   848                           
   849                           
   850                           ;ADC.c: 151:             ANSELHbits.ANS8 = 1;
   851  014C  1683               	bsf	3,5	;RP0=1, select bank3
   852  014D  1703               	bsf	3,6	;RP1=1, select bank3
   853  014E  1409               	bsf	9,0	;volatile
   854                           
   855                           ;ADC.c: 152:             break;
   856  014F  2998               	goto	l151
   857  0150                     l146:	
   858                           ;ADC.c: 153:         case 9:
   859                           
   860                           
   861                           ;ADC.c: 154:             ANSELHbits.ANS9 = 1;
   862  0150  1683               	bsf	3,5	;RP0=1, select bank3
   863  0151  1703               	bsf	3,6	;RP1=1, select bank3
   864  0152  1489               	bsf	9,1	;volatile
   865                           
   866                           ;ADC.c: 155:             break;
   867  0153  2998               	goto	l151
   868  0154                     l147:	
   869                           ;ADC.c: 156:         case 10:
   870                           
   871                           
   872                           ;ADC.c: 157:             ANSELHbits.ANS10 = 1;
   873  0154  1683               	bsf	3,5	;RP0=1, select bank3
   874  0155  1703               	bsf	3,6	;RP1=1, select bank3
   875  0156  1509               	bsf	9,2	;volatile
   876                           
   877                           ;ADC.c: 158:             break;
   878  0157  2998               	goto	l151
   879  0158                     l148:	
   880                           ;ADC.c: 159:         case 11:
   881                           
   882                           
   883                           ;ADC.c: 160:             ANSELHbits.ANS11 = 1;
   884  0158  1683               	bsf	3,5	;RP0=1, select bank3
   885  0159  1703               	bsf	3,6	;RP1=1, select bank3
   886  015A  1589               	bsf	9,3	;volatile
   887                           
   888                           ;ADC.c: 161:             break;
   889  015B  2998               	goto	l151
   890  015C                     l149:	
   891                           ;ADC.c: 162:         case 12:
   892                           
   893                           
   894                           ;ADC.c: 163:             ANSELHbits.ANS12 = 1;
   895  015C  1683               	bsf	3,5	;RP0=1, select bank3
   896  015D  1703               	bsf	3,6	;RP1=1, select bank3
   897  015E  1609               	bsf	9,4	;volatile
   898                           
   899                           ;ADC.c: 164:             break;
   900  015F  2998               	goto	l151
   901  0160                     l150:	
   902                           ;ADC.c: 165:         case 13:
   903                           
   904                           
   905                           ;ADC.c: 166:             ANSELHbits.ANS13 = 1;
   906  0160  1683               	bsf	3,5	;RP0=1, select bank3
   907  0161  1703               	bsf	3,6	;RP1=1, select bank3
   908  0162  1689               	bsf	9,5	;volatile
   909                           
   910                           ;ADC.c: 167:             break;
   911  0163  2998               	goto	l151
   912  0164                     l1277:
   913  0164  0822               	movf	start_ch@channel,w
   914  0165  00A0               	movwf	??_start_ch
   915  0166  01A1               	clrf	??_start_ch+1
   916                           
   917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   918                           ; Switch size 1, requested type "simple"
   919                           ; Number of cases is 1, Range of values is 0 to 0
   920                           ; switch strategies available:
   921                           ; Name         Instructions Cycles
   922                           ; simple_byte            4     3 (average)
   923                           ; direct_byte           11     8 (fixed)
   924                           ; jumptable            260     6 (fixed)
   925                           ;	Chosen strategy is simple_byte
   926  0167  0821               	movf	??_start_ch+1,w
   927  0168  3A00               	xorlw	0	; case 0
   928  0169  1903               	skipnz
   929  016A  296C               	goto	l1683
   930  016B  2998               	goto	l151
   931  016C                     l1683:
   932                           
   933                           ; Switch size 1, requested type "simple"
   934                           ; Number of cases is 14, Range of values is 0 to 13
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte           43    22 (average)
   938                           ; direct_byte           50     8 (fixed)
   939                           ; jumptable            260     6 (fixed)
   940                           ;	Chosen strategy is simple_byte
   941  016C  0820               	movf	??_start_ch,w
   942  016D  3A00               	xorlw	0	; case 0
   943  016E  1903               	skipnz
   944  016F  292C               	goto	l136
   945  0170  3A01               	xorlw	1	; case 1
   946  0171  1903               	skipnz
   947  0172  2930               	goto	l138
   948  0173  3A03               	xorlw	3	; case 2
   949  0174  1903               	skipnz
   950  0175  2934               	goto	l139
   951  0176  3A01               	xorlw	1	; case 3
   952  0177  1903               	skipnz
   953  0178  2938               	goto	l140
   954  0179  3A07               	xorlw	7	; case 4
   955  017A  1903               	skipnz
   956  017B  293C               	goto	l141
   957  017C  3A01               	xorlw	1	; case 5
   958  017D  1903               	skipnz
   959  017E  2940               	goto	l142
   960  017F  3A03               	xorlw	3	; case 6
   961  0180  1903               	skipnz
   962  0181  2944               	goto	l143
   963  0182  3A01               	xorlw	1	; case 7
   964  0183  1903               	skipnz
   965  0184  2948               	goto	l144
   966  0185  3A0F               	xorlw	15	; case 8
   967  0186  1903               	skipnz
   968  0187  294C               	goto	l145
   969  0188  3A01               	xorlw	1	; case 9
   970  0189  1903               	skipnz
   971  018A  2950               	goto	l146
   972  018B  3A03               	xorlw	3	; case 10
   973  018C  1903               	skipnz
   974  018D  2954               	goto	l147
   975  018E  3A01               	xorlw	1	; case 11
   976  018F  1903               	skipnz
   977  0190  2958               	goto	l148
   978  0191  3A07               	xorlw	7	; case 12
   979  0192  1903               	skipnz
   980  0193  295C               	goto	l149
   981  0194  3A01               	xorlw	1	; case 13
   982  0195  1903               	skipnz
   983  0196  2960               	goto	l150
   984  0197  2998               	goto	l151
   985  0198                     l151:
   986  0198  0008               	return
   987  0199                     __end_of_start_ch:
   988                           
   989                           	psect	text2
   990  00B3                     __ptext2:	
   991 ;; *************** function _start_adc *****************
   992 ;; Defined at:
   993 ;;		line 73 in file "ADC.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  frec            1    wreg     unsigned char 
   996 ;;  isr             1    0[BANK0 ] unsigned char 
   997 ;;  Vref            1    1[BANK0 ] unsigned char 
   998 ;;  justRL          1    2[BANK0 ] unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  frec            1    5[BANK0 ] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       3       0       0       0
  1011 ;;      Locals:         0       1       0       0       0
  1012 ;;      Temps:          0       2       0       0       0
  1013 ;;      Totals:         0       6       0       0       0
  1014 ;;Total ram usage:        6 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    3
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _start_adc
  1026  00B3                     _start_adc:
  1027                           
  1028                           ;incstack = 0
  1029                           ; Regs used in _start_adc: [wreg-fsr0h+status,2+status,0]
  1030                           ;start_adc@frec stored from wreg
  1031  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1032  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1033  00B5  00A5               	movwf	start_adc@frec
  1034  00B6                     l1245:
  1035                           
  1036                           ;ADC.c: 74:     ADCON0bits.ADON = 1;
  1037  00B6  141F               	bsf	31,0	;volatile
  1038  00B7                     l1247:
  1039                           
  1040                           ;ADC.c: 75:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  1041  00B7  3084               	movlw	132
  1042  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1043  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1044  00BA  00A3               	movwf	??_start_adc
  1045  00BB                     u297:
  1046  00BB  0BA3               	decfsz	??_start_adc,f
  1047  00BC  28BB               	goto	u297
  1048  00BD  0000               	nop
  1049                           
  1050                           ;ADC.c: 76:     switch (frec) {
  1051  00BE  28CB               	goto	l1251
  1052  00BF                     l118:	
  1053                           ;ADC.c: 77:         case 1:
  1054                           
  1055                           
  1056                           ;ADC.c: 78:             ADCON0bits.ADCS0 = 0;
  1057  00BF  131F               	bcf	31,6	;volatile
  1058                           
  1059                           ;ADC.c: 79:             ADCON0bits.ADCS1 = 0;
  1060  00C0  139F               	bcf	31,7	;volatile
  1061                           
  1062                           ;ADC.c: 80:             break;
  1063  00C1  28E3               	goto	l1253
  1064  00C2                     l120:	
  1065                           ;ADC.c: 81:         case 2:
  1066                           
  1067                           
  1068                           ;ADC.c: 82:             ADCON0bits.ADCS0 = 1;
  1069  00C2  171F               	bsf	31,6	;volatile
  1070                           
  1071                           ;ADC.c: 83:             ADCON0bits.ADCS1 = 0;
  1072  00C3  139F               	bcf	31,7	;volatile
  1073                           
  1074                           ;ADC.c: 84:             break;
  1075  00C4  28E3               	goto	l1253
  1076  00C5                     l121:	
  1077                           ;ADC.c: 85:         case 3:
  1078                           
  1079                           
  1080                           ;ADC.c: 86:             ADCON0bits.ADCS0 = 0;
  1081  00C5  131F               	bcf	31,6	;volatile
  1082                           
  1083                           ;ADC.c: 87:             ADCON0bits.ADCS1 = 1;
  1084  00C6  179F               	bsf	31,7	;volatile
  1085                           
  1086                           ;ADC.c: 88:             break;
  1087  00C7  28E3               	goto	l1253
  1088  00C8                     l122:	
  1089                           ;ADC.c: 89:         case 4:
  1090                           
  1091                           
  1092                           ;ADC.c: 90:             ADCON0bits.ADCS0 = 1;
  1093  00C8  171F               	bsf	31,6	;volatile
  1094                           
  1095                           ;ADC.c: 91:             ADCON0bits.ADCS1 = 1;
  1096  00C9  179F               	bsf	31,7	;volatile
  1097                           
  1098                           ;ADC.c: 92:             break;
  1099  00CA  28E3               	goto	l1253
  1100  00CB                     l1251:
  1101  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1102  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1103  00CD  0825               	movf	start_adc@frec,w
  1104  00CE  00A3               	movwf	??_start_adc
  1105  00CF  01A4               	clrf	??_start_adc+1
  1106                           
  1107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 1, Range of values is 0 to 0
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ; direct_byte           11     8 (fixed)
  1114                           ; jumptable            260     6 (fixed)
  1115                           ;	Chosen strategy is simple_byte
  1116  00D0  0824               	movf	??_start_adc+1,w
  1117  00D1  3A00               	xorlw	0	; case 0
  1118  00D2  1903               	skipnz
  1119  00D3  28D5               	goto	l1685
  1120  00D4  28E3               	goto	l1253
  1121  00D5                     l1685:
  1122                           
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 4, Range of values is 1 to 4
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte           13     7 (average)
  1128                           ; direct_byte           23    11 (fixed)
  1129                           ; jumptable            263     9 (fixed)
  1130                           ;	Chosen strategy is simple_byte
  1131  00D5  0823               	movf	??_start_adc,w
  1132  00D6  3A01               	xorlw	1	; case 1
  1133  00D7  1903               	skipnz
  1134  00D8  28BF               	goto	l118
  1135  00D9  3A03               	xorlw	3	; case 2
  1136  00DA  1903               	skipnz
  1137  00DB  28C2               	goto	l120
  1138  00DC  3A01               	xorlw	1	; case 3
  1139  00DD  1903               	skipnz
  1140  00DE  28C5               	goto	l121
  1141  00DF  3A07               	xorlw	7	; case 4
  1142  00E0  1903               	skipnz
  1143  00E1  28C8               	goto	l122
  1144  00E2  28E3               	goto	l1253
  1145  00E3                     l1253:
  1146                           
  1147                           ;ADC.c: 94:     if (isr == 1) {
  1148  00E3  0320               	decf	start_adc@isr,w
  1149  00E4  1D03               	btfss	3,2
  1150  00E5  28E7               	goto	u191
  1151  00E6  28E8               	goto	u190
  1152  00E7                     u191:
  1153  00E7  28EE               	goto	l1257
  1154  00E8                     u190:
  1155  00E8                     l1255:
  1156                           
  1157                           ;ADC.c: 95:         PIE1bits.ADIE = 1;
  1158  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  1159  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  1160  00EA  170C               	bsf	12,6	;volatile
  1161                           
  1162                           ;ADC.c: 96:         PIR1bits.ADIF = 0;
  1163  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1164  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1165  00ED  130C               	bcf	12,6	;volatile
  1166  00EE                     l1257:
  1167                           
  1168                           ;ADC.c: 98:     if (justRL == 0) {
  1169  00EE  0822               	movf	start_adc@justRL,w
  1170  00EF  1D03               	btfss	3,2
  1171  00F0  28F2               	goto	u201
  1172  00F1  28F3               	goto	u200
  1173  00F2                     u201:
  1174  00F2  28F7               	goto	l124
  1175  00F3                     u200:
  1176  00F3                     l1259:
  1177                           
  1178                           ;ADC.c: 99:         ADCON1bits.ADFM = 0;
  1179  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1180  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1181  00F5  139F               	bcf	31,7	;volatile
  1182                           
  1183                           ;ADC.c: 100:     } else {
  1184  00F6  290F               	goto	l1263
  1185  00F7                     l124:
  1186                           
  1187                           ;ADC.c: 101:         ADCON1bits.ADFM = 1;
  1188  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1189  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1190  00F9  179F               	bsf	31,7	;volatile
  1191  00FA  290F               	goto	l1263
  1192  00FB                     l127:	
  1193                           ;ADC.c: 104:         case 0:
  1194                           
  1195                           
  1196                           ;ADC.c: 105:             ADCON1bits.VCFG0 = 0;
  1197  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1198  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1199  00FD  121F               	bcf	31,4	;volatile
  1200                           
  1201                           ;ADC.c: 106:             ADCON1bits.VCFG1 = 0;
  1202  00FE  129F               	bcf	31,5	;volatile
  1203                           
  1204                           ;ADC.c: 107:             break;
  1205  00FF  2927               	goto	l132
  1206  0100                     l129:	
  1207                           ;ADC.c: 108:         case 1:
  1208                           
  1209                           
  1210                           ;ADC.c: 109:             ADCON1bits.VCFG0 = 1;
  1211  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1212  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1213  0102  161F               	bsf	31,4	;volatile
  1214                           
  1215                           ;ADC.c: 110:             ADCON1bits.VCFG1 = 0;
  1216  0103  129F               	bcf	31,5	;volatile
  1217                           
  1218                           ;ADC.c: 111:             break;
  1219  0104  2927               	goto	l132
  1220  0105                     l130:	
  1221                           ;ADC.c: 112:         case 2:
  1222                           
  1223                           
  1224                           ;ADC.c: 113:             ADCON1bits.VCFG0 = 0;
  1225  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1226  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1227  0107  121F               	bcf	31,4	;volatile
  1228                           
  1229                           ;ADC.c: 114:             ADCON1bits.VCFG1 = 1;
  1230  0108  169F               	bsf	31,5	;volatile
  1231                           
  1232                           ;ADC.c: 115:             break;
  1233  0109  2927               	goto	l132
  1234  010A                     l131:	
  1235                           ;ADC.c: 116:         case 3:
  1236                           
  1237                           
  1238                           ;ADC.c: 117:             ADCON1bits.VCFG0 = 1;
  1239  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1240  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1241  010C  161F               	bsf	31,4	;volatile
  1242                           
  1243                           ;ADC.c: 118:             ADCON1bits.VCFG1 = 1;
  1244  010D  169F               	bsf	31,5	;volatile
  1245                           
  1246                           ;ADC.c: 119:             break;
  1247  010E  2927               	goto	l132
  1248  010F                     l1263:
  1249  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0111  0821               	movf	start_adc@Vref,w
  1252  0112  00A3               	movwf	??_start_adc
  1253  0113  01A4               	clrf	??_start_adc+1
  1254                           
  1255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1256                           ; Switch size 1, requested type "simple"
  1257                           ; Number of cases is 1, Range of values is 0 to 0
  1258                           ; switch strategies available:
  1259                           ; Name         Instructions Cycles
  1260                           ; simple_byte            4     3 (average)
  1261                           ; direct_byte           11     8 (fixed)
  1262                           ; jumptable            260     6 (fixed)
  1263                           ;	Chosen strategy is simple_byte
  1264  0114  0824               	movf	??_start_adc+1,w
  1265  0115  3A00               	xorlw	0	; case 0
  1266  0116  1903               	skipnz
  1267  0117  2919               	goto	l1687
  1268  0118  2927               	goto	l132
  1269  0119                     l1687:
  1270                           
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 4, Range of values is 0 to 3
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte           13     7 (average)
  1276                           ; direct_byte           20     8 (fixed)
  1277                           ; jumptable            260     6 (fixed)
  1278                           ;	Chosen strategy is simple_byte
  1279  0119  0823               	movf	??_start_adc,w
  1280  011A  3A00               	xorlw	0	; case 0
  1281  011B  1903               	skipnz
  1282  011C  28FB               	goto	l127
  1283  011D  3A01               	xorlw	1	; case 1
  1284  011E  1903               	skipnz
  1285  011F  2900               	goto	l129
  1286  0120  3A03               	xorlw	3	; case 2
  1287  0121  1903               	skipnz
  1288  0122  2905               	goto	l130
  1289  0123  3A01               	xorlw	1	; case 3
  1290  0124  1903               	skipnz
  1291  0125  290A               	goto	l131
  1292  0126  2927               	goto	l132
  1293  0127                     l132:
  1294  0127  0008               	return
  1295  0128                     __end_of_start_adc:
  1296                           
  1297                           	psect	text3
  1298  028E                     __ptext3:	
  1299 ;; *************** function _setup *****************
  1300 ;; Defined at:
  1301 ;;		line 92 in file "Lab03_slave.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0
  1318 ;;      Totals:         0       0       0       0       0
  1319 ;;Total ram usage:        0 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    4
  1322 ;; This function calls:
  1323 ;;		_config_osc
  1324 ;;		_spiInit
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _setup
  1332  028E                     _setup:
  1333  028E                     l1487:	
  1334                           ;incstack = 0
  1335                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1336                           
  1337                           
  1338                           ;Lab03_slave.c: 93:     ANSEL = 0x03;
  1339  028E  3003               	movlw	3
  1340  028F  1683               	bsf	3,5	;RP0=1, select bank3
  1341  0290  1703               	bsf	3,6	;RP1=1, select bank3
  1342  0291  0088               	movwf	8	;volatile
  1343  0292                     l1489:
  1344                           
  1345                           ;Lab03_slave.c: 94:     ANSELH = 0x00;
  1346  0292  0189               	clrf	9	;volatile
  1347  0293                     l1491:
  1348                           
  1349                           ;Lab03_slave.c: 95:     TRISAbits.TRISA5 = 1;
  1350  0293  1683               	bsf	3,5	;RP0=1, select bank1
  1351  0294  1303               	bcf	3,6	;RP1=0, select bank1
  1352  0295  1685               	bsf	5,5	;volatile
  1353  0296                     l1493:
  1354                           
  1355                           ;Lab03_slave.c: 96:     TRISA = 0x03;
  1356  0296  3003               	movlw	3
  1357  0297  0085               	movwf	5	;volatile
  1358                           
  1359                           ;Lab03_slave.c: 97:     TRISB = 0x00;
  1360  0298  0186               	clrf	6	;volatile
  1361                           
  1362                           ;Lab03_slave.c: 98:     PORTA = 0X00;
  1363  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1364  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1365  029B  0185               	clrf	5	;volatile
  1366                           
  1367                           ;Lab03_slave.c: 99:     PORTB = 0x00;
  1368  029C  0186               	clrf	6	;volatile
  1369  029D                     l1495:
  1370                           
  1371                           ;Lab03_slave.c: 101:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
  1372  029D  01A0               	clrf	spiInit@sDataSample
  1373  029E  01A1               	clrf	spiInit@sClockIdle
  1374  029F  01A2               	clrf	spiInit@sTransmitEdge
  1375  02A0  3024               	movlw	36
  1376  02A1  120A  118A  22B5  120A  118A  	fcall	_spiInit
  1377  02A6                     l1497:
  1378                           
  1379                           ;Lab03_slave.c: 104:     config_osc(7);
  1380  02A6  3007               	movlw	7
  1381  02A7  120A  118A  21F8  120A  118A  	fcall	_config_osc
  1382  02AC                     l1499:
  1383                           
  1384                           ;Lab03_slave.c: 106:     INTCONbits.GIE = 1;
  1385  02AC  178B               	bsf	11,7	;volatile
  1386  02AD                     l1501:
  1387                           
  1388                           ;Lab03_slave.c: 107:     INTCONbits.PEIE = 1;
  1389  02AD  170B               	bsf	11,6	;volatile
  1390  02AE                     l1503:
  1391                           
  1392                           ;Lab03_slave.c: 108:     PIR1bits.SSPIF = 0;
  1393  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1394  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1395  02B0  118C               	bcf	12,3	;volatile
  1396  02B1                     l1505:
  1397                           
  1398                           ;Lab03_slave.c: 109:     PIE1bits.SSPIE = 1;
  1399  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1400  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  1401  02B3  158C               	bsf	12,3	;volatile
  1402  02B4                     l74:
  1403  02B4  0008               	return
  1404  02B5                     __end_of_setup:
  1405                           
  1406                           	psect	text4
  1407  02B5                     __ptext4:	
  1408 ;; *************** function _spiInit *****************
  1409 ;; Defined at:
  1410 ;;		line 53 in file "SPI_slave.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  sType           1    wreg     enum E1475
  1413 ;;  sDataSample     1    0[BANK0 ] enum E1483
  1414 ;;  sClockIdle      1    1[BANK0 ] enum E1487
  1415 ;;  sTransmitEdg    1    2[BANK0 ] enum E1491
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  sType           1    3[BANK0 ] enum E1475
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       3       0       0       0
  1428 ;;      Locals:         0       1       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         0       4       0       0       0
  1431 ;;Total ram usage:        4 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    3
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_setup
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _spiInit
  1443  02B5                     _spiInit:
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1447                           ;spiInit@sType stored from wreg
  1448  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1449  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1450  02B7  00A3               	movwf	spiInit@sType
  1451  02B8                     l1477:
  1452                           
  1453                           ;SPI_slave.c: 53: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_slave.c: 54: {;SPI_slave.c: 55:     
      +                          TRISC5 = 0;
  1454  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  1455  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  1456  02BA  1287               	bcf	7,5	;volatile
  1457                           
  1458                           ;SPI_slave.c: 56:     if(sType & 0b00000100)
  1459  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1460  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1461  02BD  1D23               	btfss	spiInit@sType,2
  1462  02BE  2AC0               	goto	u241
  1463  02BF  2AC1               	goto	u240
  1464  02C0                     u241:
  1465  02C0  2AC7               	goto	l1483
  1466  02C1                     u240:
  1467  02C1                     l1479:
  1468                           
  1469                           ;SPI_slave.c: 57:     {;SPI_slave.c: 58:         SSPSTAT = sTransmitEdge;
  1470  02C1  0822               	movf	spiInit@sTransmitEdge,w
  1471  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  1472  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  1473  02C4  0094               	movwf	20	;volatile
  1474  02C5                     l1481:
  1475                           
  1476                           ;SPI_slave.c: 59:         TRISC3 = 1;
  1477  02C5  1587               	bsf	7,3	;volatile
  1478                           
  1479                           ;SPI_slave.c: 60:     }
  1480  02C6  2ACD               	goto	l203
  1481  02C7                     l1483:
  1482                           
  1483                           ;SPI_slave.c: 62:     {;SPI_slave.c: 63:         SSPSTAT = sDataSample | sTransmitEdge;
  1484  02C7  0820               	movf	spiInit@sDataSample,w
  1485  02C8  0422               	iorwf	spiInit@sTransmitEdge,w
  1486  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1487  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  1488  02CB  0094               	movwf	20	;volatile
  1489  02CC                     l1485:
  1490                           
  1491                           ;SPI_slave.c: 64:         TRISC3 = 0;
  1492  02CC  1187               	bcf	7,3	;volatile
  1493  02CD                     l203:	
  1494                           ;SPI_slave.c: 65:     }
  1495                           
  1496                           
  1497                           ;SPI_slave.c: 67:     SSPCON = sType | sClockIdle;
  1498  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1499  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1500  02CF  0823               	movf	spiInit@sType,w
  1501  02D0  0421               	iorwf	spiInit@sClockIdle,w
  1502  02D1  0094               	movwf	20	;volatile
  1503  02D2                     l204:
  1504  02D2  0008               	return
  1505  02D3                     __end_of_spiInit:
  1506                           
  1507                           	psect	text5
  1508  01F8                     __ptext5:	
  1509 ;; *************** function _config_osc *****************
  1510 ;; Defined at:
  1511 ;;		line 22 in file "SPI_slave.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  frec            1    wreg     unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  frec            1    2[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         0       1       0       0       0
  1527 ;;      Temps:          0       2       0       0       0
  1528 ;;      Totals:         0       3       0       0       0
  1529 ;;Total ram usage:        3 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_setup
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _config_osc
  1541  01F8                     _config_osc:
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in _config_osc: [wreg-fsr0h+status,2+status,0]
  1545                           ;config_osc@frec stored from wreg
  1546  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1547  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1548  01FA  00A2               	movwf	config_osc@frec
  1549  01FB                     l1197:
  1550                           
  1551                           ;SPI_slave.c: 23:         switch(frec){
  1552  01FB  2A2E               	goto	l1217
  1553  01FC                     l1199:
  1554                           
  1555                           ;SPI_slave.c: 25:                 OSCCONbits.IRCF = 000;
  1556  01FC  308F               	movlw	-113
  1557  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1558  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1559  01FF  058F               	andwf	15,f	;volatile
  1560                           
  1561                           ;SPI_slave.c: 26:                 break;
  1562  0200  2A4D               	goto	l191
  1563  0201                     l1201:
  1564                           
  1565                           ;SPI_slave.c: 28:                 OSCCONbits.IRCF = 001;
  1566  0201  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0202  1303               	bcf	3,6	;RP1=0, select bank1
  1568  0203  080F               	movf	15,w	;volatile
  1569  0204  398F               	andlw	-113
  1570  0205  3810               	iorlw	16
  1571  0206  008F               	movwf	15	;volatile
  1572                           
  1573                           ;SPI_slave.c: 29:                 break;
  1574  0207  2A4D               	goto	l191
  1575  0208                     l1203:
  1576                           
  1577                           ;SPI_slave.c: 31:                 OSCCONbits.IRCF = 010;
  1578  0208  308F               	movlw	-113
  1579  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1580  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1581  020B  058F               	andwf	15,f	;volatile
  1582                           
  1583                           ;SPI_slave.c: 32:                 break;
  1584  020C  2A4D               	goto	l191
  1585  020D                     l1205:
  1586                           
  1587                           ;SPI_slave.c: 34:                 OSCCONbits.IRCF = 011;
  1588  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1589  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1590  020F  080F               	movf	15,w	;volatile
  1591  0210  398F               	andlw	-113
  1592  0211  3810               	iorlw	16
  1593  0212  008F               	movwf	15	;volatile
  1594                           
  1595                           ;SPI_slave.c: 35:                 break;
  1596  0213  2A4D               	goto	l191
  1597  0214                     l1207:
  1598                           
  1599                           ;SPI_slave.c: 37:                 OSCCONbits.IRCF = 100;
  1600  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0216  080F               	movf	15,w	;volatile
  1603  0217  398F               	andlw	-113
  1604  0218  3840               	iorlw	64
  1605  0219  008F               	movwf	15	;volatile
  1606                           
  1607                           ;SPI_slave.c: 38:                 break;
  1608  021A  2A4D               	goto	l191
  1609  021B                     l1209:
  1610                           
  1611                           ;SPI_slave.c: 40:                 OSCCONbits.IRCF = 101;
  1612  021B  1683               	bsf	3,5	;RP0=1, select bank1
  1613  021C  1303               	bcf	3,6	;RP1=0, select bank1
  1614  021D  080F               	movf	15,w	;volatile
  1615  021E  398F               	andlw	-113
  1616  021F  3850               	iorlw	80
  1617  0220  008F               	movwf	15	;volatile
  1618                           
  1619                           ;SPI_slave.c: 41:                 break;
  1620  0221  2A4D               	goto	l191
  1621  0222                     l1211:
  1622                           
  1623                           ;SPI_slave.c: 43:                 OSCCONbits.IRCF = 111;
  1624  0222  3070               	movlw	112
  1625  0223  1683               	bsf	3,5	;RP0=1, select bank1
  1626  0224  1303               	bcf	3,6	;RP1=0, select bank1
  1627  0225  048F               	iorwf	15,f	;volatile
  1628                           
  1629                           ;SPI_slave.c: 44:                 break;
  1630  0226  2A4D               	goto	l191
  1631  0227                     l1213:
  1632                           
  1633                           ;SPI_slave.c: 46:                 OSCCONbits.IRCF = 110;
  1634  0227  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0228  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0229  080F               	movf	15,w	;volatile
  1637  022A  398F               	andlw	-113
  1638  022B  3860               	iorlw	96
  1639  022C  008F               	movwf	15	;volatile
  1640                           
  1641                           ;SPI_slave.c: 47:                 break;
  1642  022D  2A4D               	goto	l191
  1643  022E                     l1217:
  1644  022E  0822               	movf	config_osc@frec,w
  1645  022F  00A0               	movwf	??_config_osc
  1646  0230  01A1               	clrf	??_config_osc+1
  1647                           
  1648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1649                           ; Switch size 1, requested type "simple"
  1650                           ; Number of cases is 1, Range of values is 0 to 0
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte            4     3 (average)
  1654                           ; direct_byte           11     8 (fixed)
  1655                           ; jumptable            260     6 (fixed)
  1656                           ;	Chosen strategy is simple_byte
  1657  0231  0821               	movf	??_config_osc+1,w
  1658  0232  3A00               	xorlw	0	; case 0
  1659  0233  1903               	skipnz
  1660  0234  2A36               	goto	l1689
  1661  0235  2A27               	goto	l1213
  1662  0236                     l1689:
  1663                           
  1664                           ; Switch size 1, requested type "simple"
  1665                           ; Number of cases is 7, Range of values is 0 to 7
  1666                           ; switch strategies available:
  1667                           ; Name         Instructions Cycles
  1668                           ; simple_byte           22    12 (average)
  1669                           ; direct_byte           32     8 (fixed)
  1670                           ; jumptable            260     6 (fixed)
  1671                           ;	Chosen strategy is simple_byte
  1672  0236  0820               	movf	??_config_osc,w
  1673  0237  3A00               	xorlw	0	; case 0
  1674  0238  1903               	skipnz
  1675  0239  29FC               	goto	l1199
  1676  023A  3A01               	xorlw	1	; case 1
  1677  023B  1903               	skipnz
  1678  023C  2A01               	goto	l1201
  1679  023D  3A03               	xorlw	3	; case 2
  1680  023E  1903               	skipnz
  1681  023F  2A08               	goto	l1203
  1682  0240  3A01               	xorlw	1	; case 3
  1683  0241  1903               	skipnz
  1684  0242  2A0D               	goto	l1205
  1685  0243  3A07               	xorlw	7	; case 4
  1686  0244  1903               	skipnz
  1687  0245  2A14               	goto	l1207
  1688  0246  3A01               	xorlw	1	; case 5
  1689  0247  1903               	skipnz
  1690  0248  2A1B               	goto	l1209
  1691  0249  3A02               	xorlw	2	; case 7
  1692  024A  1903               	skipnz
  1693  024B  2A22               	goto	l1211
  1694  024C  2A27               	goto	l1213
  1695  024D                     l191:
  1696                           
  1697                           ;SPI_slave.c: 49:         OSCCONbits.SCS = 1;
  1698  024D  140F               	bsf	15,0	;volatile
  1699  024E                     l199:
  1700  024E  0008               	return
  1701  024F                     __end_of_config_osc:
  1702                           
  1703                           	psect	text6
  1704  001A                     __ptext6:	
  1705 ;; *************** function _Select_ch *****************
  1706 ;; Defined at:
  1707 ;;		line 173 in file "ADC.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  channel         1    wreg     unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  channel         1    2[BANK0 ] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1721 ;;      Params:         0       0       0       0       0
  1722 ;;      Locals:         0       1       0       0       0
  1723 ;;      Temps:          0       2       0       0       0
  1724 ;;      Totals:         0       3       0       0       0
  1725 ;;Total ram usage:        3 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    3
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _Select_ch
  1737  001A                     _Select_ch:
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _Select_ch: [wreg-fsr0h+status,2+status,0]
  1741                           ;Select_ch@channel stored from wreg
  1742  001A  1283               	bcf	3,5	;RP0=0, select bank0
  1743  001B  1303               	bcf	3,6	;RP1=0, select bank0
  1744  001C  00A2               	movwf	Select_ch@channel
  1745  001D                     l1285:
  1746                           
  1747                           ;ADC.c: 174:     switch (channel) {
  1748  001D  286E               	goto	l1289
  1749  001E                     l155:	
  1750                           ;ADC.c: 175:         case 0:
  1751                           
  1752                           
  1753                           ;ADC.c: 176:             ADCON0bits.CHS0 = 0;
  1754  001E  111F               	bcf	31,2	;volatile
  1755                           
  1756                           ;ADC.c: 177:             ADCON0bits.CHS1 = 0;
  1757  001F  119F               	bcf	31,3	;volatile
  1758                           
  1759                           ;ADC.c: 178:             ADCON0bits.CHS2 = 0;
  1760  0020  121F               	bcf	31,4	;volatile
  1761                           
  1762                           ;ADC.c: 179:             ADCON0bits.CHS3 = 0;
  1763  0021  129F               	bcf	31,5	;volatile
  1764                           
  1765                           ;ADC.c: 180:             break;
  1766  0022  28A8               	goto	l1291
  1767  0023                     l157:	
  1768                           ;ADC.c: 181:         case 1:
  1769                           
  1770                           
  1771                           ;ADC.c: 182:             ADCON0bits.CHS0 = 1;
  1772  0023  151F               	bsf	31,2	;volatile
  1773                           
  1774                           ;ADC.c: 183:             ADCON0bits.CHS1 = 0;
  1775  0024  119F               	bcf	31,3	;volatile
  1776                           
  1777                           ;ADC.c: 184:             ADCON0bits.CHS2 = 0;
  1778  0025  121F               	bcf	31,4	;volatile
  1779                           
  1780                           ;ADC.c: 185:             ADCON0bits.CHS3 = 0;
  1781  0026  129F               	bcf	31,5	;volatile
  1782                           
  1783                           ;ADC.c: 186:             break;
  1784  0027  28A8               	goto	l1291
  1785  0028                     l158:	
  1786                           ;ADC.c: 187:         case 2:
  1787                           
  1788                           
  1789                           ;ADC.c: 188:             ADCON0bits.CHS0 = 0;
  1790  0028  111F               	bcf	31,2	;volatile
  1791                           
  1792                           ;ADC.c: 189:             ADCON0bits.CHS1 = 1;
  1793  0029  159F               	bsf	31,3	;volatile
  1794                           
  1795                           ;ADC.c: 190:             ADCON0bits.CHS2 = 0;
  1796  002A  121F               	bcf	31,4	;volatile
  1797                           
  1798                           ;ADC.c: 191:             ADCON0bits.CHS3 = 0;
  1799  002B  129F               	bcf	31,5	;volatile
  1800                           
  1801                           ;ADC.c: 192:             break;
  1802  002C  28A8               	goto	l1291
  1803  002D                     l159:	
  1804                           ;ADC.c: 193:         case 3:
  1805                           
  1806                           
  1807                           ;ADC.c: 194:             ADCON0bits.CHS0 = 1;
  1808  002D  151F               	bsf	31,2	;volatile
  1809                           
  1810                           ;ADC.c: 195:             ADCON0bits.CHS1 = 1;
  1811  002E  159F               	bsf	31,3	;volatile
  1812                           
  1813                           ;ADC.c: 196:             ADCON0bits.CHS2 = 0;
  1814  002F  121F               	bcf	31,4	;volatile
  1815                           
  1816                           ;ADC.c: 197:             ADCON0bits.CHS3 = 0;
  1817  0030  129F               	bcf	31,5	;volatile
  1818                           
  1819                           ;ADC.c: 198:             break;
  1820  0031  28A8               	goto	l1291
  1821  0032                     l160:	
  1822                           ;ADC.c: 199:         case 4:
  1823                           
  1824                           
  1825                           ;ADC.c: 200:             ADCON0bits.CHS0 = 0;
  1826  0032  111F               	bcf	31,2	;volatile
  1827                           
  1828                           ;ADC.c: 201:             ADCON0bits.CHS1 = 0;
  1829  0033  119F               	bcf	31,3	;volatile
  1830                           
  1831                           ;ADC.c: 202:             ADCON0bits.CHS2 = 1;
  1832  0034  161F               	bsf	31,4	;volatile
  1833                           
  1834                           ;ADC.c: 203:             ADCON0bits.CHS3 = 0;
  1835  0035  129F               	bcf	31,5	;volatile
  1836                           
  1837                           ;ADC.c: 204:             break;
  1838  0036  28A8               	goto	l1291
  1839  0037                     l161:	
  1840                           ;ADC.c: 205:         case 5:
  1841                           
  1842                           
  1843                           ;ADC.c: 206:             ADCON0bits.CHS0 = 1;
  1844  0037  151F               	bsf	31,2	;volatile
  1845                           
  1846                           ;ADC.c: 207:             ADCON0bits.CHS1 = 0;
  1847  0038  119F               	bcf	31,3	;volatile
  1848                           
  1849                           ;ADC.c: 208:             ADCON0bits.CHS2 = 1;
  1850  0039  161F               	bsf	31,4	;volatile
  1851                           
  1852                           ;ADC.c: 209:             ADCON0bits.CHS3 = 0;
  1853  003A  129F               	bcf	31,5	;volatile
  1854                           
  1855                           ;ADC.c: 210:             break;
  1856  003B  28A8               	goto	l1291
  1857  003C                     l162:	
  1858                           ;ADC.c: 211:         case 6:
  1859                           
  1860                           
  1861                           ;ADC.c: 212:             ADCON0bits.CHS0 = 0;
  1862  003C  111F               	bcf	31,2	;volatile
  1863                           
  1864                           ;ADC.c: 213:             ADCON0bits.CHS1 = 1;
  1865  003D  159F               	bsf	31,3	;volatile
  1866                           
  1867                           ;ADC.c: 214:             ADCON0bits.CHS2 = 1;
  1868  003E  161F               	bsf	31,4	;volatile
  1869                           
  1870                           ;ADC.c: 215:             ADCON0bits.CHS3 = 0;
  1871  003F  129F               	bcf	31,5	;volatile
  1872                           
  1873                           ;ADC.c: 216:             break;
  1874  0040  28A8               	goto	l1291
  1875  0041                     l163:	
  1876                           ;ADC.c: 217:         case 7:
  1877                           
  1878                           
  1879                           ;ADC.c: 218:             ADCON0bits.CHS0 = 1;
  1880  0041  151F               	bsf	31,2	;volatile
  1881                           
  1882                           ;ADC.c: 219:             ADCON0bits.CHS1 = 1;
  1883  0042  159F               	bsf	31,3	;volatile
  1884                           
  1885                           ;ADC.c: 220:             ADCON0bits.CHS2 = 1;
  1886  0043  161F               	bsf	31,4	;volatile
  1887                           
  1888                           ;ADC.c: 221:             ADCON0bits.CHS3 = 0;
  1889  0044  129F               	bcf	31,5	;volatile
  1890                           
  1891                           ;ADC.c: 222:             break;
  1892  0045  28A8               	goto	l1291
  1893  0046                     l164:	
  1894                           ;ADC.c: 223:         case 8:
  1895                           
  1896                           
  1897                           ;ADC.c: 224:             ADCON0bits.CHS0 = 0;
  1898  0046  111F               	bcf	31,2	;volatile
  1899                           
  1900                           ;ADC.c: 225:             ADCON0bits.CHS1 = 0;
  1901  0047  119F               	bcf	31,3	;volatile
  1902                           
  1903                           ;ADC.c: 226:             ADCON0bits.CHS2 = 0;
  1904  0048  121F               	bcf	31,4	;volatile
  1905                           
  1906                           ;ADC.c: 227:             ADCON0bits.CHS3 = 1;
  1907  0049  169F               	bsf	31,5	;volatile
  1908                           
  1909                           ;ADC.c: 228:             break;
  1910  004A  28A8               	goto	l1291
  1911  004B                     l165:	
  1912                           ;ADC.c: 229:         case 9:
  1913                           
  1914                           
  1915                           ;ADC.c: 230:             ADCON0bits.CHS0 = 1;
  1916  004B  151F               	bsf	31,2	;volatile
  1917                           
  1918                           ;ADC.c: 231:             ADCON0bits.CHS1 = 0;
  1919  004C  119F               	bcf	31,3	;volatile
  1920                           
  1921                           ;ADC.c: 232:             ADCON0bits.CHS2 = 0;
  1922  004D  121F               	bcf	31,4	;volatile
  1923                           
  1924                           ;ADC.c: 233:             ADCON0bits.CHS3 = 1;
  1925  004E  169F               	bsf	31,5	;volatile
  1926                           
  1927                           ;ADC.c: 234:             break;
  1928  004F  28A8               	goto	l1291
  1929  0050                     l166:	
  1930                           ;ADC.c: 235:         case 10:
  1931                           
  1932                           
  1933                           ;ADC.c: 236:             ADCON0bits.CHS0 = 0;
  1934  0050  111F               	bcf	31,2	;volatile
  1935                           
  1936                           ;ADC.c: 237:             ADCON0bits.CHS1 = 1;
  1937  0051  159F               	bsf	31,3	;volatile
  1938                           
  1939                           ;ADC.c: 238:             ADCON0bits.CHS2 = 0;
  1940  0052  121F               	bcf	31,4	;volatile
  1941                           
  1942                           ;ADC.c: 239:             ADCON0bits.CHS3 = 1;
  1943  0053  169F               	bsf	31,5	;volatile
  1944                           
  1945                           ;ADC.c: 240:             break;
  1946  0054  28A8               	goto	l1291
  1947  0055                     l167:	
  1948                           ;ADC.c: 241:         case 11:
  1949                           
  1950                           
  1951                           ;ADC.c: 242:             ADCON0bits.CHS0 = 1;
  1952  0055  151F               	bsf	31,2	;volatile
  1953                           
  1954                           ;ADC.c: 243:             ADCON0bits.CHS1 = 1;
  1955  0056  159F               	bsf	31,3	;volatile
  1956                           
  1957                           ;ADC.c: 244:             ADCON0bits.CHS2 = 0;
  1958  0057  121F               	bcf	31,4	;volatile
  1959                           
  1960                           ;ADC.c: 245:             ADCON0bits.CHS3 = 1;
  1961  0058  169F               	bsf	31,5	;volatile
  1962                           
  1963                           ;ADC.c: 246:             break;
  1964  0059  28A8               	goto	l1291
  1965  005A                     l168:	
  1966                           ;ADC.c: 247:         case 12:
  1967                           
  1968                           
  1969                           ;ADC.c: 248:             ADCON0bits.CHS0 = 0;
  1970  005A  111F               	bcf	31,2	;volatile
  1971                           
  1972                           ;ADC.c: 249:             ADCON0bits.CHS1 = 0;
  1973  005B  119F               	bcf	31,3	;volatile
  1974                           
  1975                           ;ADC.c: 250:             ADCON0bits.CHS2 = 1;
  1976  005C  161F               	bsf	31,4	;volatile
  1977                           
  1978                           ;ADC.c: 251:             ADCON0bits.CHS3 = 1;
  1979  005D  169F               	bsf	31,5	;volatile
  1980                           
  1981                           ;ADC.c: 252:             break;
  1982  005E  28A8               	goto	l1291
  1983  005F                     l169:	
  1984                           ;ADC.c: 253:         case 13:
  1985                           
  1986                           
  1987                           ;ADC.c: 254:             ADCON0bits.CHS0 = 1;
  1988  005F  151F               	bsf	31,2	;volatile
  1989                           
  1990                           ;ADC.c: 255:             ADCON0bits.CHS1 = 0;
  1991  0060  119F               	bcf	31,3	;volatile
  1992                           
  1993                           ;ADC.c: 256:             ADCON0bits.CHS2 = 1;
  1994  0061  161F               	bsf	31,4	;volatile
  1995                           
  1996                           ;ADC.c: 257:             ADCON0bits.CHS3 = 1;
  1997  0062  169F               	bsf	31,5	;volatile
  1998                           
  1999                           ;ADC.c: 258:             break;
  2000  0063  28A8               	goto	l1291
  2001  0064                     l170:	
  2002                           ;ADC.c: 259:         case 14:
  2003                           
  2004                           
  2005                           ;ADC.c: 260:             ADCON0bits.CHS0 = 0;
  2006  0064  111F               	bcf	31,2	;volatile
  2007                           
  2008                           ;ADC.c: 261:             ADCON0bits.CHS1 = 1;
  2009  0065  159F               	bsf	31,3	;volatile
  2010                           
  2011                           ;ADC.c: 262:             ADCON0bits.CHS2 = 1;
  2012  0066  161F               	bsf	31,4	;volatile
  2013                           
  2014                           ;ADC.c: 263:             ADCON0bits.CHS3 = 1;
  2015  0067  169F               	bsf	31,5	;volatile
  2016                           
  2017                           ;ADC.c: 264:             break;
  2018  0068  28A8               	goto	l1291
  2019  0069                     l171:	
  2020                           ;ADC.c: 265:         case 15:
  2021                           
  2022                           
  2023                           ;ADC.c: 266:             ADCON0bits.CHS0 = 1;
  2024  0069  151F               	bsf	31,2	;volatile
  2025                           
  2026                           ;ADC.c: 267:             ADCON0bits.CHS1 = 1;
  2027  006A  159F               	bsf	31,3	;volatile
  2028                           
  2029                           ;ADC.c: 268:             ADCON0bits.CHS2 = 1;
  2030  006B  161F               	bsf	31,4	;volatile
  2031                           
  2032                           ;ADC.c: 269:             ADCON0bits.CHS3 = 1;
  2033  006C  169F               	bsf	31,5	;volatile
  2034                           
  2035                           ;ADC.c: 270:             break;
  2036  006D  28A8               	goto	l1291
  2037  006E                     l1289:
  2038  006E  0822               	movf	Select_ch@channel,w
  2039  006F  00A0               	movwf	??_Select_ch
  2040  0070  01A1               	clrf	??_Select_ch+1
  2041                           
  2042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 1, Range of values is 0 to 0
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte            4     3 (average)
  2048                           ; direct_byte           11     8 (fixed)
  2049                           ; jumptable            260     6 (fixed)
  2050                           ;	Chosen strategy is simple_byte
  2051  0071  0821               	movf	??_Select_ch+1,w
  2052  0072  3A00               	xorlw	0	; case 0
  2053  0073  1903               	skipnz
  2054  0074  2876               	goto	l1691
  2055  0075  28A8               	goto	l1291
  2056  0076                     l1691:
  2057                           
  2058                           ; Switch size 1, requested type "simple"
  2059                           ; Number of cases is 16, Range of values is 0 to 15
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte           49    25 (average)
  2063                           ; direct_byte           56     8 (fixed)
  2064                           ; jumptable            260     6 (fixed)
  2065                           ;	Chosen strategy is simple_byte
  2066  0076  0820               	movf	??_Select_ch,w
  2067  0077  3A00               	xorlw	0	; case 0
  2068  0078  1903               	skipnz
  2069  0079  281E               	goto	l155
  2070  007A  3A01               	xorlw	1	; case 1
  2071  007B  1903               	skipnz
  2072  007C  2823               	goto	l157
  2073  007D  3A03               	xorlw	3	; case 2
  2074  007E  1903               	skipnz
  2075  007F  2828               	goto	l158
  2076  0080  3A01               	xorlw	1	; case 3
  2077  0081  1903               	skipnz
  2078  0082  282D               	goto	l159
  2079  0083  3A07               	xorlw	7	; case 4
  2080  0084  1903               	skipnz
  2081  0085  2832               	goto	l160
  2082  0086  3A01               	xorlw	1	; case 5
  2083  0087  1903               	skipnz
  2084  0088  2837               	goto	l161
  2085  0089  3A03               	xorlw	3	; case 6
  2086  008A  1903               	skipnz
  2087  008B  283C               	goto	l162
  2088  008C  3A01               	xorlw	1	; case 7
  2089  008D  1903               	skipnz
  2090  008E  2841               	goto	l163
  2091  008F  3A0F               	xorlw	15	; case 8
  2092  0090  1903               	skipnz
  2093  0091  2846               	goto	l164
  2094  0092  3A01               	xorlw	1	; case 9
  2095  0093  1903               	skipnz
  2096  0094  284B               	goto	l165
  2097  0095  3A03               	xorlw	3	; case 10
  2098  0096  1903               	skipnz
  2099  0097  2850               	goto	l166
  2100  0098  3A01               	xorlw	1	; case 11
  2101  0099  1903               	skipnz
  2102  009A  2855               	goto	l167
  2103  009B  3A07               	xorlw	7	; case 12
  2104  009C  1903               	skipnz
  2105  009D  285A               	goto	l168
  2106  009E  3A01               	xorlw	1	; case 13
  2107  009F  1903               	skipnz
  2108  00A0  285F               	goto	l169
  2109  00A1  3A03               	xorlw	3	; case 14
  2110  00A2  1903               	skipnz
  2111  00A3  2864               	goto	l170
  2112  00A4  3A01               	xorlw	1	; case 15
  2113  00A5  1903               	skipnz
  2114  00A6  2869               	goto	l171
  2115  00A7  28A8               	goto	l1291
  2116  00A8                     l1291:
  2117                           
  2118                           ;ADC.c: 272:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2119  00A8  3084               	movlw	132
  2120  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2121  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2122  00AB  00A0               	movwf	??_Select_ch
  2123  00AC                     u307:
  2124  00AC  0BA0               	decfsz	??_Select_ch,f
  2125  00AD  28AC               	goto	u307
  2126  00AE  0000               	nop
  2127  00AF                     l1293:
  2128                           
  2129                           ;ADC.c: 273:     ADCON0bits.GO = 1;
  2130  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  2131  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  2132  00B1  149F               	bsf	31,1	;volatile
  2133  00B2                     l172:
  2134  00B2  0008               	return
  2135  00B3                     __end_of_Select_ch:
  2136                           
  2137                           	psect	text7
  2138  024F                     __ptext7:	
  2139 ;; *************** function _isr *****************
  2140 ;; Defined at:
  2141 ;;		line 44 in file "Lab03_slave.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  comando         1    6[COMMON] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       0       0       0       0
  2156 ;;      Locals:         1       0       0       0       0
  2157 ;;      Temps:          5       0       0       0       0
  2158 ;;      Totals:         6       0       0       0       0
  2159 ;;Total ram usage:        6 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    2
  2162 ;; This function calls:
  2163 ;;		_spiRead
  2164 ;;		_spiWrite
  2165 ;; This function is called by:
  2166 ;;		Interrupt level 1
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _isr
  2172  024F                     _isr:
  2173  024F                     i1l931:
  2174                           
  2175                           ;Lab03_slave.c: 45:    if(SSPIF == 1){
  2176  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2178  0251  1D8C               	btfss	12,3	;volatile
  2179  0252  2A54               	goto	u5_21
  2180  0253  2A55               	goto	u5_20
  2181  0254                     u5_21:
  2182  0254  2A85               	goto	i1l60
  2183  0255                     u5_20:
  2184  0255                     i1l933:
  2185                           
  2186                           ;Lab03_slave.c: 46:        uint8_t comando;;Lab03_slave.c: 47:        comando = spiRead(
      +                          );
  2187  0255  120A  118A  22D3  120A  118A  	fcall	_spiRead
  2188  025A  00F1               	movwf	??_isr
  2189  025B  0871               	movf	??_isr,w
  2190  025C  00F6               	movwf	isr@comando
  2191  025D                     i1l935:
  2192                           
  2193                           ;Lab03_slave.c: 48:        PORTB++;
  2194  025D  3001               	movlw	1
  2195  025E  00F1               	movwf	??_isr
  2196  025F  0871               	movf	??_isr,w
  2197  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0262  0786               	addwf	6,f	;volatile
  2200                           
  2201                           ;Lab03_slave.c: 49:        switch (comando){
  2202  0263  2A72               	goto	i1l943
  2203  0264                     i1l937:
  2204                           
  2205                           ;Lab03_slave.c: 51:                spiWrite(var_adc0);
  2206  0264  0878               	movf	_var_adc0,w
  2207  0265  120A  118A  22E3  120A  118A  	fcall	_spiWrite
  2208                           
  2209                           ;Lab03_slave.c: 52:                break;
  2210  026A  2A82               	goto	i1l58
  2211  026B                     i1l939:
  2212                           
  2213                           ;Lab03_slave.c: 54:                spiWrite(var_adc1);
  2214  026B  0877               	movf	_var_adc1,w
  2215  026C  120A  118A  22E3  120A  118A  	fcall	_spiWrite
  2216                           
  2217                           ;Lab03_slave.c: 55:                break;
  2218  0271  2A82               	goto	i1l58
  2219  0272                     i1l943:
  2220  0272  0876               	movf	isr@comando,w
  2221  0273  00F1               	movwf	??_isr
  2222  0274  01F2               	clrf	??_isr+1
  2223                           
  2224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2225                           ; Switch size 1, requested type "simple"
  2226                           ; Number of cases is 1, Range of values is 0 to 0
  2227                           ; switch strategies available:
  2228                           ; Name         Instructions Cycles
  2229                           ; simple_byte            4     3 (average)
  2230                           ; direct_byte           11     8 (fixed)
  2231                           ; jumptable            260     6 (fixed)
  2232                           ;	Chosen strategy is simple_byte
  2233  0275  0872               	movf	??_isr+1,w
  2234  0276  3A00               	xorlw	0	; case 0
  2235  0277  1903               	skipnz
  2236  0278  2A7A               	goto	i1l1693
  2237  0279  2A82               	goto	i1l58
  2238  027A                     i1l1693:
  2239                           
  2240                           ; Switch size 1, requested type "simple"
  2241                           ; Number of cases is 2, Range of values is 1 to 2
  2242                           ; switch strategies available:
  2243                           ; Name         Instructions Cycles
  2244                           ; simple_byte            7     4 (average)
  2245                           ; direct_byte           17    11 (fixed)
  2246                           ; jumptable            263     9 (fixed)
  2247                           ;	Chosen strategy is simple_byte
  2248  027A  0871               	movf	??_isr,w
  2249  027B  3A01               	xorlw	1	; case 1
  2250  027C  1903               	skipnz
  2251  027D  2A64               	goto	i1l937
  2252  027E  3A03               	xorlw	3	; case 2
  2253  027F  1903               	skipnz
  2254  0280  2A6B               	goto	i1l939
  2255  0281  2A82               	goto	i1l58
  2256  0282                     i1l58:
  2257                           
  2258                           ;Lab03_slave.c: 58:         PIR1bits.SSPIF = 0;
  2259  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0284  118C               	bcf	12,3	;volatile
  2262  0285                     i1l60:
  2263  0285  0875               	movf	??_isr+4,w
  2264  0286  008A               	movwf	10
  2265  0287  0874               	movf	??_isr+3,w
  2266  0288  0084               	movwf	4
  2267  0289  0E73               	swapf	??_isr+2,w
  2268  028A  0083               	movwf	3
  2269  028B  0EFE               	swapf	btemp,f
  2270  028C  0E7E               	swapf	btemp,w
  2271  028D  0009               	retfie
  2272  028E                     __end_of_isr:
  2273                           
  2274                           	psect	intentry
  2275  0004                     __pintentry:	
  2276                           ;incstack = 0
  2277                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2278                           
  2279  0004                     interrupt_function:
  2280  007E                     saved_w	set	btemp
  2281  0004  00FE               	movwf	btemp
  2282  0005  0E03               	swapf	3,w
  2283  0006  00F3               	movwf	??_isr+2
  2284  0007  0804               	movf	4,w
  2285  0008  00F4               	movwf	??_isr+3
  2286  0009  080A               	movf	10,w
  2287  000A  00F5               	movwf	??_isr+4
  2288  000B  120A  118A  2A4F   	ljmp	_isr
  2289                           
  2290                           	psect	text8
  2291  02E3                     __ptext8:	
  2292 ;; *************** function _spiWrite *****************
  2293 ;; Defined at:
  2294 ;;		line 75 in file "SPI_slave.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  dat             1    wreg     unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  dat             1    0[COMMON] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       0       0       0       0
  2309 ;;      Locals:         1       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0
  2311 ;;      Totals:         1       0       0       0       0
  2312 ;;Total ram usage:        1 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_isr
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _spiWrite
  2323  02E3                     _spiWrite:
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _spiWrite: [wreg]
  2327                           ;spiWrite@dat stored from wreg
  2328  02E3  00F0               	movwf	spiWrite@dat
  2329  02E4                     i1l857:
  2330                           
  2331                           ;SPI_slave.c: 75: void spiWrite(char dat);SPI_slave.c: 76: {;SPI_slave.c: 77:     SSPBUF
      +                           = dat;
  2332  02E4  0870               	movf	spiWrite@dat,w
  2333  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2334  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2335  02E7  0093               	movwf	19	;volatile
  2336  02E8                     i1l213:
  2337  02E8  0008               	return
  2338  02E9                     __end_of_spiWrite:
  2339                           
  2340                           	psect	text9
  2341  02D3                     __ptext9:	
  2342 ;; *************** function _spiRead *****************
  2343 ;; Defined at:
  2344 ;;		line 88 in file "SPI_slave.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      unsigned char 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    1
  2365 ;; This function calls:
  2366 ;;		_spiReceiveWait
  2367 ;; This function is called by:
  2368 ;;		_isr
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _spiRead
  2374  02D3                     _spiRead:
  2375  02D3                     i1l851:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2378                           
  2379                           
  2380                           ;SPI_slave.c: 90:     spiReceiveWait();
  2381  02D3  120A  118A  22DC  120A  118A  	fcall	_spiReceiveWait
  2382  02D8                     i1l853:
  2383                           
  2384                           ;SPI_slave.c: 91:     return(SSPBUF);
  2385  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2386  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2387  02DA  0813               	movf	19,w	;volatile
  2388  02DB                     i1l221:
  2389  02DB  0008               	return
  2390  02DC                     __end_of_spiRead:
  2391                           
  2392                           	psect	text10
  2393  02DC                     __ptext10:	
  2394 ;; *************** function _spiReceiveWait *****************
  2395 ;; Defined at:
  2396 ;;		line 70 in file "SPI_slave.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		None
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_spiRead
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _spiReceiveWait
  2425  02DC                     _spiReceiveWait:
  2426  02DC                     i1l849:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _spiReceiveWait: []
  2429                           
  2430  02DC                     i1l207:	
  2431                           ;SPI_slave.c: 72:     while ( !SSPSTATbits.BF );
  2432                           
  2433  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2434  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2435  02DE  1C14               	btfss	20,0	;volatile
  2436  02DF  2AE1               	goto	u2_21
  2437  02E0  2AE2               	goto	u2_20
  2438  02E1                     u2_21:
  2439  02E1  2ADC               	goto	i1l207
  2440  02E2                     u2_20:
  2441  02E2                     i1l210:
  2442  02E2  0008               	return
  2443  02E3                     __end_of_spiReceiveWait:
  2444  007E                     btemp	set	126	;btemp
  2445  007E                     wtemp0	set	126
  2446                           
  2447                           	psect	config
  2448                           
  2449                           ;Config register CONFIG1 @ 0x2007
  2450                           ;	Oscillator Selection bits
  2451                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2452                           ;	Watchdog Timer Enable bit
  2453                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2454                           ;	Power-up Timer Enable bit
  2455                           ;	PWRTE = ON, PWRT enabled
  2456                           ;	RE3/MCLR pin function select bit
  2457                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2458                           ;	Code Protection bit
  2459                           ;	CP = OFF, Program memory code protection is disabled
  2460                           ;	Data Code Protection bit
  2461                           ;	CPD = OFF, Data memory code protection is disabled
  2462                           ;	Brown Out Reset Selection bits
  2463                           ;	BOREN = OFF, BOR disabled
  2464                           ;	Internal External Switchover bit
  2465                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2466                           ;	Fail-Safe Clock Monitor Enabled bit
  2467                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2468                           ;	Low Voltage Programming Enable bit
  2469                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2470                           ;	In-Circuit Debugger Mode bit
  2471                           ;	DEBUG = 0x1, unprogrammed default
  2472  2007                     	org	8199
  2473  2007  20C4               	dw	8388
  2474                           
  2475                           ;Config register CONFIG2 @ 0x2008
  2476                           ;	Brown-out Reset Selection bit
  2477                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2478                           ;	Flash Program Memory Self Write Enable bits
  2479                           ;	WRT = OFF, Write protection off
  2480  2008                     	org	8200
  2481  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      7       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_start_adc
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     838
                                              6 BANK0      1     1      0
                          _Select_ch
                              _setup
                          _start_adc
                           _start_ch
 ---------------------------------------------------------------------------------
 (1) _start_ch                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _start_adc                                            6     3      3     316
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     478
                         _config_osc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_osc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Select_ch                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0      30
                                              1 COMMON     6     6      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Select_ch
   _setup
     _config_osc
     _spiInit
   _start_adc
   _start_ch

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 11:35:32 2021

            _SSPSTATbits 0094                       l74 02B4                      l120 00C2  
                    l121 00C5                      l130 0105                      l122 00C8  
                    l203 02CD                      l131 010A                      l204 02D2  
                    l132 0127                      l124 00F7                      l140 0138  
                    l141 013C                      l118 00BF                      l150 0160  
                    l142 0140                      l127 00FB                      l143 0144  
                    l151 0198                      l160 0032                      l144 0148  
                    l136 012C                      l161 0037                      l129 0100  
                    l145 014C                      l170 0064                      l162 003C  
                    l146 0150                      l138 0130                      l171 0069  
                    l163 0041                      l155 001E                      l147 0154  
                    l139 0134                      l172 00B2                      l164 0046  
                    l148 0158                      l165 004B                      l157 0023  
                    l149 015C                      l166 0050                      l158 0028  
                    l167 0055                      l159 002D                      l191 024D  
                    l168 005A                      l169 005F                      l199 024E  
                    u200 00F3                      u201 00F2                      u240 02C1  
                    u241 02C0                      u250 01C1                      u307 00AC  
                    u251 01C0                      u260 01C5                      u261 01C4  
                    u190 00E8                      u270 01CA                      u191 00E7  
                    u271 01C9                      u287 01ED                      u297 00BB  
                    _isr 024F                      fsr0 0004                     l1201 0201  
                   l1211 0222                     l1203 0208                     l1213 0227  
                   l1205 020D                     l1207 0214                     l1209 021B  
                   l1217 022E                     l1251 00CB                     l1501 02AD  
                   l1253 00E3                     l1245 00B6                     l1503 02AE  
                   l1263 010F                     l1255 00E8                     l1247 00B7  
                   l1511 01C1                     l1505 02B1                     l1257 00EE  
                   l1273 012B                     l1521 01DB                     l1513 01C5  
                   l1291 00A8                     l1259 00F3                     l1531 01F3  
                   l1523 01DF                     l1515 01CA                     l1507 0199  
                   l1293 00AF                     l1285 001D                     l1197 01FB  
                   l1277 0164                     l1525 01E5                     l1517 01CE  
                   l1509 01BB                     l1199 01FC                     l1527 01E9  
                   l1519 01D4                     l1289 006E                     l1481 02C5  
                   l1529 01F0                     l1483 02C7                     l1491 0293  
                   l1485 02CC                     l1477 02B8                     l1493 0296  
                   l1479 02C1                     l1495 029D                     l1487 028E  
                   l1497 02A6                     l1489 0292                     l1691 0076  
                   l1499 02AC                     l1683 016C                     l1685 00D5  
                   l1687 0119                     l1689 0236                     ?_isr 0070  
                   i1l60 0285                     i1l58 0282                     u2_20 02E2  
                   u2_21 02E1                     u5_20 0255                     u5_21 0254  
                   _main 0199                     btemp 007E                     start 000E  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l210 02E2                    i1l221 02DB                    i1l213 02E8  
                  i1l207 02DC                    i1l851 02D3                    i1l931 024F  
                  i1l853 02D8                    i1l933 0255                    i1l943 0272  
                  i1l935 025D                    i1l849 02DC                    i1l857 02E4  
                  i1l937 0264                    i1l939 026B                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _SSPIF 0063                    _setup 028E                    pclath 000A  
        __end_of_spiInit 02D3          __end_of_spiRead 02DC                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01F8  
                 ??_main 0026                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1693 027A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
     __size_of_Select_ch 0099             start_adc@isr 0020                   saved_w 007E  
       __end_of_spiWrite 02E9                ??_spiInit 0023                ??_spiRead 0070  
       __end_of_start_ch 0199  __end_of__initialization 0016           config_osc@frec 0022  
         __pcstackCOMMON 0070            __end_of_setup 02B5               _canal_flag 0027  
                ??_setup 0024        __end_of_Select_ch 00B3               __pbssBANK0 0027  
             __pmaintext 0199               __pintentry 0004  __size_of_spiReceiveWait 0007  
             _config_osc 01F8       __size_of_start_adc 0075                  _SSPSTAT 0094  
              ?_spiWrite 0070                ?_start_ch 0070                _ANSELbits 0188  
                __ptext1 0128                  __ptext2 00B3                  __ptext3 028E  
                __ptext4 02B5                  __ptext5 01F8                  __ptext6 001A  
                __ptext7 024F                  __ptext8 02E3                  __ptext9 02D3  
       Select_ch@channel 0022             __size_of_isr 003F            start_adc@Vref 0021  
          start_adc@frec 0025                  _spiInit 02B5                  _spiRead 02D3  
   end_of_initialization 0016               ??_spiWrite 0070        __end_of_start_adc 0128  
             ??_start_ch 0020                _TRISAbits 0085              ?_config_osc 0070  
            spiWrite@dat 0070           _spiReceiveWait 02DC      start_initialization 0011  
            __end_of_isr 028E               isr@comando 0076                _Select_ch 001A  
 __end_of_spiReceiveWait 02E3      __size_of_config_osc 0057              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020               ?_Select_ch 0070  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006        __size_of_start_ch 0071  
               ?_spiInit 0020                 ?_spiRead 0070           __size_of_setup 0027  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
        start_ch@channel 0022       spiInit@sDataSample 0020                 _PIR1bits 000C  
        start_adc@justRL 0022               _ADCON0bits 001F               _ADCON1bits 009F  
              _start_adc 00B3             ??_config_osc 0020              ??_Select_ch 0020  
     __end_of_config_osc 024F               ?_start_adc 0020               _ANSELHbits 0189  
               __ptext10 02DC         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 005F                 _var_adc0 0078                 _var_adc1 0077  
               _spiWrite 02E3             spiInit@sType 0023                 _start_ch 0128  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F              ??_start_adc 0023  
