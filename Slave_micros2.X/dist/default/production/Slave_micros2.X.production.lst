

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Aug 12 11:24:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0013                     _SSPBUF	set	19
   371  0014                     _SSPCON	set	20
   372  000B                     _INTCONbits	set	11
   373  0005                     _PORTA	set	5
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0bits	set	31
   376  000C                     _PIR1bits	set	12
   377  0006                     _PORTB	set	6
   378  0063                     _SSPIF	set	99
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  008F                     _OSCCONbits	set	143
   382  009F                     _ADCON1bits	set	159
   383  008C                     _PIE1bits	set	140
   384  0086                     _TRISB	set	134
   385  0085                     _TRISA	set	133
   386  0085                     _TRISAbits	set	133
   387  043B                     _TRISC3	set	1083
   388  043D                     _TRISC5	set	1085
   389  0189                     _ANSELHbits	set	393
   390  0188                     _ANSELbits	set	392
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  0011                     start_initialization:	
   396                           ; #config settings
   397                           
   398  0011                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   402  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   403                           
   404                           ; Clear objects allocated to BANK0
   405  0013  1283               	bcf	3,5	;RP0=0, select bank0
   406  0014  1303               	bcf	3,6	;RP1=0, select bank0
   407  0015  01A7               	clrf	__pbssBANK0& (0+127)
   408  0016                     end_of_initialization:	
   409                           ;End of C runtime variable initialization code
   410                           
   411  0016                     __end_of__initialization:
   412  0016  0183               	clrf	3
   413  0017  120A  118A  299B   	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMMON
   416  0077                     __pbssCOMMON:
   417  0077                     _var_adc1:
   418  0077                     	ds	1
   419  0078                     _var_adc0:
   420  0078                     	ds	1
   421                           
   422                           	psect	bssBANK0
   423  0027                     __pbssBANK0:
   424  0027                     _canal_flag:
   425  0027                     	ds	1
   426                           
   427                           	psect	cstackCOMMON
   428  0070                     __pcstackCOMMON:
   429  0070                     ?_spiRead:
   430  0070                     ??_spiRead:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_spiWrite:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_spiWrite:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_setup:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_start_ch:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_Select_ch:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_config_osc:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_isr:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_spiReceiveWait:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_spiReceiveWait:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     spiWrite@dat:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  0070                     	ds	1
   469  0071                     ??_isr:
   470                           
   471                           ; 1 bytes @ 0x1
   472  0071                     	ds	5
   473  0076                     isr@comando:
   474                           
   475                           ; 1 bytes @ 0x6
   476  0076                     	ds	1
   477                           
   478                           	psect	cstackBANK0
   479  0020                     __pcstackBANK0:
   480  0020                     ?_start_adc:
   481  0020                     ??_start_ch:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0020                     ??_Select_ch:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0020                     ?_spiInit:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0020                     ??_config_osc:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0020                     start_adc@isr:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0020                     spiInit@sDataSample:	
   497                           ; 1 bytes @ 0x0
   498                           
   499                           
   500                           ; 1 bytes @ 0x0
   501  0020                     	ds	1
   502  0021                     start_adc@Vref:
   503  0021                     spiInit@sClockIdle:	
   504                           ; 1 bytes @ 0x1
   505                           
   506                           
   507                           ; 1 bytes @ 0x1
   508  0021                     	ds	1
   509  0022                     start_adc@justRL:
   510  0022                     start_ch@channel:	
   511                           ; 1 bytes @ 0x2
   512                           
   513  0022                     Select_ch@channel:	
   514                           ; 1 bytes @ 0x2
   515                           
   516  0022                     config_osc@frec:	
   517                           ; 1 bytes @ 0x2
   518                           
   519  0022                     spiInit@sTransmitEdge:	
   520                           ; 1 bytes @ 0x2
   521                           
   522                           
   523                           ; 1 bytes @ 0x2
   524  0022                     	ds	1
   525  0023                     ??_start_adc:
   526  0023                     ??_spiInit:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0023                     spiInit@sType:	
   530                           ; 1 bytes @ 0x3
   531                           
   532                           
   533                           ; 1 bytes @ 0x3
   534  0023                     	ds	1
   535  0024                     ??_setup:
   536                           
   537                           ; 1 bytes @ 0x4
   538  0024                     	ds	1
   539  0025                     start_adc@frec:
   540                           
   541                           ; 1 bytes @ 0x5
   542  0025                     	ds	1
   543  0026                     ??_main:
   544                           
   545                           ; 1 bytes @ 0x6
   546  0026                     	ds	1
   547                           
   548                           	psect	maintext
   549  019B                     __pmaintext:	
   550 ;;
   551 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   552 ;;
   553 ;; *************** function _main *****************
   554 ;; Defined at:
   555 ;;		line 61 in file "Lab03_slave.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : B00/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0
   571 ;;      Temps:          0       1       0       0       0
   572 ;;      Totals:         0       1       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels required when called:    5
   575 ;; This function calls:
   576 ;;		_Select_ch
   577 ;;		_setup
   578 ;;		_start_adc
   579 ;;		_start_ch
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _main
   587  019B                     _main:
   588  019B                     l1509:	
   589                           ;incstack = 0
   590                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   591                           
   592                           
   593                           ;Lab03_slave.c: 62:     setup();
   594  019B  120A  118A  2290  120A  118A  	fcall	_setup
   595                           
   596                           ;Lab03_slave.c: 63:     start_adc(3, 0, 0, 0);
   597  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   598  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   599  01A2  01A0               	clrf	start_adc@isr
   600  01A3  01A1               	clrf	start_adc@Vref
   601  01A4  01A2               	clrf	start_adc@justRL
   602  01A5  3003               	movlw	3
   603  01A6  120A  118A  20B3  120A  118A  	fcall	_start_adc
   604                           
   605                           ;Lab03_slave.c: 65:     start_ch(0);
   606  01AB  3000               	movlw	0
   607  01AC  120A  118A  212A  120A  118A  	fcall	_start_ch
   608                           
   609                           ;Lab03_slave.c: 66:     start_ch(1);
   610  01B1  3001               	movlw	1
   611  01B2  120A  118A  212A  120A  118A  	fcall	_start_ch
   612                           
   613                           ;Lab03_slave.c: 67:     Select_ch(0);
   614  01B7  3000               	movlw	0
   615  01B8  120A  118A  201A  120A  118A  	fcall	_Select_ch
   616  01BD                     l1511:
   617                           
   618                           ;Lab03_slave.c: 71:          if (PIR1bits.ADIF == 1 && ADCON0bits.GO == 0) {
   619  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   620  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   621  01BF  1F0C               	btfss	12,6	;volatile
   622  01C0  29C2               	goto	u251
   623  01C1  29C3               	goto	u250
   624  01C2                     u251:
   625  01C2  29BD               	goto	l1511
   626  01C3                     u250:
   627  01C3                     l1513:
   628  01C3  189F               	btfsc	31,1	;volatile
   629  01C4  29C6               	goto	u261
   630  01C5  29C7               	goto	u260
   631  01C6                     u261:
   632  01C6  29BD               	goto	l1511
   633  01C7                     u260:
   634  01C7                     l1515:
   635                           
   636                           ;Lab03_slave.c: 72:             if (canal_flag == 0) {
   637  01C7  0827               	movf	_canal_flag,w
   638  01C8  1D03               	btfss	3,2
   639  01C9  29CB               	goto	u271
   640  01CA  29CC               	goto	u270
   641  01CB                     u271:
   642  01CB  29DD               	goto	l1523
   643  01CC                     u270:
   644  01CC                     l1517:
   645                           
   646                           ;Lab03_slave.c: 73:                 var_adc0 = ADRESH;
   647  01CC  081E               	movf	30,w	;volatile
   648  01CD  00A6               	movwf	??_main
   649  01CE  0826               	movf	??_main,w
   650  01CF  00F8               	movwf	_var_adc0
   651  01D0                     l1519:
   652                           
   653                           ;Lab03_slave.c: 74:                 Select_ch(0);
   654  01D0  3000               	movlw	0
   655  01D1  120A  118A  201A  120A  118A  	fcall	_Select_ch
   656  01D6                     l1521:
   657                           
   658                           ;Lab03_slave.c: 75:                 canal_flag++;
   659  01D6  3001               	movlw	1
   660  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   661  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   662  01D9  00A6               	movwf	??_main
   663  01DA  0826               	movf	??_main,w
   664  01DB  07A7               	addwf	_canal_flag,f
   665                           
   666                           ;Lab03_slave.c: 77:             } else {
   667  01DC  29EB               	goto	l1529
   668  01DD                     l1523:
   669                           
   670                           ;Lab03_slave.c: 78:                 var_adc1 = ADRESH;
   671  01DD  081E               	movf	30,w	;volatile
   672  01DE  00A6               	movwf	??_main
   673  01DF  0826               	movf	??_main,w
   674  01E0  00F7               	movwf	_var_adc1
   675  01E1                     l1525:
   676                           
   677                           ;Lab03_slave.c: 79:                 Select_ch(1);
   678  01E1  3001               	movlw	1
   679  01E2  120A  118A  201A  120A  118A  	fcall	_Select_ch
   680  01E7                     l1527:
   681                           
   682                           ;Lab03_slave.c: 80:                 canal_flag--;
   683  01E7  3001               	movlw	1
   684  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   685  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   686  01EA  02A7               	subwf	_canal_flag,f
   687  01EB                     l1529:
   688                           
   689                           ;Lab03_slave.c: 84:             _delay((unsigned long)((200)*(8000000/4000000.0)));
   690  01EB  3084               	movlw	132
   691  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   692  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   693  01EE  00A6               	movwf	??_main
   694  01EF                     u287:
   695  01EF  0BA6               	decfsz	??_main,f
   696  01F0  29EF               	goto	u287
   697  01F1  0000               	nop
   698  01F2                     l1531:
   699                           
   700                           ;Lab03_slave.c: 85:             ADCON0bits.GO = 1;
   701  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   702  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   703  01F4  149F               	bsf	31,1	;volatile
   704  01F5                     l1533:
   705                           
   706                           ;Lab03_slave.c: 86:             PIR1bits.ADIF = 0;
   707  01F5  130C               	bcf	12,6	;volatile
   708  01F6  29BD               	goto	l1511
   709  01F7  120A  118A  280E   	ljmp	start
   710  01FA                     __end_of_main:
   711                           
   712                           	psect	text1
   713  012A                     __ptext1:	
   714 ;; *************** function _start_ch *****************
   715 ;; Defined at:
   716 ;;		line 126 in file "ADC.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  channel         1    wreg     unsigned char 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  channel         1    2[BANK0 ] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       1       0       0       0
   732 ;;      Temps:          0       2       0       0       0
   733 ;;      Totals:         0       3       0       0       0
   734 ;;Total ram usage:        3 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    3
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _start_ch
   746  012A                     _start_ch:
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _start_ch: [wreg-fsr0h+status,2+status,0]
   750                           ;start_ch@channel stored from wreg
   751  012A  1283               	bcf	3,5	;RP0=0, select bank0
   752  012B  1303               	bcf	3,6	;RP1=0, select bank0
   753  012C  00A2               	movwf	start_ch@channel
   754  012D                     l1275:
   755                           
   756                           ;ADC.c: 127:     switch (channel) {
   757  012D  2966               	goto	l1279
   758  012E                     l138:	
   759                           ;ADC.c: 128:         case 0:
   760                           
   761                           
   762                           ;ADC.c: 129:             ANSELbits.ANS0 = 1;
   763  012E  1683               	bsf	3,5	;RP0=1, select bank3
   764  012F  1703               	bsf	3,6	;RP1=1, select bank3
   765  0130  1408               	bsf	8,0	;volatile
   766                           
   767                           ;ADC.c: 130:             break;
   768  0131  299A               	goto	l153
   769  0132                     l140:	
   770                           ;ADC.c: 131:         case 1:
   771                           
   772                           
   773                           ;ADC.c: 132:             ANSELbits.ANS1 = 1;
   774  0132  1683               	bsf	3,5	;RP0=1, select bank3
   775  0133  1703               	bsf	3,6	;RP1=1, select bank3
   776  0134  1488               	bsf	8,1	;volatile
   777                           
   778                           ;ADC.c: 133:             break;
   779  0135  299A               	goto	l153
   780  0136                     l141:	
   781                           ;ADC.c: 134:         case 2:
   782                           
   783                           
   784                           ;ADC.c: 135:             ANSELbits.ANS2 = 1;
   785  0136  1683               	bsf	3,5	;RP0=1, select bank3
   786  0137  1703               	bsf	3,6	;RP1=1, select bank3
   787  0138  1508               	bsf	8,2	;volatile
   788                           
   789                           ;ADC.c: 136:             break;
   790  0139  299A               	goto	l153
   791  013A                     l142:	
   792                           ;ADC.c: 137:         case 3:
   793                           
   794                           
   795                           ;ADC.c: 138:             ANSELbits.ANS3 = 1;
   796  013A  1683               	bsf	3,5	;RP0=1, select bank3
   797  013B  1703               	bsf	3,6	;RP1=1, select bank3
   798  013C  1588               	bsf	8,3	;volatile
   799                           
   800                           ;ADC.c: 139:             break;
   801  013D  299A               	goto	l153
   802  013E                     l143:	
   803                           ;ADC.c: 140:         case 4:
   804                           
   805                           
   806                           ;ADC.c: 141:             ANSELbits.ANS4 = 1;
   807  013E  1683               	bsf	3,5	;RP0=1, select bank3
   808  013F  1703               	bsf	3,6	;RP1=1, select bank3
   809  0140  1608               	bsf	8,4	;volatile
   810                           
   811                           ;ADC.c: 142:             break;
   812  0141  299A               	goto	l153
   813  0142                     l144:	
   814                           ;ADC.c: 143:         case 5:
   815                           
   816                           
   817                           ;ADC.c: 144:             ANSELbits.ANS5 = 1;
   818  0142  1683               	bsf	3,5	;RP0=1, select bank3
   819  0143  1703               	bsf	3,6	;RP1=1, select bank3
   820  0144  1688               	bsf	8,5	;volatile
   821                           
   822                           ;ADC.c: 145:             break;
   823  0145  299A               	goto	l153
   824  0146                     l145:	
   825                           ;ADC.c: 146:         case 6:
   826                           
   827                           
   828                           ;ADC.c: 147:             ANSELbits.ANS6 = 1;
   829  0146  1683               	bsf	3,5	;RP0=1, select bank3
   830  0147  1703               	bsf	3,6	;RP1=1, select bank3
   831  0148  1708               	bsf	8,6	;volatile
   832                           
   833                           ;ADC.c: 148:             break;
   834  0149  299A               	goto	l153
   835  014A                     l146:	
   836                           ;ADC.c: 149:         case 7:
   837                           
   838                           
   839                           ;ADC.c: 150:             ANSELbits.ANS7 = 1;
   840  014A  1683               	bsf	3,5	;RP0=1, select bank3
   841  014B  1703               	bsf	3,6	;RP1=1, select bank3
   842  014C  1788               	bsf	8,7	;volatile
   843                           
   844                           ;ADC.c: 151:             break;
   845  014D  299A               	goto	l153
   846  014E                     l147:	
   847                           ;ADC.c: 152:         case 8:
   848                           
   849                           
   850                           ;ADC.c: 153:             ANSELHbits.ANS8 = 1;
   851  014E  1683               	bsf	3,5	;RP0=1, select bank3
   852  014F  1703               	bsf	3,6	;RP1=1, select bank3
   853  0150  1409               	bsf	9,0	;volatile
   854                           
   855                           ;ADC.c: 154:             break;
   856  0151  299A               	goto	l153
   857  0152                     l148:	
   858                           ;ADC.c: 155:         case 9:
   859                           
   860                           
   861                           ;ADC.c: 156:             ANSELHbits.ANS9 = 1;
   862  0152  1683               	bsf	3,5	;RP0=1, select bank3
   863  0153  1703               	bsf	3,6	;RP1=1, select bank3
   864  0154  1489               	bsf	9,1	;volatile
   865                           
   866                           ;ADC.c: 157:             break;
   867  0155  299A               	goto	l153
   868  0156                     l149:	
   869                           ;ADC.c: 158:         case 10:
   870                           
   871                           
   872                           ;ADC.c: 159:             ANSELHbits.ANS10 = 1;
   873  0156  1683               	bsf	3,5	;RP0=1, select bank3
   874  0157  1703               	bsf	3,6	;RP1=1, select bank3
   875  0158  1509               	bsf	9,2	;volatile
   876                           
   877                           ;ADC.c: 160:             break;
   878  0159  299A               	goto	l153
   879  015A                     l150:	
   880                           ;ADC.c: 161:         case 11:
   881                           
   882                           
   883                           ;ADC.c: 162:             ANSELHbits.ANS11 = 1;
   884  015A  1683               	bsf	3,5	;RP0=1, select bank3
   885  015B  1703               	bsf	3,6	;RP1=1, select bank3
   886  015C  1589               	bsf	9,3	;volatile
   887                           
   888                           ;ADC.c: 163:             break;
   889  015D  299A               	goto	l153
   890  015E                     l151:	
   891                           ;ADC.c: 164:         case 12:
   892                           
   893                           
   894                           ;ADC.c: 165:             ANSELHbits.ANS12 = 1;
   895  015E  1683               	bsf	3,5	;RP0=1, select bank3
   896  015F  1703               	bsf	3,6	;RP1=1, select bank3
   897  0160  1609               	bsf	9,4	;volatile
   898                           
   899                           ;ADC.c: 166:             break;
   900  0161  299A               	goto	l153
   901  0162                     l152:	
   902                           ;ADC.c: 167:         case 13:
   903                           
   904                           
   905                           ;ADC.c: 168:             ANSELHbits.ANS13 = 1;
   906  0162  1683               	bsf	3,5	;RP0=1, select bank3
   907  0163  1703               	bsf	3,6	;RP1=1, select bank3
   908  0164  1689               	bsf	9,5	;volatile
   909                           
   910                           ;ADC.c: 169:             break;
   911  0165  299A               	goto	l153
   912  0166                     l1279:
   913  0166  0822               	movf	start_ch@channel,w
   914  0167  00A0               	movwf	??_start_ch
   915  0168  01A1               	clrf	??_start_ch+1
   916                           
   917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   918                           ; Switch size 1, requested type "simple"
   919                           ; Number of cases is 1, Range of values is 0 to 0
   920                           ; switch strategies available:
   921                           ; Name         Instructions Cycles
   922                           ; simple_byte            4     3 (average)
   923                           ; direct_byte           11     8 (fixed)
   924                           ; jumptable            260     6 (fixed)
   925                           ;	Chosen strategy is simple_byte
   926  0169  0821               	movf	??_start_ch+1,w
   927  016A  3A00               	xorlw	0	; case 0
   928  016B  1903               	skipnz
   929  016C  296E               	goto	l1685
   930  016D  299A               	goto	l153
   931  016E                     l1685:
   932                           
   933                           ; Switch size 1, requested type "simple"
   934                           ; Number of cases is 14, Range of values is 0 to 13
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte           43    22 (average)
   938                           ; direct_byte           50     8 (fixed)
   939                           ; jumptable            260     6 (fixed)
   940                           ;	Chosen strategy is simple_byte
   941  016E  0820               	movf	??_start_ch,w
   942  016F  3A00               	xorlw	0	; case 0
   943  0170  1903               	skipnz
   944  0171  292E               	goto	l138
   945  0172  3A01               	xorlw	1	; case 1
   946  0173  1903               	skipnz
   947  0174  2932               	goto	l140
   948  0175  3A03               	xorlw	3	; case 2
   949  0176  1903               	skipnz
   950  0177  2936               	goto	l141
   951  0178  3A01               	xorlw	1	; case 3
   952  0179  1903               	skipnz
   953  017A  293A               	goto	l142
   954  017B  3A07               	xorlw	7	; case 4
   955  017C  1903               	skipnz
   956  017D  293E               	goto	l143
   957  017E  3A01               	xorlw	1	; case 5
   958  017F  1903               	skipnz
   959  0180  2942               	goto	l144
   960  0181  3A03               	xorlw	3	; case 6
   961  0182  1903               	skipnz
   962  0183  2946               	goto	l145
   963  0184  3A01               	xorlw	1	; case 7
   964  0185  1903               	skipnz
   965  0186  294A               	goto	l146
   966  0187  3A0F               	xorlw	15	; case 8
   967  0188  1903               	skipnz
   968  0189  294E               	goto	l147
   969  018A  3A01               	xorlw	1	; case 9
   970  018B  1903               	skipnz
   971  018C  2952               	goto	l148
   972  018D  3A03               	xorlw	3	; case 10
   973  018E  1903               	skipnz
   974  018F  2956               	goto	l149
   975  0190  3A01               	xorlw	1	; case 11
   976  0191  1903               	skipnz
   977  0192  295A               	goto	l150
   978  0193  3A07               	xorlw	7	; case 12
   979  0194  1903               	skipnz
   980  0195  295E               	goto	l151
   981  0196  3A01               	xorlw	1	; case 13
   982  0197  1903               	skipnz
   983  0198  2962               	goto	l152
   984  0199  299A               	goto	l153
   985  019A                     l153:
   986  019A  0008               	return
   987  019B                     __end_of_start_ch:
   988                           
   989                           	psect	text2
   990  00B3                     __ptext2:	
   991 ;; *************** function _start_adc *****************
   992 ;; Defined at:
   993 ;;		line 73 in file "ADC.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  frec            1    wreg     unsigned char 
   996 ;;  isr             1    0[BANK0 ] unsigned char 
   997 ;;  Vref            1    1[BANK0 ] unsigned char 
   998 ;;  justRL          1    2[BANK0 ] unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  frec            1    5[BANK0 ] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       3       0       0       0
  1011 ;;      Locals:         0       1       0       0       0
  1012 ;;      Temps:          0       2       0       0       0
  1013 ;;      Totals:         0       6       0       0       0
  1014 ;;Total ram usage:        6 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    3
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _start_adc
  1026  00B3                     _start_adc:
  1027                           
  1028                           ;incstack = 0
  1029                           ; Regs used in _start_adc: [wreg-fsr0h+status,2+status,0]
  1030                           ;start_adc@frec stored from wreg
  1031  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1032  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1033  00B5  00A5               	movwf	start_adc@frec
  1034  00B6                     l1247:
  1035                           
  1036                           ;ADC.c: 74:     ADCON0bits.ADON = 1;
  1037  00B6  141F               	bsf	31,0	;volatile
  1038  00B7                     l1249:
  1039                           
  1040                           ;ADC.c: 75:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  1041  00B7  3084               	movlw	132
  1042  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1043  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1044  00BA  00A3               	movwf	??_start_adc
  1045  00BB                     u297:
  1046  00BB  0BA3               	decfsz	??_start_adc,f
  1047  00BC  28BB               	goto	u297
  1048  00BD  0000               	nop
  1049                           
  1050                           ;ADC.c: 76:     switch (frec) {
  1051  00BE  28CB               	goto	l1253
  1052  00BF                     l120:	
  1053                           ;ADC.c: 77:         case 1:
  1054                           
  1055                           
  1056                           ;ADC.c: 78:             ADCON0bits.ADCS0 = 0;
  1057  00BF  131F               	bcf	31,6	;volatile
  1058                           
  1059                           ;ADC.c: 79:             ADCON0bits.ADCS1 = 0;
  1060  00C0  139F               	bcf	31,7	;volatile
  1061                           
  1062                           ;ADC.c: 80:             break;
  1063  00C1  28E3               	goto	l1255
  1064  00C2                     l122:	
  1065                           ;ADC.c: 81:         case 2:
  1066                           
  1067                           
  1068                           ;ADC.c: 82:             ADCON0bits.ADCS0 = 1;
  1069  00C2  171F               	bsf	31,6	;volatile
  1070                           
  1071                           ;ADC.c: 83:             ADCON0bits.ADCS1 = 0;
  1072  00C3  139F               	bcf	31,7	;volatile
  1073                           
  1074                           ;ADC.c: 84:             break;
  1075  00C4  28E3               	goto	l1255
  1076  00C5                     l123:	
  1077                           ;ADC.c: 85:         case 3:
  1078                           
  1079                           
  1080                           ;ADC.c: 86:             ADCON0bits.ADCS0 = 0;
  1081  00C5  131F               	bcf	31,6	;volatile
  1082                           
  1083                           ;ADC.c: 87:             ADCON0bits.ADCS1 = 1;
  1084  00C6  179F               	bsf	31,7	;volatile
  1085                           
  1086                           ;ADC.c: 88:             break;
  1087  00C7  28E3               	goto	l1255
  1088  00C8                     l124:	
  1089                           ;ADC.c: 89:         case 4:
  1090                           
  1091                           
  1092                           ;ADC.c: 90:             ADCON0bits.ADCS0 = 1;
  1093  00C8  171F               	bsf	31,6	;volatile
  1094                           
  1095                           ;ADC.c: 91:             ADCON0bits.ADCS1 = 1;
  1096  00C9  179F               	bsf	31,7	;volatile
  1097                           
  1098                           ;ADC.c: 92:             break;
  1099  00CA  28E3               	goto	l1255
  1100  00CB                     l1253:
  1101  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1102  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1103  00CD  0825               	movf	start_adc@frec,w
  1104  00CE  00A3               	movwf	??_start_adc
  1105  00CF  01A4               	clrf	??_start_adc+1
  1106                           
  1107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 1, Range of values is 0 to 0
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ; direct_byte           11     8 (fixed)
  1114                           ; jumptable            260     6 (fixed)
  1115                           ;	Chosen strategy is simple_byte
  1116  00D0  0824               	movf	??_start_adc+1,w
  1117  00D1  3A00               	xorlw	0	; case 0
  1118  00D2  1903               	skipnz
  1119  00D3  28D5               	goto	l1687
  1120  00D4  28E3               	goto	l1255
  1121  00D5                     l1687:
  1122                           
  1123                           ; Switch size 1, requested type "simple"
  1124                           ; Number of cases is 4, Range of values is 1 to 4
  1125                           ; switch strategies available:
  1126                           ; Name         Instructions Cycles
  1127                           ; simple_byte           13     7 (average)
  1128                           ; direct_byte           23    11 (fixed)
  1129                           ; jumptable            263     9 (fixed)
  1130                           ;	Chosen strategy is simple_byte
  1131  00D5  0823               	movf	??_start_adc,w
  1132  00D6  3A01               	xorlw	1	; case 1
  1133  00D7  1903               	skipnz
  1134  00D8  28BF               	goto	l120
  1135  00D9  3A03               	xorlw	3	; case 2
  1136  00DA  1903               	skipnz
  1137  00DB  28C2               	goto	l122
  1138  00DC  3A01               	xorlw	1	; case 3
  1139  00DD  1903               	skipnz
  1140  00DE  28C5               	goto	l123
  1141  00DF  3A07               	xorlw	7	; case 4
  1142  00E0  1903               	skipnz
  1143  00E1  28C8               	goto	l124
  1144  00E2  28E3               	goto	l1255
  1145  00E3                     l1255:
  1146                           
  1147                           ;ADC.c: 94:     if (isr == 1) {
  1148  00E3  0320               	decf	start_adc@isr,w
  1149  00E4  1D03               	btfss	3,2
  1150  00E5  28E7               	goto	u191
  1151  00E6  28E8               	goto	u190
  1152  00E7                     u191:
  1153  00E7  28F0               	goto	l1259
  1154  00E8                     u190:
  1155  00E8                     l1257:
  1156                           
  1157                           ;ADC.c: 95:         INTCONbits.GIE = 1;
  1158  00E8  178B               	bsf	11,7	;volatile
  1159                           
  1160                           ;ADC.c: 96:         INTCONbits.PEIE = 1;
  1161  00E9  170B               	bsf	11,6	;volatile
  1162                           
  1163                           ;ADC.c: 97:         PIE1bits.ADIE = 1;
  1164  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1165  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1166  00EC  170C               	bsf	12,6	;volatile
  1167                           
  1168                           ;ADC.c: 98:         PIR1bits.ADIF = 0;
  1169  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00EF  130C               	bcf	12,6	;volatile
  1172  00F0                     l1259:
  1173                           
  1174                           ;ADC.c: 100:     if (justRL == 0) {
  1175  00F0  0822               	movf	start_adc@justRL,w
  1176  00F1  1D03               	btfss	3,2
  1177  00F2  28F4               	goto	u201
  1178  00F3  28F5               	goto	u200
  1179  00F4                     u201:
  1180  00F4  28F9               	goto	l126
  1181  00F5                     u200:
  1182  00F5                     l1261:
  1183                           
  1184                           ;ADC.c: 101:         ADCON1bits.ADFM = 0;
  1185  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1186  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1187  00F7  139F               	bcf	31,7	;volatile
  1188                           
  1189                           ;ADC.c: 102:     } else {
  1190  00F8  2911               	goto	l1265
  1191  00F9                     l126:
  1192                           
  1193                           ;ADC.c: 103:         ADCON1bits.ADFM = 1;
  1194  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1195  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1196  00FB  179F               	bsf	31,7	;volatile
  1197  00FC  2911               	goto	l1265
  1198  00FD                     l129:	
  1199                           ;ADC.c: 106:         case 0:
  1200                           
  1201                           
  1202                           ;ADC.c: 107:             ADCON1bits.VCFG0 = 0;
  1203  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1204  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1205  00FF  121F               	bcf	31,4	;volatile
  1206                           
  1207                           ;ADC.c: 108:             ADCON1bits.VCFG1 = 0;
  1208  0100  129F               	bcf	31,5	;volatile
  1209                           
  1210                           ;ADC.c: 109:             break;
  1211  0101  2929               	goto	l134
  1212  0102                     l131:	
  1213                           ;ADC.c: 110:         case 1:
  1214                           
  1215                           
  1216                           ;ADC.c: 111:             ADCON1bits.VCFG0 = 1;
  1217  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1218  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1219  0104  161F               	bsf	31,4	;volatile
  1220                           
  1221                           ;ADC.c: 112:             ADCON1bits.VCFG1 = 0;
  1222  0105  129F               	bcf	31,5	;volatile
  1223                           
  1224                           ;ADC.c: 113:             break;
  1225  0106  2929               	goto	l134
  1226  0107                     l132:	
  1227                           ;ADC.c: 114:         case 2:
  1228                           
  1229                           
  1230                           ;ADC.c: 115:             ADCON1bits.VCFG0 = 0;
  1231  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1232  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1233  0109  121F               	bcf	31,4	;volatile
  1234                           
  1235                           ;ADC.c: 116:             ADCON1bits.VCFG1 = 1;
  1236  010A  169F               	bsf	31,5	;volatile
  1237                           
  1238                           ;ADC.c: 117:             break;
  1239  010B  2929               	goto	l134
  1240  010C                     l133:	
  1241                           ;ADC.c: 118:         case 3:
  1242                           
  1243                           
  1244                           ;ADC.c: 119:             ADCON1bits.VCFG0 = 1;
  1245  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1246  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1247  010E  161F               	bsf	31,4	;volatile
  1248                           
  1249                           ;ADC.c: 120:             ADCON1bits.VCFG1 = 1;
  1250  010F  169F               	bsf	31,5	;volatile
  1251                           
  1252                           ;ADC.c: 121:             break;
  1253  0110  2929               	goto	l134
  1254  0111                     l1265:
  1255  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0113  0821               	movf	start_adc@Vref,w
  1258  0114  00A3               	movwf	??_start_adc
  1259  0115  01A4               	clrf	??_start_adc+1
  1260                           
  1261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1262                           ; Switch size 1, requested type "simple"
  1263                           ; Number of cases is 1, Range of values is 0 to 0
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte            4     3 (average)
  1267                           ; direct_byte           11     8 (fixed)
  1268                           ; jumptable            260     6 (fixed)
  1269                           ;	Chosen strategy is simple_byte
  1270  0116  0824               	movf	??_start_adc+1,w
  1271  0117  3A00               	xorlw	0	; case 0
  1272  0118  1903               	skipnz
  1273  0119  291B               	goto	l1689
  1274  011A  2929               	goto	l134
  1275  011B                     l1689:
  1276                           
  1277                           ; Switch size 1, requested type "simple"
  1278                           ; Number of cases is 4, Range of values is 0 to 3
  1279                           ; switch strategies available:
  1280                           ; Name         Instructions Cycles
  1281                           ; simple_byte           13     7 (average)
  1282                           ; direct_byte           20     8 (fixed)
  1283                           ; jumptable            260     6 (fixed)
  1284                           ;	Chosen strategy is simple_byte
  1285  011B  0823               	movf	??_start_adc,w
  1286  011C  3A00               	xorlw	0	; case 0
  1287  011D  1903               	skipnz
  1288  011E  28FD               	goto	l129
  1289  011F  3A01               	xorlw	1	; case 1
  1290  0120  1903               	skipnz
  1291  0121  2902               	goto	l131
  1292  0122  3A03               	xorlw	3	; case 2
  1293  0123  1903               	skipnz
  1294  0124  2907               	goto	l132
  1295  0125  3A01               	xorlw	1	; case 3
  1296  0126  1903               	skipnz
  1297  0127  290C               	goto	l133
  1298  0128  2929               	goto	l134
  1299  0129                     l134:
  1300  0129  0008               	return
  1301  012A                     __end_of_start_adc:
  1302                           
  1303                           	psect	text3
  1304  0290                     __ptext3:	
  1305 ;; *************** function _setup *****************
  1306 ;; Defined at:
  1307 ;;		line 92 in file "Lab03_slave.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    4
  1328 ;; This function calls:
  1329 ;;		_config_osc
  1330 ;;		_spiInit
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function _setup
  1338  0290                     _setup:
  1339  0290                     l1489:	
  1340                           ;incstack = 0
  1341                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1342                           
  1343                           
  1344                           ;Lab03_slave.c: 93:     ANSEL = 0x03;
  1345  0290  3003               	movlw	3
  1346  0291  1683               	bsf	3,5	;RP0=1, select bank3
  1347  0292  1703               	bsf	3,6	;RP1=1, select bank3
  1348  0293  0088               	movwf	8	;volatile
  1349  0294                     l1491:
  1350                           
  1351                           ;Lab03_slave.c: 94:     ANSELH = 0x00;
  1352  0294  0189               	clrf	9	;volatile
  1353  0295                     l1493:
  1354                           
  1355                           ;Lab03_slave.c: 95:     TRISAbits.TRISA5 = 1;
  1356  0295  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0296  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0297  1685               	bsf	5,5	;volatile
  1359  0298                     l1495:
  1360                           
  1361                           ;Lab03_slave.c: 96:     TRISA = 0x03;
  1362  0298  3003               	movlw	3
  1363  0299  0085               	movwf	5	;volatile
  1364                           
  1365                           ;Lab03_slave.c: 97:     TRISB = 0x00;
  1366  029A  0186               	clrf	6	;volatile
  1367                           
  1368                           ;Lab03_slave.c: 98:     PORTA = 0X00;
  1369  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1370  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1371  029D  0185               	clrf	5	;volatile
  1372                           
  1373                           ;Lab03_slave.c: 99:     PORTB = 0x00;
  1374  029E  0186               	clrf	6	;volatile
  1375  029F                     l1497:
  1376                           
  1377                           ;Lab03_slave.c: 101:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
  1378  029F  01A0               	clrf	spiInit@sDataSample
  1379  02A0  01A1               	clrf	spiInit@sClockIdle
  1380  02A1  01A2               	clrf	spiInit@sTransmitEdge
  1381  02A2  3024               	movlw	36
  1382  02A3  120A  118A  22B7  120A  118A  	fcall	_spiInit
  1383  02A8                     l1499:
  1384                           
  1385                           ;Lab03_slave.c: 104:     config_osc(7);
  1386  02A8  3007               	movlw	7
  1387  02A9  120A  118A  21FA  120A  118A  	fcall	_config_osc
  1388  02AE                     l1501:
  1389                           
  1390                           ;Lab03_slave.c: 106:     INTCONbits.GIE = 1;
  1391  02AE  178B               	bsf	11,7	;volatile
  1392  02AF                     l1503:
  1393                           
  1394                           ;Lab03_slave.c: 107:     INTCONbits.PEIE = 1;
  1395  02AF  170B               	bsf	11,6	;volatile
  1396  02B0                     l1505:
  1397                           
  1398                           ;Lab03_slave.c: 108:     PIR1bits.SSPIF = 0;
  1399  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1400  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1401  02B2  118C               	bcf	12,3	;volatile
  1402  02B3                     l1507:
  1403                           
  1404                           ;Lab03_slave.c: 109:     PIE1bits.SSPIE = 1;
  1405  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  1406  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  1407  02B5  158C               	bsf	12,3	;volatile
  1408  02B6                     l74:
  1409  02B6  0008               	return
  1410  02B7                     __end_of_setup:
  1411                           
  1412                           	psect	text4
  1413  02B7                     __ptext4:	
  1414 ;; *************** function _spiInit *****************
  1415 ;; Defined at:
  1416 ;;		line 53 in file "SPI_slave.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  sType           1    wreg     enum E1475
  1419 ;;  sDataSample     1    0[BANK0 ] enum E1483
  1420 ;;  sClockIdle      1    1[BANK0 ] enum E1487
  1421 ;;  sTransmitEdg    1    2[BANK0 ] enum E1491
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  sType           1    3[BANK0 ] enum E1475
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         0       3       0       0       0
  1434 ;;      Locals:         0       1       0       0       0
  1435 ;;      Temps:          0       0       0       0       0
  1436 ;;      Totals:         0       4       0       0       0
  1437 ;;Total ram usage:        4 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    3
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_setup
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _spiInit
  1449  02B7                     _spiInit:
  1450                           
  1451                           ;incstack = 0
  1452                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1453                           ;spiInit@sType stored from wreg
  1454  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1455  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1456  02B9  00A3               	movwf	spiInit@sType
  1457  02BA                     l1479:
  1458                           
  1459                           ;SPI_slave.c: 53: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_slave.c: 54: {;SPI_slave.c: 55:     
      +                          TRISC5 = 0;
  1460  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1461  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1462  02BC  1287               	bcf	7,5	;volatile
  1463                           
  1464                           ;SPI_slave.c: 56:     if(sType & 0b00000100)
  1465  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1466  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1467  02BF  1D23               	btfss	spiInit@sType,2
  1468  02C0  2AC2               	goto	u241
  1469  02C1  2AC3               	goto	u240
  1470  02C2                     u241:
  1471  02C2  2AC9               	goto	l1485
  1472  02C3                     u240:
  1473  02C3                     l1481:
  1474                           
  1475                           ;SPI_slave.c: 57:     {;SPI_slave.c: 58:         SSPSTAT = sTransmitEdge;
  1476  02C3  0822               	movf	spiInit@sTransmitEdge,w
  1477  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  1478  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  1479  02C6  0094               	movwf	20	;volatile
  1480  02C7                     l1483:
  1481                           
  1482                           ;SPI_slave.c: 59:         TRISC3 = 1;
  1483  02C7  1587               	bsf	7,3	;volatile
  1484                           
  1485                           ;SPI_slave.c: 60:     }
  1486  02C8  2ACF               	goto	l205
  1487  02C9                     l1485:
  1488                           
  1489                           ;SPI_slave.c: 62:     {;SPI_slave.c: 63:         SSPSTAT = sDataSample | sTransmitEdge;
  1490  02C9  0820               	movf	spiInit@sDataSample,w
  1491  02CA  0422               	iorwf	spiInit@sTransmitEdge,w
  1492  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1493  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1494  02CD  0094               	movwf	20	;volatile
  1495  02CE                     l1487:
  1496                           
  1497                           ;SPI_slave.c: 64:         TRISC3 = 0;
  1498  02CE  1187               	bcf	7,3	;volatile
  1499  02CF                     l205:	
  1500                           ;SPI_slave.c: 65:     }
  1501                           
  1502                           
  1503                           ;SPI_slave.c: 67:     SSPCON = sType | sClockIdle;
  1504  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1505  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1506  02D1  0823               	movf	spiInit@sType,w
  1507  02D2  0421               	iorwf	spiInit@sClockIdle,w
  1508  02D3  0094               	movwf	20	;volatile
  1509  02D4                     l206:
  1510  02D4  0008               	return
  1511  02D5                     __end_of_spiInit:
  1512                           
  1513                           	psect	text5
  1514  01FA                     __ptext5:	
  1515 ;; *************** function _config_osc *****************
  1516 ;; Defined at:
  1517 ;;		line 22 in file "SPI_slave.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  frec            1    wreg     unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  frec            1    2[BANK0 ] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       0       0       0       0
  1532 ;;      Locals:         0       1       0       0       0
  1533 ;;      Temps:          0       2       0       0       0
  1534 ;;      Totals:         0       3       0       0       0
  1535 ;;Total ram usage:        3 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    3
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_setup
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _config_osc
  1547  01FA                     _config_osc:
  1548                           
  1549                           ;incstack = 0
  1550                           ; Regs used in _config_osc: [wreg-fsr0h+status,2+status,0]
  1551                           ;config_osc@frec stored from wreg
  1552  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1553  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1554  01FC  00A2               	movwf	config_osc@frec
  1555  01FD                     l1199:
  1556                           
  1557                           ;SPI_slave.c: 23:         switch(frec){
  1558  01FD  2A30               	goto	l1219
  1559  01FE                     l1201:
  1560                           
  1561                           ;SPI_slave.c: 25:                 OSCCONbits.IRCF = 000;
  1562  01FE  308F               	movlw	-113
  1563  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0201  058F               	andwf	15,f	;volatile
  1566                           
  1567                           ;SPI_slave.c: 26:                 break;
  1568  0202  2A4F               	goto	l193
  1569  0203                     l1203:
  1570                           
  1571                           ;SPI_slave.c: 28:                 OSCCONbits.IRCF = 001;
  1572  0203  1683               	bsf	3,5	;RP0=1, select bank1
  1573  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1574  0205  080F               	movf	15,w	;volatile
  1575  0206  398F               	andlw	-113
  1576  0207  3810               	iorlw	16
  1577  0208  008F               	movwf	15	;volatile
  1578                           
  1579                           ;SPI_slave.c: 29:                 break;
  1580  0209  2A4F               	goto	l193
  1581  020A                     l1205:
  1582                           
  1583                           ;SPI_slave.c: 31:                 OSCCONbits.IRCF = 010;
  1584  020A  308F               	movlw	-113
  1585  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1586  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1587  020D  058F               	andwf	15,f	;volatile
  1588                           
  1589                           ;SPI_slave.c: 32:                 break;
  1590  020E  2A4F               	goto	l193
  1591  020F                     l1207:
  1592                           
  1593                           ;SPI_slave.c: 34:                 OSCCONbits.IRCF = 011;
  1594  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0211  080F               	movf	15,w	;volatile
  1597  0212  398F               	andlw	-113
  1598  0213  3810               	iorlw	16
  1599  0214  008F               	movwf	15	;volatile
  1600                           
  1601                           ;SPI_slave.c: 35:                 break;
  1602  0215  2A4F               	goto	l193
  1603  0216                     l1209:
  1604                           
  1605                           ;SPI_slave.c: 37:                 OSCCONbits.IRCF = 100;
  1606  0216  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0217  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0218  080F               	movf	15,w	;volatile
  1609  0219  398F               	andlw	-113
  1610  021A  3840               	iorlw	64
  1611  021B  008F               	movwf	15	;volatile
  1612                           
  1613                           ;SPI_slave.c: 38:                 break;
  1614  021C  2A4F               	goto	l193
  1615  021D                     l1211:
  1616                           
  1617                           ;SPI_slave.c: 40:                 OSCCONbits.IRCF = 101;
  1618  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1619  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1620  021F  080F               	movf	15,w	;volatile
  1621  0220  398F               	andlw	-113
  1622  0221  3850               	iorlw	80
  1623  0222  008F               	movwf	15	;volatile
  1624                           
  1625                           ;SPI_slave.c: 41:                 break;
  1626  0223  2A4F               	goto	l193
  1627  0224                     l1213:
  1628                           
  1629                           ;SPI_slave.c: 43:                 OSCCONbits.IRCF = 111;
  1630  0224  3070               	movlw	112
  1631  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1632  0226  1303               	bcf	3,6	;RP1=0, select bank1
  1633  0227  048F               	iorwf	15,f	;volatile
  1634                           
  1635                           ;SPI_slave.c: 44:                 break;
  1636  0228  2A4F               	goto	l193
  1637  0229                     l1215:
  1638                           
  1639                           ;SPI_slave.c: 46:                 OSCCONbits.IRCF = 110;
  1640  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1641  022A  1303               	bcf	3,6	;RP1=0, select bank1
  1642  022B  080F               	movf	15,w	;volatile
  1643  022C  398F               	andlw	-113
  1644  022D  3860               	iorlw	96
  1645  022E  008F               	movwf	15	;volatile
  1646                           
  1647                           ;SPI_slave.c: 47:                 break;
  1648  022F  2A4F               	goto	l193
  1649  0230                     l1219:
  1650  0230  0822               	movf	config_osc@frec,w
  1651  0231  00A0               	movwf	??_config_osc
  1652  0232  01A1               	clrf	??_config_osc+1
  1653                           
  1654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1655                           ; Switch size 1, requested type "simple"
  1656                           ; Number of cases is 1, Range of values is 0 to 0
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte            4     3 (average)
  1660                           ; direct_byte           11     8 (fixed)
  1661                           ; jumptable            260     6 (fixed)
  1662                           ;	Chosen strategy is simple_byte
  1663  0233  0821               	movf	??_config_osc+1,w
  1664  0234  3A00               	xorlw	0	; case 0
  1665  0235  1903               	skipnz
  1666  0236  2A38               	goto	l1691
  1667  0237  2A29               	goto	l1215
  1668  0238                     l1691:
  1669                           
  1670                           ; Switch size 1, requested type "simple"
  1671                           ; Number of cases is 7, Range of values is 0 to 7
  1672                           ; switch strategies available:
  1673                           ; Name         Instructions Cycles
  1674                           ; simple_byte           22    12 (average)
  1675                           ; direct_byte           32     8 (fixed)
  1676                           ; jumptable            260     6 (fixed)
  1677                           ;	Chosen strategy is simple_byte
  1678  0238  0820               	movf	??_config_osc,w
  1679  0239  3A00               	xorlw	0	; case 0
  1680  023A  1903               	skipnz
  1681  023B  29FE               	goto	l1201
  1682  023C  3A01               	xorlw	1	; case 1
  1683  023D  1903               	skipnz
  1684  023E  2A03               	goto	l1203
  1685  023F  3A03               	xorlw	3	; case 2
  1686  0240  1903               	skipnz
  1687  0241  2A0A               	goto	l1205
  1688  0242  3A01               	xorlw	1	; case 3
  1689  0243  1903               	skipnz
  1690  0244  2A0F               	goto	l1207
  1691  0245  3A07               	xorlw	7	; case 4
  1692  0246  1903               	skipnz
  1693  0247  2A16               	goto	l1209
  1694  0248  3A01               	xorlw	1	; case 5
  1695  0249  1903               	skipnz
  1696  024A  2A1D               	goto	l1211
  1697  024B  3A02               	xorlw	2	; case 7
  1698  024C  1903               	skipnz
  1699  024D  2A24               	goto	l1213
  1700  024E  2A29               	goto	l1215
  1701  024F                     l193:
  1702                           
  1703                           ;SPI_slave.c: 49:         OSCCONbits.SCS = 1;
  1704  024F  140F               	bsf	15,0	;volatile
  1705  0250                     l201:
  1706  0250  0008               	return
  1707  0251                     __end_of_config_osc:
  1708                           
  1709                           	psect	text6
  1710  001A                     __ptext6:	
  1711 ;; *************** function _Select_ch *****************
  1712 ;; Defined at:
  1713 ;;		line 175 in file "ADC.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  channel         1    wreg     unsigned char 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  channel         1    2[BANK0 ] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0       0       0       0
  1728 ;;      Locals:         0       1       0       0       0
  1729 ;;      Temps:          0       2       0       0       0
  1730 ;;      Totals:         0       3       0       0       0
  1731 ;;Total ram usage:        3 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    3
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           
  1742                           ;psect for function _Select_ch
  1743  001A                     _Select_ch:
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _Select_ch: [wreg-fsr0h+status,2+status,0]
  1747                           ;Select_ch@channel stored from wreg
  1748  001A  1283               	bcf	3,5	;RP0=0, select bank0
  1749  001B  1303               	bcf	3,6	;RP1=0, select bank0
  1750  001C  00A2               	movwf	Select_ch@channel
  1751  001D                     l1287:
  1752                           
  1753                           ;ADC.c: 176:     switch (channel) {
  1754  001D  286E               	goto	l1291
  1755  001E                     l157:	
  1756                           ;ADC.c: 177:         case 0:
  1757                           
  1758                           
  1759                           ;ADC.c: 178:             ADCON0bits.CHS0 = 0;
  1760  001E  111F               	bcf	31,2	;volatile
  1761                           
  1762                           ;ADC.c: 179:             ADCON0bits.CHS1 = 0;
  1763  001F  119F               	bcf	31,3	;volatile
  1764                           
  1765                           ;ADC.c: 180:             ADCON0bits.CHS2 = 0;
  1766  0020  121F               	bcf	31,4	;volatile
  1767                           
  1768                           ;ADC.c: 181:             ADCON0bits.CHS3 = 0;
  1769  0021  129F               	bcf	31,5	;volatile
  1770                           
  1771                           ;ADC.c: 182:             break;
  1772  0022  28A8               	goto	l1293
  1773  0023                     l159:	
  1774                           ;ADC.c: 183:         case 1:
  1775                           
  1776                           
  1777                           ;ADC.c: 184:             ADCON0bits.CHS0 = 1;
  1778  0023  151F               	bsf	31,2	;volatile
  1779                           
  1780                           ;ADC.c: 185:             ADCON0bits.CHS1 = 0;
  1781  0024  119F               	bcf	31,3	;volatile
  1782                           
  1783                           ;ADC.c: 186:             ADCON0bits.CHS2 = 0;
  1784  0025  121F               	bcf	31,4	;volatile
  1785                           
  1786                           ;ADC.c: 187:             ADCON0bits.CHS3 = 0;
  1787  0026  129F               	bcf	31,5	;volatile
  1788                           
  1789                           ;ADC.c: 188:             break;
  1790  0027  28A8               	goto	l1293
  1791  0028                     l160:	
  1792                           ;ADC.c: 189:         case 2:
  1793                           
  1794                           
  1795                           ;ADC.c: 190:             ADCON0bits.CHS0 = 0;
  1796  0028  111F               	bcf	31,2	;volatile
  1797                           
  1798                           ;ADC.c: 191:             ADCON0bits.CHS1 = 1;
  1799  0029  159F               	bsf	31,3	;volatile
  1800                           
  1801                           ;ADC.c: 192:             ADCON0bits.CHS2 = 0;
  1802  002A  121F               	bcf	31,4	;volatile
  1803                           
  1804                           ;ADC.c: 193:             ADCON0bits.CHS3 = 0;
  1805  002B  129F               	bcf	31,5	;volatile
  1806                           
  1807                           ;ADC.c: 194:             break;
  1808  002C  28A8               	goto	l1293
  1809  002D                     l161:	
  1810                           ;ADC.c: 195:         case 3:
  1811                           
  1812                           
  1813                           ;ADC.c: 196:             ADCON0bits.CHS0 = 1;
  1814  002D  151F               	bsf	31,2	;volatile
  1815                           
  1816                           ;ADC.c: 197:             ADCON0bits.CHS1 = 1;
  1817  002E  159F               	bsf	31,3	;volatile
  1818                           
  1819                           ;ADC.c: 198:             ADCON0bits.CHS2 = 0;
  1820  002F  121F               	bcf	31,4	;volatile
  1821                           
  1822                           ;ADC.c: 199:             ADCON0bits.CHS3 = 0;
  1823  0030  129F               	bcf	31,5	;volatile
  1824                           
  1825                           ;ADC.c: 200:             break;
  1826  0031  28A8               	goto	l1293
  1827  0032                     l162:	
  1828                           ;ADC.c: 201:         case 4:
  1829                           
  1830                           
  1831                           ;ADC.c: 202:             ADCON0bits.CHS0 = 0;
  1832  0032  111F               	bcf	31,2	;volatile
  1833                           
  1834                           ;ADC.c: 203:             ADCON0bits.CHS1 = 0;
  1835  0033  119F               	bcf	31,3	;volatile
  1836                           
  1837                           ;ADC.c: 204:             ADCON0bits.CHS2 = 1;
  1838  0034  161F               	bsf	31,4	;volatile
  1839                           
  1840                           ;ADC.c: 205:             ADCON0bits.CHS3 = 0;
  1841  0035  129F               	bcf	31,5	;volatile
  1842                           
  1843                           ;ADC.c: 206:             break;
  1844  0036  28A8               	goto	l1293
  1845  0037                     l163:	
  1846                           ;ADC.c: 207:         case 5:
  1847                           
  1848                           
  1849                           ;ADC.c: 208:             ADCON0bits.CHS0 = 1;
  1850  0037  151F               	bsf	31,2	;volatile
  1851                           
  1852                           ;ADC.c: 209:             ADCON0bits.CHS1 = 0;
  1853  0038  119F               	bcf	31,3	;volatile
  1854                           
  1855                           ;ADC.c: 210:             ADCON0bits.CHS2 = 1;
  1856  0039  161F               	bsf	31,4	;volatile
  1857                           
  1858                           ;ADC.c: 211:             ADCON0bits.CHS3 = 0;
  1859  003A  129F               	bcf	31,5	;volatile
  1860                           
  1861                           ;ADC.c: 212:             break;
  1862  003B  28A8               	goto	l1293
  1863  003C                     l164:	
  1864                           ;ADC.c: 213:         case 6:
  1865                           
  1866                           
  1867                           ;ADC.c: 214:             ADCON0bits.CHS0 = 0;
  1868  003C  111F               	bcf	31,2	;volatile
  1869                           
  1870                           ;ADC.c: 215:             ADCON0bits.CHS1 = 1;
  1871  003D  159F               	bsf	31,3	;volatile
  1872                           
  1873                           ;ADC.c: 216:             ADCON0bits.CHS2 = 1;
  1874  003E  161F               	bsf	31,4	;volatile
  1875                           
  1876                           ;ADC.c: 217:             ADCON0bits.CHS3 = 0;
  1877  003F  129F               	bcf	31,5	;volatile
  1878                           
  1879                           ;ADC.c: 218:             break;
  1880  0040  28A8               	goto	l1293
  1881  0041                     l165:	
  1882                           ;ADC.c: 219:         case 7:
  1883                           
  1884                           
  1885                           ;ADC.c: 220:             ADCON0bits.CHS0 = 1;
  1886  0041  151F               	bsf	31,2	;volatile
  1887                           
  1888                           ;ADC.c: 221:             ADCON0bits.CHS1 = 1;
  1889  0042  159F               	bsf	31,3	;volatile
  1890                           
  1891                           ;ADC.c: 222:             ADCON0bits.CHS2 = 1;
  1892  0043  161F               	bsf	31,4	;volatile
  1893                           
  1894                           ;ADC.c: 223:             ADCON0bits.CHS3 = 0;
  1895  0044  129F               	bcf	31,5	;volatile
  1896                           
  1897                           ;ADC.c: 224:             break;
  1898  0045  28A8               	goto	l1293
  1899  0046                     l166:	
  1900                           ;ADC.c: 225:         case 8:
  1901                           
  1902                           
  1903                           ;ADC.c: 226:             ADCON0bits.CHS0 = 0;
  1904  0046  111F               	bcf	31,2	;volatile
  1905                           
  1906                           ;ADC.c: 227:             ADCON0bits.CHS1 = 0;
  1907  0047  119F               	bcf	31,3	;volatile
  1908                           
  1909                           ;ADC.c: 228:             ADCON0bits.CHS2 = 0;
  1910  0048  121F               	bcf	31,4	;volatile
  1911                           
  1912                           ;ADC.c: 229:             ADCON0bits.CHS3 = 1;
  1913  0049  169F               	bsf	31,5	;volatile
  1914                           
  1915                           ;ADC.c: 230:             break;
  1916  004A  28A8               	goto	l1293
  1917  004B                     l167:	
  1918                           ;ADC.c: 231:         case 9:
  1919                           
  1920                           
  1921                           ;ADC.c: 232:             ADCON0bits.CHS0 = 1;
  1922  004B  151F               	bsf	31,2	;volatile
  1923                           
  1924                           ;ADC.c: 233:             ADCON0bits.CHS1 = 0;
  1925  004C  119F               	bcf	31,3	;volatile
  1926                           
  1927                           ;ADC.c: 234:             ADCON0bits.CHS2 = 0;
  1928  004D  121F               	bcf	31,4	;volatile
  1929                           
  1930                           ;ADC.c: 235:             ADCON0bits.CHS3 = 1;
  1931  004E  169F               	bsf	31,5	;volatile
  1932                           
  1933                           ;ADC.c: 236:             break;
  1934  004F  28A8               	goto	l1293
  1935  0050                     l168:	
  1936                           ;ADC.c: 237:         case 10:
  1937                           
  1938                           
  1939                           ;ADC.c: 238:             ADCON0bits.CHS0 = 0;
  1940  0050  111F               	bcf	31,2	;volatile
  1941                           
  1942                           ;ADC.c: 239:             ADCON0bits.CHS1 = 1;
  1943  0051  159F               	bsf	31,3	;volatile
  1944                           
  1945                           ;ADC.c: 240:             ADCON0bits.CHS2 = 0;
  1946  0052  121F               	bcf	31,4	;volatile
  1947                           
  1948                           ;ADC.c: 241:             ADCON0bits.CHS3 = 1;
  1949  0053  169F               	bsf	31,5	;volatile
  1950                           
  1951                           ;ADC.c: 242:             break;
  1952  0054  28A8               	goto	l1293
  1953  0055                     l169:	
  1954                           ;ADC.c: 243:         case 11:
  1955                           
  1956                           
  1957                           ;ADC.c: 244:             ADCON0bits.CHS0 = 1;
  1958  0055  151F               	bsf	31,2	;volatile
  1959                           
  1960                           ;ADC.c: 245:             ADCON0bits.CHS1 = 1;
  1961  0056  159F               	bsf	31,3	;volatile
  1962                           
  1963                           ;ADC.c: 246:             ADCON0bits.CHS2 = 0;
  1964  0057  121F               	bcf	31,4	;volatile
  1965                           
  1966                           ;ADC.c: 247:             ADCON0bits.CHS3 = 1;
  1967  0058  169F               	bsf	31,5	;volatile
  1968                           
  1969                           ;ADC.c: 248:             break;
  1970  0059  28A8               	goto	l1293
  1971  005A                     l170:	
  1972                           ;ADC.c: 249:         case 12:
  1973                           
  1974                           
  1975                           ;ADC.c: 250:             ADCON0bits.CHS0 = 0;
  1976  005A  111F               	bcf	31,2	;volatile
  1977                           
  1978                           ;ADC.c: 251:             ADCON0bits.CHS1 = 0;
  1979  005B  119F               	bcf	31,3	;volatile
  1980                           
  1981                           ;ADC.c: 252:             ADCON0bits.CHS2 = 1;
  1982  005C  161F               	bsf	31,4	;volatile
  1983                           
  1984                           ;ADC.c: 253:             ADCON0bits.CHS3 = 1;
  1985  005D  169F               	bsf	31,5	;volatile
  1986                           
  1987                           ;ADC.c: 254:             break;
  1988  005E  28A8               	goto	l1293
  1989  005F                     l171:	
  1990                           ;ADC.c: 255:         case 13:
  1991                           
  1992                           
  1993                           ;ADC.c: 256:             ADCON0bits.CHS0 = 1;
  1994  005F  151F               	bsf	31,2	;volatile
  1995                           
  1996                           ;ADC.c: 257:             ADCON0bits.CHS1 = 0;
  1997  0060  119F               	bcf	31,3	;volatile
  1998                           
  1999                           ;ADC.c: 258:             ADCON0bits.CHS2 = 1;
  2000  0061  161F               	bsf	31,4	;volatile
  2001                           
  2002                           ;ADC.c: 259:             ADCON0bits.CHS3 = 1;
  2003  0062  169F               	bsf	31,5	;volatile
  2004                           
  2005                           ;ADC.c: 260:             break;
  2006  0063  28A8               	goto	l1293
  2007  0064                     l172:	
  2008                           ;ADC.c: 261:         case 14:
  2009                           
  2010                           
  2011                           ;ADC.c: 262:             ADCON0bits.CHS0 = 0;
  2012  0064  111F               	bcf	31,2	;volatile
  2013                           
  2014                           ;ADC.c: 263:             ADCON0bits.CHS1 = 1;
  2015  0065  159F               	bsf	31,3	;volatile
  2016                           
  2017                           ;ADC.c: 264:             ADCON0bits.CHS2 = 1;
  2018  0066  161F               	bsf	31,4	;volatile
  2019                           
  2020                           ;ADC.c: 265:             ADCON0bits.CHS3 = 1;
  2021  0067  169F               	bsf	31,5	;volatile
  2022                           
  2023                           ;ADC.c: 266:             break;
  2024  0068  28A8               	goto	l1293
  2025  0069                     l173:	
  2026                           ;ADC.c: 267:         case 15:
  2027                           
  2028                           
  2029                           ;ADC.c: 268:             ADCON0bits.CHS0 = 1;
  2030  0069  151F               	bsf	31,2	;volatile
  2031                           
  2032                           ;ADC.c: 269:             ADCON0bits.CHS1 = 1;
  2033  006A  159F               	bsf	31,3	;volatile
  2034                           
  2035                           ;ADC.c: 270:             ADCON0bits.CHS2 = 1;
  2036  006B  161F               	bsf	31,4	;volatile
  2037                           
  2038                           ;ADC.c: 271:             ADCON0bits.CHS3 = 1;
  2039  006C  169F               	bsf	31,5	;volatile
  2040                           
  2041                           ;ADC.c: 272:             break;
  2042  006D  28A8               	goto	l1293
  2043  006E                     l1291:
  2044  006E  0822               	movf	Select_ch@channel,w
  2045  006F  00A0               	movwf	??_Select_ch
  2046  0070  01A1               	clrf	??_Select_ch+1
  2047                           
  2048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2049                           ; Switch size 1, requested type "simple"
  2050                           ; Number of cases is 1, Range of values is 0 to 0
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte            4     3 (average)
  2054                           ; direct_byte           11     8 (fixed)
  2055                           ; jumptable            260     6 (fixed)
  2056                           ;	Chosen strategy is simple_byte
  2057  0071  0821               	movf	??_Select_ch+1,w
  2058  0072  3A00               	xorlw	0	; case 0
  2059  0073  1903               	skipnz
  2060  0074  2876               	goto	l1693
  2061  0075  28A8               	goto	l1293
  2062  0076                     l1693:
  2063                           
  2064                           ; Switch size 1, requested type "simple"
  2065                           ; Number of cases is 16, Range of values is 0 to 15
  2066                           ; switch strategies available:
  2067                           ; Name         Instructions Cycles
  2068                           ; simple_byte           49    25 (average)
  2069                           ; direct_byte           56     8 (fixed)
  2070                           ; jumptable            260     6 (fixed)
  2071                           ;	Chosen strategy is simple_byte
  2072  0076  0820               	movf	??_Select_ch,w
  2073  0077  3A00               	xorlw	0	; case 0
  2074  0078  1903               	skipnz
  2075  0079  281E               	goto	l157
  2076  007A  3A01               	xorlw	1	; case 1
  2077  007B  1903               	skipnz
  2078  007C  2823               	goto	l159
  2079  007D  3A03               	xorlw	3	; case 2
  2080  007E  1903               	skipnz
  2081  007F  2828               	goto	l160
  2082  0080  3A01               	xorlw	1	; case 3
  2083  0081  1903               	skipnz
  2084  0082  282D               	goto	l161
  2085  0083  3A07               	xorlw	7	; case 4
  2086  0084  1903               	skipnz
  2087  0085  2832               	goto	l162
  2088  0086  3A01               	xorlw	1	; case 5
  2089  0087  1903               	skipnz
  2090  0088  2837               	goto	l163
  2091  0089  3A03               	xorlw	3	; case 6
  2092  008A  1903               	skipnz
  2093  008B  283C               	goto	l164
  2094  008C  3A01               	xorlw	1	; case 7
  2095  008D  1903               	skipnz
  2096  008E  2841               	goto	l165
  2097  008F  3A0F               	xorlw	15	; case 8
  2098  0090  1903               	skipnz
  2099  0091  2846               	goto	l166
  2100  0092  3A01               	xorlw	1	; case 9
  2101  0093  1903               	skipnz
  2102  0094  284B               	goto	l167
  2103  0095  3A03               	xorlw	3	; case 10
  2104  0096  1903               	skipnz
  2105  0097  2850               	goto	l168
  2106  0098  3A01               	xorlw	1	; case 11
  2107  0099  1903               	skipnz
  2108  009A  2855               	goto	l169
  2109  009B  3A07               	xorlw	7	; case 12
  2110  009C  1903               	skipnz
  2111  009D  285A               	goto	l170
  2112  009E  3A01               	xorlw	1	; case 13
  2113  009F  1903               	skipnz
  2114  00A0  285F               	goto	l171
  2115  00A1  3A03               	xorlw	3	; case 14
  2116  00A2  1903               	skipnz
  2117  00A3  2864               	goto	l172
  2118  00A4  3A01               	xorlw	1	; case 15
  2119  00A5  1903               	skipnz
  2120  00A6  2869               	goto	l173
  2121  00A7  28A8               	goto	l1293
  2122  00A8                     l1293:
  2123                           
  2124                           ;ADC.c: 274:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2125  00A8  3084               	movlw	132
  2126  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2127  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2128  00AB  00A0               	movwf	??_Select_ch
  2129  00AC                     u307:
  2130  00AC  0BA0               	decfsz	??_Select_ch,f
  2131  00AD  28AC               	goto	u307
  2132  00AE  0000               	nop
  2133  00AF                     l1295:
  2134                           
  2135                           ;ADC.c: 275:     ADCON0bits.GO = 1;
  2136  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  2137  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  2138  00B1  149F               	bsf	31,1	;volatile
  2139  00B2                     l174:
  2140  00B2  0008               	return
  2141  00B3                     __end_of_Select_ch:
  2142                           
  2143                           	psect	text7
  2144  0251                     __ptext7:	
  2145 ;; *************** function _isr *****************
  2146 ;; Defined at:
  2147 ;;		line 44 in file "Lab03_slave.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  comando         1    6[COMMON] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         0       0       0       0       0
  2162 ;;      Locals:         1       0       0       0       0
  2163 ;;      Temps:          5       0       0       0       0
  2164 ;;      Totals:         6       0       0       0       0
  2165 ;;Total ram usage:        6 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    2
  2168 ;; This function calls:
  2169 ;;		_spiRead
  2170 ;;		_spiWrite
  2171 ;; This function is called by:
  2172 ;;		Interrupt level 1
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _isr
  2178  0251                     _isr:
  2179  0251                     i1l933:
  2180                           
  2181                           ;Lab03_slave.c: 45:    if(SSPIF == 1){
  2182  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0253  1D8C               	btfss	12,3	;volatile
  2185  0254  2A56               	goto	u5_21
  2186  0255  2A57               	goto	u5_20
  2187  0256                     u5_21:
  2188  0256  2A87               	goto	i1l60
  2189  0257                     u5_20:
  2190  0257                     i1l935:
  2191                           
  2192                           ;Lab03_slave.c: 46:        uint8_t comando;;Lab03_slave.c: 47:        comando = spiRead(
      +                          );
  2193  0257  120A  118A  22D5  120A  118A  	fcall	_spiRead
  2194  025C  00F1               	movwf	??_isr
  2195  025D  0871               	movf	??_isr,w
  2196  025E  00F6               	movwf	isr@comando
  2197  025F                     i1l937:
  2198                           
  2199                           ;Lab03_slave.c: 48:        PORTB++;
  2200  025F  3001               	movlw	1
  2201  0260  00F1               	movwf	??_isr
  2202  0261  0871               	movf	??_isr,w
  2203  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0264  0786               	addwf	6,f	;volatile
  2206                           
  2207                           ;Lab03_slave.c: 49:        switch (comando){
  2208  0265  2A74               	goto	i1l945
  2209  0266                     i1l939:
  2210                           
  2211                           ;Lab03_slave.c: 51:                spiWrite(var_adc0);
  2212  0266  0878               	movf	_var_adc0,w
  2213  0267  120A  118A  22E5  120A  118A  	fcall	_spiWrite
  2214                           
  2215                           ;Lab03_slave.c: 52:                break;
  2216  026C  2A84               	goto	i1l58
  2217  026D                     i1l941:
  2218                           
  2219                           ;Lab03_slave.c: 54:                spiWrite(var_adc1);
  2220  026D  0877               	movf	_var_adc1,w
  2221  026E  120A  118A  22E5  120A  118A  	fcall	_spiWrite
  2222                           
  2223                           ;Lab03_slave.c: 55:                break;
  2224  0273  2A84               	goto	i1l58
  2225  0274                     i1l945:
  2226  0274  0876               	movf	isr@comando,w
  2227  0275  00F1               	movwf	??_isr
  2228  0276  01F2               	clrf	??_isr+1
  2229                           
  2230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 1, Range of values is 0 to 0
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte            4     3 (average)
  2236                           ; direct_byte           11     8 (fixed)
  2237                           ; jumptable            260     6 (fixed)
  2238                           ;	Chosen strategy is simple_byte
  2239  0277  0872               	movf	??_isr+1,w
  2240  0278  3A00               	xorlw	0	; case 0
  2241  0279  1903               	skipnz
  2242  027A  2A7C               	goto	i1l1695
  2243  027B  2A84               	goto	i1l58
  2244  027C                     i1l1695:
  2245                           
  2246                           ; Switch size 1, requested type "simple"
  2247                           ; Number of cases is 2, Range of values is 1 to 2
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte            7     4 (average)
  2251                           ; direct_byte           17    11 (fixed)
  2252                           ; jumptable            263     9 (fixed)
  2253                           ;	Chosen strategy is simple_byte
  2254  027C  0871               	movf	??_isr,w
  2255  027D  3A01               	xorlw	1	; case 1
  2256  027E  1903               	skipnz
  2257  027F  2A66               	goto	i1l939
  2258  0280  3A03               	xorlw	3	; case 2
  2259  0281  1903               	skipnz
  2260  0282  2A6D               	goto	i1l941
  2261  0283  2A84               	goto	i1l58
  2262  0284                     i1l58:
  2263                           
  2264                           ;Lab03_slave.c: 58:         PIR1bits.SSPIF = 0;
  2265  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0286  118C               	bcf	12,3	;volatile
  2268  0287                     i1l60:
  2269  0287  0875               	movf	??_isr+4,w
  2270  0288  008A               	movwf	10
  2271  0289  0874               	movf	??_isr+3,w
  2272  028A  0084               	movwf	4
  2273  028B  0E73               	swapf	??_isr+2,w
  2274  028C  0083               	movwf	3
  2275  028D  0EFE               	swapf	btemp,f
  2276  028E  0E7E               	swapf	btemp,w
  2277  028F  0009               	retfie
  2278  0290                     __end_of_isr:
  2279                           
  2280                           	psect	intentry
  2281  0004                     __pintentry:	
  2282                           ;incstack = 0
  2283                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2284                           
  2285  0004                     interrupt_function:
  2286  007E                     saved_w	set	btemp
  2287  0004  00FE               	movwf	btemp
  2288  0005  0E03               	swapf	3,w
  2289  0006  00F3               	movwf	??_isr+2
  2290  0007  0804               	movf	4,w
  2291  0008  00F4               	movwf	??_isr+3
  2292  0009  080A               	movf	10,w
  2293  000A  00F5               	movwf	??_isr+4
  2294  000B  120A  118A  2A51   	ljmp	_isr
  2295                           
  2296                           	psect	text8
  2297  02E5                     __ptext8:	
  2298 ;; *************** function _spiWrite *****************
  2299 ;; Defined at:
  2300 ;;		line 75 in file "SPI_slave.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  dat             1    wreg     unsigned char 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  dat             1    0[COMMON] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2314 ;;      Params:         0       0       0       0       0
  2315 ;;      Locals:         1       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0
  2317 ;;      Totals:         1       0       0       0       0
  2318 ;;Total ram usage:        1 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_isr
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _spiWrite
  2329  02E5                     _spiWrite:
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _spiWrite: [wreg]
  2333                           ;spiWrite@dat stored from wreg
  2334  02E5  00F0               	movwf	spiWrite@dat
  2335  02E6                     i1l859:
  2336                           
  2337                           ;SPI_slave.c: 75: void spiWrite(char dat);SPI_slave.c: 76: {;SPI_slave.c: 77:     SSPBUF
      +                           = dat;
  2338  02E6  0870               	movf	spiWrite@dat,w
  2339  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2340  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2341  02E9  0093               	movwf	19	;volatile
  2342  02EA                     i1l215:
  2343  02EA  0008               	return
  2344  02EB                     __end_of_spiWrite:
  2345                           
  2346                           	psect	text9
  2347  02D5                     __ptext9:	
  2348 ;; *************** function _spiRead *****************
  2349 ;; Defined at:
  2350 ;;		line 88 in file "SPI_slave.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      unsigned char 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, pclath, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         0       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0
  2367 ;;      Totals:         0       0       0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    1
  2371 ;; This function calls:
  2372 ;;		_spiReceiveWait
  2373 ;; This function is called by:
  2374 ;;		_isr
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _spiRead
  2380  02D5                     _spiRead:
  2381  02D5                     i1l853:	
  2382                           ;incstack = 0
  2383                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2384                           
  2385                           
  2386                           ;SPI_slave.c: 90:     spiReceiveWait();
  2387  02D5  120A  118A  22DE  120A  118A  	fcall	_spiReceiveWait
  2388  02DA                     i1l855:
  2389                           
  2390                           ;SPI_slave.c: 91:     return(SSPBUF);
  2391  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2392  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2393  02DC  0813               	movf	19,w	;volatile
  2394  02DD                     i1l223:
  2395  02DD  0008               	return
  2396  02DE                     __end_of_spiRead:
  2397                           
  2398                           	psect	text10
  2399  02DE                     __ptext10:	
  2400 ;; *************** function _spiReceiveWait *****************
  2401 ;; Defined at:
  2402 ;;		line 70 in file "SPI_slave.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		None
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2416 ;;      Params:         0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_spiRead
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _spiReceiveWait
  2431  02DE                     _spiReceiveWait:
  2432  02DE                     i1l851:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _spiReceiveWait: []
  2435                           
  2436  02DE                     i1l209:	
  2437                           ;SPI_slave.c: 72:     while ( !SSPSTATbits.BF );
  2438                           
  2439  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2440  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2441  02E0  1C14               	btfss	20,0	;volatile
  2442  02E1  2AE3               	goto	u2_21
  2443  02E2  2AE4               	goto	u2_20
  2444  02E3                     u2_21:
  2445  02E3  2ADE               	goto	i1l209
  2446  02E4                     u2_20:
  2447  02E4                     i1l212:
  2448  02E4  0008               	return
  2449  02E5                     __end_of_spiReceiveWait:
  2450  007E                     btemp	set	126	;btemp
  2451  007E                     wtemp0	set	126
  2452                           
  2453                           	psect	config
  2454                           
  2455                           ;Config register CONFIG1 @ 0x2007
  2456                           ;	Oscillator Selection bits
  2457                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2458                           ;	Watchdog Timer Enable bit
  2459                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2460                           ;	Power-up Timer Enable bit
  2461                           ;	PWRTE = ON, PWRT enabled
  2462                           ;	RE3/MCLR pin function select bit
  2463                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2464                           ;	Code Protection bit
  2465                           ;	CP = OFF, Program memory code protection is disabled
  2466                           ;	Data Code Protection bit
  2467                           ;	CPD = OFF, Data memory code protection is disabled
  2468                           ;	Brown Out Reset Selection bits
  2469                           ;	BOREN = OFF, BOR disabled
  2470                           ;	Internal External Switchover bit
  2471                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2472                           ;	Fail-Safe Clock Monitor Enabled bit
  2473                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2474                           ;	Low Voltage Programming Enable bit
  2475                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2476                           ;	In-Circuit Debugger Mode bit
  2477                           ;	DEBUG = 0x1, unprogrammed default
  2478  2007                     	org	8199
  2479  2007  20C4               	dw	8388
  2480                           
  2481                           ;Config register CONFIG2 @ 0x2008
  2482                           ;	Brown-out Reset Selection bit
  2483                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2484                           ;	Flash Program Memory Self Write Enable bits
  2485                           ;	WRT = OFF, Write protection off
  2486  2008                     	org	8200
  2487  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      7       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_start_adc
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     838
                                              6 BANK0      1     1      0
                          _Select_ch
                              _setup
                          _start_adc
                           _start_ch
 ---------------------------------------------------------------------------------
 (1) _start_ch                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _start_adc                                            6     3      3     316
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     478
                         _config_osc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_osc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Select_ch                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0      30
                                              1 COMMON     6     6      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Select_ch
   _setup
     _config_osc
     _spiInit
   _start_adc
   _start_ch

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Aug 12 11:24:17 2021

            _SSPSTATbits 0094                       l74 02B6                      l120 00BF  
                    l201 0250                      l122 00C2                      l131 0102  
                    l123 00C5                      l132 0107                      l124 00C8  
                    l140 0132                      l205 02CF                      l133 010C  
                    l141 0136                      l206 02D4                      l134 0129  
                    l126 00F9                      l150 015A                      l142 013A  
                    l151 015E                      l143 013E                      l160 0028  
                    l152 0162                      l144 0142                      l161 002D  
                    l129 00FD                      l145 0146                      l153 019A  
                    l170 005A                      l162 0032                      l146 014A  
                    l138 012E                      l171 005F                      l163 0037  
                    l147 014E                      l172 0064                      l164 003C  
                    l148 0152                      l173 0069                      l165 0041  
                    l157 001E                      l149 0156                      l174 00B2  
                    l166 0046                      l167 004B                      l159 0023  
                    l168 0050                      l169 0055                      l193 024F  
                    u200 00F5                      u201 00F4                      u240 02C3  
                    u241 02C2                      u250 01C3                      u307 00AC  
                    u251 01C2                      u260 01C7                      u261 01C6  
                    u190 00E8                      u270 01CC                      u191 00E7  
                    u271 01CB                      u287 01EF                      u297 00BB  
                    _isr 0251                      fsr0 0004                     l1201 01FE  
                   l1211 021D                     l1203 0203                     l1213 0224  
                   l1205 020A                     l1215 0229                     l1207 020F  
                   l1209 0216                     l1219 0230                     l1501 02AE  
                   l1261 00F5                     l1253 00CB                     l1503 02AF  
                   l1255 00E3                     l1247 00B6                     l1511 01BD  
                   l1505 02B0                     l1265 0111                     l1257 00E8  
                   l1249 00B7                     l1521 01D6                     l1513 01C3  
                   l1291 006E                     l1507 02B3                     l1259 00F0  
                   l1275 012D                     l1531 01F2                     l1523 01DD  
                   l1515 01C7                     l1293 00A8                     l1533 01F5  
                   l1525 01E1                     l1517 01CC                     l1509 019B  
                   l1295 00AF                     l1287 001D                     l1199 01FD  
                   l1279 0166                     l1527 01E7                     l1519 01D0  
                   l1481 02C3                     l1529 01EB                     l1483 02C7  
                   l1491 0294                     l1485 02C9                     l1493 0295  
                   l1487 02CE                     l1479 02BA                     l1495 0298  
                   l1497 029F                     l1489 0290                     l1691 0238  
                   l1499 02A8                     l1693 0076                     l1685 016E  
                   l1687 00D5                     l1689 011B                     ?_isr 0070  
                   i1l60 0287                     i1l58 0284                     u2_20 02E4  
                   u2_21 02E3                     u5_20 0257                     u5_21 0256  
                   _main 019B                     btemp 007E                     start 000E  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l212 02E4                    i1l223 02DD                    i1l215 02EA  
                  i1l209 02DE                    i1l851 02DE                    i1l853 02D5  
                  i1l941 026D                    i1l933 0251                    i1l855 02DA  
                  i1l935 0257                    i1l945 0274                    i1l937 025F  
                  i1l859 02E6                    i1l939 0266                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _SSPIF 0063                    _setup 0290                    pclath 000A  
        __end_of_spiInit 02D5          __end_of_spiRead 02DE                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01FA  
                 ??_main 0026                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1695 027C                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
     __size_of_Select_ch 0099             start_adc@isr 0020                   saved_w 007E  
       __end_of_spiWrite 02EB                ??_spiInit 0023                ??_spiRead 0070  
       __end_of_start_ch 019B  __end_of__initialization 0016           config_osc@frec 0022  
         __pcstackCOMMON 0070            __end_of_setup 02B7               _canal_flag 0027  
                ??_setup 0024        __end_of_Select_ch 00B3               __pbssBANK0 0027  
             __pmaintext 019B               __pintentry 0004  __size_of_spiReceiveWait 0007  
             _config_osc 01FA       __size_of_start_adc 0077                  _SSPSTAT 0094  
              ?_spiWrite 0070                ?_start_ch 0070                _ANSELbits 0188  
                __ptext1 012A                  __ptext2 00B3                  __ptext3 0290  
                __ptext4 02B7                  __ptext5 01FA                  __ptext6 001A  
                __ptext7 0251                  __ptext8 02E5                  __ptext9 02D5  
       Select_ch@channel 0022             __size_of_isr 003F            start_adc@Vref 0021  
          start_adc@frec 0025                  _spiInit 02B7                  _spiRead 02D5  
   end_of_initialization 0016               ??_spiWrite 0070        __end_of_start_adc 012A  
             ??_start_ch 0020                _TRISAbits 0085              ?_config_osc 0070  
            spiWrite@dat 0070           _spiReceiveWait 02DE      start_initialization 0011  
            __end_of_isr 0290               isr@comando 0076                _Select_ch 001A  
 __end_of_spiReceiveWait 02E5      __size_of_config_osc 0057              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020               ?_Select_ch 0070  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006        __size_of_start_ch 0071  
               ?_spiInit 0020                 ?_spiRead 0070           __size_of_setup 0027  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
        start_ch@channel 0022       spiInit@sDataSample 0020                 _PIR1bits 000C  
        start_adc@justRL 0022               _ADCON0bits 001F               _ADCON1bits 009F  
              _start_adc 00B3             ??_config_osc 0020              ??_Select_ch 0020  
     __end_of_config_osc 0251               ?_start_adc 0020               _ANSELHbits 0189  
               __ptext10 02DE         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 005F                 _var_adc0 0078                 _var_adc1 0077  
               _spiWrite 02E5             spiInit@sType 0023                 _start_ch 012A  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F              ??_start_adc 0023  
